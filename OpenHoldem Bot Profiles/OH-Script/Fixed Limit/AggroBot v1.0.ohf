##2009-11-25 20:46:00##

##notes##
// AggroBot v1.0 - Limit Grinder - 10-Max.

// by SwordFish.

##dll##


##bankroll##
0.000000

##defcon##
0.500000

##rake##
0.000000

##nit##
20000

##f$alli##
0                                 // default is: can't go all-in

##f$swag##
0                                 // default is: no stated wagers

##f$srai##
0                                 // default is: no stated raises

##f$rais##
     f$norais ? 0 :                                    // don't raise rules

   (

   [ br==1 && islist1 ]                                // raise always

|| [ br==1 && islist0 && (f$DP==1||f$DP==5) ]          // raise SB, late

|| [ br>=2 && prwin >= 1.00 ]                          // dead nuts

|| [ br>=2 && prtie >= 1.00 ]                          // sure push

|| [ br>=2 && prlos <= 0.00 ]                          // can't lose

|| [ br>=2 && f$israis ]                               // raise made hands (aggressive)

|| [ br>=2 && f$evrais > f$evcall && f$evrais>pot/2 ]  // majority share

   )

##f$call##
0                                                                // default is: do not call

|| [ call  <= 0.00 ]                                             // zero call amount (check)

|| [ br==1 && islist0 && (f$DP==2||f$DP==3||f$DP==4) ]           // call BB, early, middle

|| [ br==1 && islist2 && (f$DP==1||f$DP==2||f$DP==4||f$DP==5) ]  // call SB, BB, middle, late

|| [ br==1 && islist3 && (f$DP==1||f$DP==2||f$DP==5) ]           // call SB, BB, late

|| [ br>=2 && prwin >= 0.90 ]                                    // call near nuts

|| [ br>=2 && prtie >= 1.00 ]                                    // sure push

|| [ br>=2 && prlos <= 0.00 ]                                    // can't lose

|| [ br>=2 && f$iscall ]                                         // general calls

|| [ br>=2 && f$draws ]                                          // call good draws

|| [ br>=2 && f$evcall > pot / nplayersdealt ]                   // equal share

##f$prefold##
0                                  // default is: do not pre-fold any cards.

##f$rebuy##


##f$delay##
0                                  // default is: do not delay the action.

##f$chat##
0                                  // default is: do not chat.

##f$P##
(nopponentsplaying<=0) ? 1 :

nopponentsplaying + defcon*nopponentsfolded

// number of opponents for the prwin simulation.

##f$play##
//------------------------------------------------------------------------
//    DISABLED RULE(S)
!0                       ? -1 :  // 0=disabled 1=enabled 
!f9                      ? -1 :  // enabled when f9 is pressed 
(elapsed%4)              ? -1 :  // disabled 3 out of 4 seconds 


//------------------------------------------------------------------------
//    LEAVE RULE
0                                // 0=off 1=on 
&& issittingout                  // i am sitting out 
&& elapsedhand >= 600            // 10 minutes since end of last hand 
&& elapsedauto >= 600            // 10 minutes since autoplayer has acted 

                         ? -2 :  // leave the table 

//------------------------------------------------------------------------
//    SITIN RULE
0                                // 0=off 1=on 
&& issittingout                  // i am sitting out 
&& (br==2 || br==3)              // it is the flop or turn 
&& nopponentsdealt>=6            // 6 or more opponents 
&& nchairsdealtright==2          // i am about to be big blind 

                         ?  1 :  // sitin 

//------------------------------------------------------------------------
//    SITOUT RULE
0                                // 0=off 1=on 
&& issittingin                   // i am sitting in 
&& (br==2 || br==3)              // it is the flop or turn 
&& nopponentsdealt<=5            // 5 or less opponents 

                         ?  0 :  // sitout 

//------------------------------------------------------------------------
-1 // disabled

##f$test##


##f$debug##
                 = elapsed

                 = sblind
                 = bblind
                 = bet

                 = call
                 = currentbet
                 = balance

                 = f$evcall
                 = f$evrais

                 = potplayer
                 = potcommon
                 = pot
                 = rake

                 = chair
                 = handrank169
                 = pokerval
                 = prwin
                 = prlos
                 = prtie
                 = nopponents

             0.5 = defcon 

##list0##
JJ  TT  99

AKo AQs AQo AJs AJo ATs

KQs KQo KJs

##list1##
AA  KK  QQ

AKs

##list2##
88  77  66  55

ATo A9s A8s A7s A6s A5s

KJo KTs K9s

QJs QJo QTs Q9s

JTs J9s

T9s

##list3##
44  33  22

A4s A3s A2s

KTo QTo JTo

##f$evrais##
0                                   // start with zero

// DEBITS HERE

- call                              // calling cost

- bet                               // raising cost

// CREDITS HERE

+  (

      pot                           // current pot

   + (call+bet*2)                   // my call my bet and a call (minimum)

   + (raisshort-call-bet*2)         // additional callers
   
   * nplayersplaying/nplayersdealt  // raise looser against more players (0.90% to 0.10%)

   )

   * (prwin+prtie/2)                // adjust for winning chances
   
   * (1+rake)                       // adjust for rake

##f$evcall##
0                                   // start with zero

// DEBITS HERE

- call                              // calling cost



// CREDITS HERE

+  (

      pot                           // current pot

   +  call                          // my call (minimum)

   + (callshort-call)               // additional callers

   * nplayersplaying/nplayersdealt  // call looser against more players (0.90% to 0.10%)

   )

   * (prwin+prtie/2)                // adjust for winning chances
  
   * (1+rake)                       // adjust for rake

##f$DP##
// SB=1 BB=2 Early=3 Middle=4 Late=5

dealposition==1 ? 1:
dealposition==2 ? 2:

nplayersdealt==10 ? (dealposition==3 ? 3 :
                     dealposition==4 ? 3 :
                     dealposition==5 ? 3 :
                     dealposition==6 ? 4 :
                     dealposition==7 ? 4 :
                     dealposition==8 ? 4 :
                     dealposition==9 ? 5 :
                     dealposition==10? 5 : 0): 

nplayersdealt==9 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 3 :
                     dealposition==5 ? 3 :
                     dealposition==6 ? 4 :
                     dealposition==7 ? 4 :
                     dealposition==8 ? 5 :
                     dealposition==9 ? 5 : 0):

nplayersdealt==8 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 3 :
                     dealposition==5 ? 4 :
                     dealposition==6 ? 4 :
                     dealposition==7 ? 5 :
                     dealposition==8 ? 5 : 0):

nplayersdealt==7 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 3 :
                     dealposition==5 ? 4 :
                     dealposition==6 ? 4 :
                     dealposition==7 ? 5 : 0):
 
nplayersdealt==6 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 4 :
                     dealposition==5 ? 4 :
                     dealposition==6 ? 5 : 0):
                     
nplayersdealt==5 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 4 :
                     dealposition==5 ? 5 : 0):
                     
nplayersdealt==4 ?  (dealposition==3 ? 4 :
                     dealposition==4 ? 5 : 0):
                   
nplayersdealt==3 ?  (dealposition==3 ? 5 : 0):0

##f$israis##
0
|| [ br>=2 && ishipair ]
// player has a high pair.
|| [ br>=2 && rankhiplayer > rankhicommon && ( $AA ||$KK || $QQ || $JJ || $TT || $99 ) ]
// player holds a pocket pair 9's or higher and all cards on board are lower than the pair. 
|| [ br>=2 && istwopair && (pokerval&15)<((pokerval>>4) & 15) ]
// player holds the two highest pairs on board.
|| [ br>=2 && isthreeofakind ]
// player has 3 of a kind.
|| [ br>=2 && isstraight ]
// player has a straight.
|| [ br>=2 && isflush ]
// player has a flush.
|| [ br>=2 && isfullhouse ]
// player has a fullhouse.
|| [ br>=2 && isfourofakind ]
// player has 4 of a kind.
|| [ br>=2 && isstraightflush ]
// player has a straight flush.
|| [ br>=2 && isroyalflush ]
// player has a royal flush.

##f$iscall##
0
// call if I raised and have anything.
|| [br>=2 && didrais && (prwinnow**nopponentsplaying)>.50]
// call weaker hands I couldn't bet and only 1 bet to call.
|| [br>=2 && (prwinnow**nopponentsplaying)>.55 && nbetstocall<=1]
// call with good hands regardless.
|| [br>=2 && (prwin+prtie)>=(.800-(nopponentsplaying*.025))]

##f$draws##
0
// nut flush draw
|| [(br==2||br==3) && nsuited==4 
    && `((~srankbits&0x7fff)>>srankhiplayer)==0 
    && nsuitedcommon==2
    && nraisbets<=2]

// pair and flush draw
|| [(br==2||br==3) && prwinnow >.40 
   && nsuited==4 && nsuited>nsuitedcommon 
   && isonepair && (pokervalcommon < onepair)
   && nraisbets<=2]

// second nut flush draw
|| [(br==2||br==3) && nsuited==4 
   && `((~srankbits&0x7fff)>>srankhiplayer)==1 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]

// third nut flush draw
|| [(br==2||br==3) && nsuited==4 
   && `((~srankbits&0x7fff)>>srankhiplayer)==2 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]

// good flush draw
|| [(br==2||br==3) && nsuited==4 
   && nsuitedcommon==2 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]

// good straight draw
|| [(br==2||br==3) && nstraight==4 && nstraightcommon <= 2
   && ((1.2/(prwin + prtie/2)-1) < ((pot + (callshort *.3))/call))]

// call draw that was raised
|| [(br==2||br==3) && (didrais||didcall) 
   && ((nsuited==4 && nsuitedcommon==2)||(nstraight==4 && nstraightcommon==2)) 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]

// pair and flush draw
|| [(br==2||br==3) && prwinnow >.40 
   && nsuited==4 && nsuited>nsuitedcommon 
   && isonepair && (pokervalcommon < onepair)
   && (((1.5/prwin)-1) < ((pot + (callshort *.3))/call))]

// pair and straight draw
|| [(br==2||br==3) && prwinnow >.40 
   && nstraight==4 && nstraight>nstraightcommon 
   && isonepair && (pokervalcommon < onepair)
   && (((1.5/prwin)-1) < ((pot + (callshort *.3))/call))]

// straight and flush draw
|| [(br==2||br==3) && nsuited==4 
   && nsuited>nsuitedcommon && nstraight==4 
   && nstraight>nstraightcommon 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]

##f$norais##
0
// don't re-raise if there is an obvious threat on the board.
|| [br>1 && didrais && (
   (pokerval<threeofakind && (nsuitedcommon>=3 || nrankedcommon==2 || nstraightfillcommon<=2)) 
|| (isthreeofakind && (nsuitedcommon>=3 || nstraightfillcommon<=2)) 
|| (isstraight && (nsuitedcommon>=3 || nrankedcommon==2)) 
|| (isflush && nrankedcommon==2)
   )
   ]

