##2009-11-25 20:47:33##

##notes##


##dll##


##bankroll##
0.000000

##defcon##
0.000000

##rake##
0.000000

##nit##
100000

##f$alli##
   0                                     // default is do not alli 

   || [ prwin >= 1.00 ]                  // dead nuts 

   || [ br==1 && islistalli ]            // listed opening hand 

##f$swag##


##f$srai##


##f$rais##
   0                                     // default is do not rais 

   || [ prwin >= 1.00 ]                  // dead nuts 

   || [ prlos <= 0.00 ]                  // can't lose 

   || [ br==1 && islistrais ]            // listed opening hand 

   || [ br==1 && islistcall 
        && ((dealposition/nplayersdealt) // middle and late position 
           >= .50) ] 

   || [ br==1 && islist2 
        && ((dealposition/nplayersdealt) // late position 
           >= .75) ] 

   || [ br==1 && islist3 
        && (dealposition==nplayersdealt)]// dealer 

   || [br == 1 && nopponentsplaying < 3              // just me and the blinds-therefore i am on Button OR a blind 
           &&prwinnow>0.25                        // this will raise on J9o and better 
           &&(ncurrentbets==0  ?1:                // i have  not bet therefore i cant be in a blind as there are only two other opponents 
              ncurrentbets==0.5                   // I am in small blind 
              &&nopponentsplaying==1  ? 1: 0 )]   // Just me and Big Blind 
   || [br == 1 && nopponentsplaying < 3              // just me and the blinds-therefore i am on Button OR a blind 
           &&prwinnow>0.25                        // this will raise on J9o and better 
           &&(ncurrentbets==0  ?1:                // i have  not bet therefore i cant be in a blind as there are only two other opponents 
              ncurrentbets==1                     // I am in small blind 
              &&nopponentsplaying==1  ? 1: 0 )]   // Just me and Big Blind 

   /*|| [ br>=2 && $AK                     // raise with AKs or AKo 
        && ncallbets<=1 ]                // if pot has not been raised*/ 
  
   || [ br==2                            // betting round two 
        && ncallbets<=1                  // pot has not been raised 
        && (prwin*pot)>=nplayersplaying] // equal share 

   || [ br==2                            // betting round two 
        && nrankedcommon==1              // if board not paired 
        && nsuitedcommon<=2              // board not three to a flush 
        && nstraightfillcommon>=3        // board not three to a straight 
        && (prwin*pot)>=nplayersplaying] // equal share 

   || [ br>=2 && betposition==nplayersplaying && ncallbets==0 ] // Bet if no one else has bet in last position 

   || [ br==2 && nrankedcommon==1 && ishiflush ] 

   || [ br==2 && nrankedcommon==1 && isflush ] 

   || [ br==2 && nrankedcommon==1 && ishistraight ] 

   || [ br==2 && nrankedcommon==1 && isthreeofakind ] 

   || [ br==2 && nrankedcommon==1 && istwopair && (pokerval&15)<((pokerval>>4)&15) ] 

   || [ br==2 && nrankedcommon==1 && istwopair && (pokerval&15)>((pokerval>>16)&15) ] 

   || [ br==2 && nrankedcommon==1 && istwopair && (pokerval&15)<((pokerval>>16)&15) && (pokerval&15)>((pokerval>>4)&15) ] 
    
   || [  br==2  &&  nrankedcommon==1  &&  nstraightflush==4  &&  !(srankbits&16386 && srankbits&8196)  &&  isonepair  ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraightflush==4  &&  !(srankbits&16386 && srankbits&8196)  &&  rankloplayer>rankhicommon   ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraightflush==4  &&  !(srankbits&16386 && srankbits&8196)  ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraightflush<=3  &&  nstraightflushfill==1  &&  isonepair  ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraightflush<=3  &&  nstraightflushfill==1  &&  rankloplayer>rankhicommon   ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraightflush<=3  &&  nstraightflushfill==1  ] 

   || [  br==2  &&  nrankedcommon==1  &&  nsuited==4  &&  nsuitedcommon==2  &&  `((~srankbits&0x7fff)>>srankhiplayer)==0 ] 

   || [  br==2  &&  nrankedcommon==1  &&  nsuited==4  &&  nsuitedcommon==3  &&  `((~srankbits&0x7fff)>>srankhiplayer)==0 ] 

   || [  br==2  &&  nrankedcommon==1  &&  nsuited==4  &&  !`((~srankbits&0x7fff)>>srankhiplayer)==0  &&  isonepair  ] 

   || [  br==2  &&  nrankedcommon==1  &&  nsuited==4  &&  !`((~srankbits&0x7fff)>>srankhiplayer)==0 &&  rankloplayer>rankhicommon   ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraight==4  &&  !(rankbits&16386 && rankbits&8196)  &&  isonepair  ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraight==4  &&  !(rankbits&16386 && rankbits&8196)  &&  rankloplayer>rankhicommon   &&  nsuitedcommon==1  ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraight==4  &&  !(rankbits&16386 && rankbits&8196)  &&  nsuitedcommon==1  ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraight==4  &&  !(rankbits&16386 && rankbits&8196)  &&  nsuitedcommon==2  ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraight<=3  &&  nstraightfill==1  &&  !(srankbits&16386 && srankbits&8196)  &&  isonepair  ] 

   || [  br==2  &&  nrankedcommon==1  &&  rankloplayer>rankhicommon   &&  rankhiplayer==14  &&  rankloplayer>=10  &&  !ispair  &&  nsuitedcommon==1 && nstraightcommon==1  ] 

   || [  br==2  &&  nrankedcommon==1  &&  rankloplayer>rankhicommon   &&  rankhiplayer==13  &&  rankloplayer>=10  &&  !ispair  &&  nsuitedcommon==1 && nstraightcommon==1  ] 

   || [ br==2 && nrankedcommon==1 && ishipair && pokerval<twopair && trank==14 && {(trank==$$pr0 && $$pr1>=10)||(trank==$$pr1 && $$pr0>=10)} ] 

   || [ br==2 && nrankedcommon==1 && ishipair && pokerval<twopair && trank==13 && {(trank==$$pr0 && $$pr1>=10)||(trank==$$pr1 && $$pr0>=10)} ] 

   || [ br==2 && nrankedcommon==1 && ishipair && pokerval<twopair && trank<=12 && {(trank==$$pr0 && $$pr1>=10)||(trank==$$pr1 && $$pr0>=10)} ] 

   || [ br==2 && (f$evrais>f$evcall)         // better value to raise than call 
        && ncallbets<=1                  // pot has not been raised 
        && (f$evrais>(pot/2)) ]            // majority share 

   || [ br==2 && (f$evrais>f$evcall)         // better value to raise than call 
        && nrankedcommon==1              // if board not paired 
        && nsuitedcommon<=2              // board not three to a flush 
        && nstraightfillcommon>=3        // board not three to a straight 
        && (f$evrais>(pot/2)) ]            // majority share 

   || [ br==2 && didraisround1           // raised round one raise again round two 
        && ncallbets<=1 ]                // if pot has not been raised 

   || [ br==3 && didraisround2           // raised round two raise again round three 
        && ncallbets<=1 ]                // three if pot has not been raised 

   || [ br==4 && didraisround3           // raised round three raise again round four 
        && nopponentsbetting==0 ]        // four if nobody has bet 

   || [ (br==3||br==4) && (f$evrais>0)     // positive expected value to raise 
        && nrankedcommon==1              // if board not paired 
        && nsuitedcommon<=2              // board not three to a flush 
        && nstraightfillcommon>=3        // board not three to a straight 
        && (f$evrais>f$evcall) ]             // better value to raise than call 

   || [ br==4 && ishicard                // round 4 and ishicard 
        && ncallbets==0                  // no bets have been made 
        && betposition==nplayersplaying] // last to bet 
    
   //|| [br==4 && (nopponentsplaying-nopponentschecking)==1 && didchec && ishicard] 



    

##f$call##
   0                                     // default is do not call 

   || [ prwin >=1.00 ]                   // dead nuts 

   || [ call  <= 0.00 ]                  // zero call amount (check) 

   || [ prlos <= 0.00 ]                  // can't lose 

   || [ prtie >= 1.000 ]                 // split pot 

   || [ br==1 && islistcall ]            // listed opening hand 

   || [ br==1 && islist2 
        && ((dealposition/nplayersdealt) // Early position 
           >= .25) ] 

   || [ br==1 && islist3 
        && ((dealposition/nplayersdealt) // middle and late position 
           >= .50) ] 
  
   || [ br==1 && islist4 
        && userchair==dealerchair ]      //On the button 

   || [ br==1 && islist5 && dealposition==1 ] // Small Blinds 
    
   || [ br==1 && nopponentsbetting>=4    // round one and five way pot 
        && ((issuited && isconnector)    // any suited connectors 
        || ispair) ]                     // any pocket pair 


   || [ br==1 && dealposition == 1 
              && ncallbets <= 1 
              && (prwin >= call / pot) 
      ]                                  // call small blind with any playable hand 


   || [ br==2 && 
        (f$evcall>(pot/nplayersdealt)) ]   // equal share 

/*   || [ (br==2||br==3) 
        && (nsuited==4                   // four to a flush 
        || nstraight==4) ]               // four to a straight*/ 
    
   || [ br>=2 && isfullhouse && ((pokerval>>8 )&15) < ((pokerval>>4)&15) && (pcbits&0b11100) ] 

   || [ br==2 && nrankedcommon==1 && isthreeofakind && {nstraightcommon==3||nsuitedcommon==3} ] 

   || [ br==2 && nrankedcommon==1 && istwopair && {nstraightcommon==3||nsuitedcommon==3} ] 

   || [ br==2 && nrankedcommon==1 && ispair && pokerval<twopair && trank>trankcommon ] 

   || [ br==2 && nrankedcommon==1 && ispair && pokerval<twopair && ((pokerval>>8)&15)>trank && ((pokerval>>4)&15)<trank ] 

   || [ br==2 && nrankedcommon==1 && ispair && pokerval<twopair && trank>trankcommon && {nstraightcommon==3||nsuitedcommon==3} ] 

   || [ br==2 && nrankedcommon==1 && ispair && pokerval<twopair && ((pokerval>>8)&15)>trank && ((pokerval>>4)&15)<trank && {nstraightcommon==3||nsuitedcommon==3} ] 

   || [ br==2 && nrankedcommon==1 && ispair && pokerval<twopair && ((pokerval>>8)&15)>trank && ((pokerval>>4)&15)>trank ] 

   || [  br==2  &&  nrankedcommon==1  &&  nsuited==4  &&  nsuitedcommon==2  &&  `((~srankbits&0x7fff)>>srankhiplayer)==1 ] 

   || [  br==2  &&  nrankedcommon==1  &&  nsuited==4  &&  nsuitedcommon==3  &&  `((~srankbits&0x7fff)>>srankhiplayer)==1 ] 
    
   || [  br==2  &&  nrankedcommon==1  &&  nsuited==4  &&  !`((~srankbits&0x7fff)>>srankhiplayer)==0 ] 

   || [  br==2  &&  nrankedcommon==1  &&  nstraight==4  &&  !(rankbits&16386 && rankbits&8196)  &&  nsuitedcommon==3  ] 

   || [  br==2  &&  nrankedcommon==1  &&  rankloplayer>rankhicommon   &&  nsuitedcommon==2  ] 

   || [ br==2 && nrankedcommon==1 && isstraight ] 

   || [ br==2 && nrankedcommon==1 && isstraight && nsuitedcommon==3 ] 

   || [ br==2 && nrankedcommon==1 && ishipair && pokerval<twopair && trank==14 && {(trank==$$pr0 && $$pr1<=9)||(trank==$$pr1 && $$pr0<=9)} ] 

   || [ br==2 && nrankedcommon==1 && ishipair && pokerval<twopair && trank==13 && {(trank==$$pr0 && $$pr1<=9)||(trank==$$pr1 && $$pr0<=9)} ] 

   || [ br==2 && nrankedcommon==1 && ishipair && pokerval<twopair && trank<=12 && {(trank==$$pr0 && $$pr1<=9)||(trank==$$pr1 && $$pr0<=9)} ] 

   || [ br==2 && nrankedcommon==1 && ishipair && pokerval<twopair && {nstraightcommon==3||nsuitedcommon==3} ] 

   || [ (br==3||br==4) && (f$evcall>0) ]   // positive expected value to call 

   || [ br==2 && nrankedcommon==1 && ismidpair && pokerval<twopair && !ispair && {(trank==$$pr0 && $$pr1>trankcommon)||(trank==$$pr1 && $$pr0>trankcommon)} ] 

   || [ br==2 && nrankedcommon==1 && islopair && pokerval<twopair && !ispair && {(trank==$$pr0 && $$pr1>trankcommon)||(trank==$$pr1 && $$pr0>trankcommon)} ] 

    
   || (br==2 && {nbetsround1>=2 && ((didraisround1>=1 && didcallround1>=1) || (didraisround1==0))}) 
   || (br==3 && {nbetsround2>=2 && ((didraisround2>=1 && didcallround2>=1) || (didraisround2==0))}) 
   || (br==4 && {nbetsround3>=2 && ((didraisround3>=1 && didcallround3>=1) || (didraisround3==0))}) 


// Backup of rais tab rules to insure call if four bet 

   || [ br==1 && islistrais ]            // listed opening hand 

   || [ br==2 && (f$evrais>f$evcall)         // better value to raise than call 
        && (f$evrais>(pot/2)) ]            // majority share 

   || [ br==2 && 
        (prwin*pot)>= nplayersplaying ]  // equal share 

   || [ (br==3||br==4) && (f$evrais>0)     // positive expected value to raise 
        && (f$evrais>f$evcall) ]             // better value to raise than call 
  
   || [ br>=2 && $AK ] 

##f$prefold##


##f$rebuy##


##f$delay##


##f$chat##


##f$P##

(nopponentsplaying==0) ? 0 : 

nopponentsplaying + defcon*nopponentsfolded 

##f$play##
/*// DISABLED CONDITION 

(elapsed%4 || br<2 || 3<br) ? -1 :        // 4 second cycle during flop and turn 

// PLAY CONDITION 

// [ -1 ]                                 // disabled by default 

   [ nopponentsdealt>=5 ]                  // play against 5 opponents or more 
*/ 
   (elapsed%4 || br<2 || 3<br) ? -1 :     // 4 second cycle during flop and turn 

   [ nopponentsdealt>=5                   // play against 5 opponents or more 
     && balance>=                         // maintain minimum balance of 
     (bblind*5)+                          // 5 big blinds plus 
     ((5*bblind)*(elapsed/3600))          // 2.5 big bets per hour played 
     &&  elapsed < 15000                  // restrict play to just over 4 hours 
     && balance < (bblind*200) ]          // and stop when/if goal reached 

##f$test##


##f$debug##
            -900 = ((((balance-25) / elapsed)*3600)/(bblind*2)) //Big Bets/Hour 
                 = userchair 
             777 = elapsed 

               0 = sblind 
               0 = bblind 
               0 = bet 

                 = call 
                 = currentbet 
               6 = balance 

               0 = f$evcall 
               0 = f$evrais 

                 = potplayer 
               0 = potcommon 
               0 = pot 
                 = rake 

                 = chair 
            1780 = handrank2652 
        16989010 = pokerval 
               0 = prwin 
               1 = prlos 
               0 = prtie 
               5 = nopponents 

##list0##
AA  KK  QQ  JJ  TT  99  88  77  
AKs AQs AJs ATs A9s KQs KJs KTs QJs QTs JTs 
KA  QA  

##list1##
AA  KK  QQ  JJ  TT  99  
AKs AQs 
KA  QA  

##list2##
AA  KK  QQ  JJ  TT  99  88  77  66  
AKs AQs AJs ATs A9s A8s KQs KJs KTs K9s QJs QTs Q9s JTs 
KA  QA  QK  JA  JK  JQ  TA  

##list3##
AA  KK  QQ  JJ  TT  99  88  77  66  55  
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s KQs KJs KTs K9s K8s K7s QJs QTs Q9s JTs J9s T9s 98s 
KA  QA  QK  JA  JK  JQ  TA  TK  

##list4##
AA  KK  QQ  JJ  TT  99  88  77  66  55  44  
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s KQs KJs KTs K9s K8s K7s K6s QJs QTs Q9s Q8s JTs J9s J8s T9s T8s 98s 87s 86s 76s 65s 
KA  QA  QK  JA  JK  JQ  TA  TK  TQ  TJ  9A  9K  9Q  9J  9T  8A  8K  8Q  7A  7K  7Q  6A  5A  4A  

##list5##
AA  KK  QQ  JJ  TT  99  88  77  66  55  44  33  22  
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s QJs QTs Q9s Q8s Q7s JTs J9s J8s J7s T9s T8s T7s 98s 97s 87s 86s 76s 75s 74s 65s 64s 63s 54s 
KA  QA  QK  JA  JK  JQ  TA  TK  TQ  TJ  9A  9K  9Q  9J  9T  8A  8K  8Q  8J  8T  89  7A  7K  7Q  7J  7T  79  78  6A  6K  6Q  6J  69  68  67  5A  5K  5Q  57  4A  4K  4Q  3A  3K  3Q  2A  2K  2Q  

##list6##


##list7##
AA  

##f$evrais##
/*0                                        // start with zero 

// DEBITS HERE 

- call                                   // calling cost 
- bet                                    // raising cost 

// CREDITS HERE 

+  ( 

      pot                                // current pot 

   + (call+bet*2)                        // my call my bet and a call (minimum) 

   + (raisshort-call-bet*2)              // additional callers 
//    * 0.00                             //   0% (tight) 
      * 0.50                             //  50% (guess) 
//    * 1.00                             // 100% (loose) 

   ) 

   * (prwin+prtie/2)                     // adjust for winning chances 
   * (1+rake)                            // adjust for rake 
*/ 
0                 // start at 0 
- f$finalpayrais  // my maximum showdown cost 
+ f$finalpotrais  // the raising showdown pot 
* (prwin+prtie/2) // my winning chances 
* (1+rake)        // the house rake 

##f$evcall##
/*0                                        // start with zero 

// DEBITS HERE 

- call                                   // calling cost 


// CREDITS HERE 

+  ( 

      pot                                // current pot 

   +  call                               // my call (minimum) 

   + (callshort-call)                    // additional callers 
//    * 0.00                             //   0% (tight) 
      * 0.50                             //  50% (guess) 
//    * 1.00                             // 100% (loose) 

   ) 

   * (prwin+prtie/2)                     // adjust for winning chances 
   * (1+rake)                            // adjust for rake 
*/ 
0                 // start at 0 
- f$finalpaycall  // my maximum showdown cost 
+ f$finalpotcall  // the calling showdown pot 
* (prwin+prtie/2) // my winning chances 
* (1+rake)        // the house rake 

