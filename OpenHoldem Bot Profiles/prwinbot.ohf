##2015-03-26 04:44:05##

##notes##
 

##dll##
 

##f$alli##
 prwin > 0.7 ? 1 : 0



##f$betpot_2_1##
 

##f$betpot_1_1##
 

##f$betpot_3_4##
 

##f$betpot_2_3##
 

##f$betpot_1_2##
 

##f$betpot_1_3##
 

##f$betpot_1_4##
 

##f$betsize##
// Betsize in dollars, raise-to semantics.
// OpenHoldem will auto-adapt the betsize to the casinos input-requirements.
// Please define your tablemaps "swagtextmethod" to configure this feature.
f$rais > 0 ? prwin * 10 * bblind : 0


##f$rais##
betround = 1 && prwin > 0.2 
|| betround = 2 && prwin > 0.5
|| betround = 3 && prwin > 0.7
|| betround = 4 && prwin > 0.8 ? 1 : 0

##f$call##
betround == 1 && prwin > 0.2 ? 1 : 
betround == 2 && prwin > 0.3 ? 1 : 
betround == 3 && prwin > 0.4 ? 1 : 
betround == 4 && prwin > 0.7 ? 1 :
call <= (bblind * 3) 


##f$check##
// Check whenever it is free to call
(call == 0)





##f$fold##
// f$fold should alwazs evaluate to true per default
// for auto-check-folding instead of time-outs.
1





##f$sitin##
 

##f$sitout##
 

##f$leave##
 

##f$autopost##
 

##f$close##
 

##f$rebuy##
// f$rebuy should evaluate to the target-amount in dollars.
// This value will be passed to the rebuy-script as a parameter.
0






##f$prefold##
 

##f$chat##
 

##f$delay##
// Autoplayer-delay in milli-seconds
0






##f$allin_on_betsize_balance_ratio##
// Allin if betsize is more than X% of our total balance (including currentbet).
// This affects f$betsize and all f$betpot_X_Y_ functions.
//  0.00 =  0% = disabled
//  0.50 = 50%
0.00






##f$ini_function_on_startup##
 

##f$ini_function_on_connection##
 

##f$ini_function_on_handreset##
 

##f$ini_function_on_new_round##
 

##f$ini_function_on_my_turn##
 

##f$ini_function_on_heartbeat##
 

##f$prwin_number_of_opponents##
// "Reasonable" default to get standard PrWin running for beginners,
// Works even with "no opponents".
(nopponentsplaying==0) ? 0 : //zero if no opponents
(betround>1)? nopponentsplaying : //just use actual opponents post-flop
(handsplayed<10)? nopponentsplaying : //fallback until floppct becomes reliable
(nopponentscalling+nopponentstruelyraising+nopponentschecking*floppct+0.49)<1 ? 1 :
//this should never happen, but .....
nopponentscalling+nopponentstruelyraising+nopponentschecking*floppct+0.49
//make anestimate for opponents who have still to act






##f$prwin_number_of_iterations##
// "Reasonable" default to get PrWin running for beginners.
// Large enough to get usable results,
// small enough to save CPU-time.
1000





##f$prwin_topclip##
 

##f$prwin_mustplay##
 

##f$prwin_willplay##
  handsplayed<10?72:(180*floppct)>(f$prwin_number_of_opponents*2+1)?
180*floppct:f$prwin_number_of_opponents*2+1





##f$prwin_wontplay##
  f$prwin_willplay*1.4









##f$icm_prize1##
// f$icm_prizeX functions are used to configure the payout-structure in tournaments.
// The sum of all f$icm_prizeX functions should be 1.00 (= 100%).
// Default to get things going: the winner takes it all.
1.00






##f$icm_prize2##
 

##f$icm_prize3##
 

##f$icm_prize4##
 

##f$icm_prize5##
 

##f$icm_prize6##
 

##f$icm_prize7##
 

##f$icm_prize8##
 

##f$icm_prize9##
 

##f$test##
 

##f$debug##
 

