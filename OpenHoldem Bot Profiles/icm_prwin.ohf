##2015-06-07 13:35:10##

##notes##
 

##dll##
 

##f$alli##
f$calc_icm_call
||
f$calc_icm_push ? 1 : 0



##f$betpot_2_1##
 

##f$betpot_1_1##
 

##f$betpot_3_4##
 

##f$betpot_2_3##
 

##f$betpot_1_2##
 

##f$betpot_1_3##
 

##f$betpot_1_4##
 

##f$betsize##
// Betsize in dollars, raise-to semantics.
// OpenHoldem will auto-adapt the betsize to the casinos input-requirements.
// Please define your tablemaps "swagtextmethod" to configure this feature.


##f$rais##
 

##f$call##
 

##f$check##
// Check whenever it is free to call
(call == 0)





##f$fold##
// f$fold should alwazs evaluate to true per default
// for auto-check-folding instead of time-outs.
1





##f$sitin##
 

##f$sitout##
 

##f$leave##
 

##f$autopost##
 

##f$close##
 

##f$rebuy##
// f$rebuy should evaluate to the target-amount in dollars.
// This value will be passed to the rebuy-script as a parameter.
0






##f$prefold##
 

##f$chat##
 

##f$delay##
// Autoplayer-delay in milli-seconds
0






##f$allin_on_betsize_balance_ratio##
// Allin if betsize is more than X% of our total balance (including currentbet).
// This affects f$betsize and all f$betpot_X_Y_ functions.
//  0.00 =  0% = disabled
//  0.50 = 50%
0.00






##f$ini_function_on_startup##
 

##f$ini_function_on_connection##
 

##f$ini_function_on_handreset##
 

##f$ini_function_on_new_round##
 

##f$ini_function_on_my_turn##
 

##f$ini_function_on_heartbeat##
 

##f$prwin_number_of_opponents##
// "Reasonable" default to get standard PrWin running for beginners,
// Works even with "no opponents".
nopponentsplaying + 1





##f$prwin_number_of_iterations##
// "Reasonable" default to get PrWin running for beginners.
// Large enough to get usable results,
// small enough to save CPU-time.
1000





##f$prwin_topclip##
 

##f$prwin_mustplay##
 

##f$prwin_willplay##
169 * floppct





##f$prwin_wontplay##
 

##f$icm_prize1##
// f$icm_prizeX functions are used to configure the payout-structure in tournaments.
// The sum of all f$icm_prizeX functions should be 1.00 (= 100%).
// Default to get things going: the winner takes it all.
0.33






##f$icm_prize2##
 0.33





##f$icm_prize3##
 0.33





##f$icm_prize4##
 

##f$icm_prize5##
 

##f$icm_prize6##
 

##f$icm_prize7##
 

##f$icm_prize8##
 

##f$icm_prize9##
 

##f$test##
 

##f$debug##
 

##f$calc_fold_equity##
//riverpct > 0 && handsplayed >10 ? 1 - ((tablepfr - riverpct) * nchairsdealtleft) : 0
0.1




##f$calc_icm_call##
[
	[
		[
			call > balance
		]

		||

		[
			NumberOfOpponentsAllin == nopponentsplaying
		]
	]

	&&

	[
		[		prwin * icm_callwin + prlos * icm_calllose]

		>

		[		prwin * icm_callwin > icm_fold	]
	]

]
? 1 : 0































































##f$calc_icm_push##
//Scenario (a.i). Push, get called, and lose. == 1 * (prob of getting called) * (prob of losing) == 1 * 0.20 * (1-0.65) = 0.07. We need to multiply this by our icm_allilose1, which gives us 0.07*0 == 0.
//Scenario (a.ii). Push, get called, and win. = 1 * (prob of getting called) * (prob of winning) == 1 * 0.20 * (0.65) = 0.13. We need to multiply this by our icm_alliwin1, which gives is 0.13 * 1.
//Scenario (a.iii). Push, not get called, and win blinds. = 1 * (prob not get called) = 1 * 0.8 = 0.8. We need to multiply this by our icm_alliwin0, which gives us 0.8 * 0.52 (as we win the extra 2 cents from the small blind) = 0.416.

//So in total our equity for Scenario a is 0 + 0.13 + 0.408 = 0.538.
	[
		[1 * prlos * icm_allilose1 * f$calc_fold_equity	]

		+

		[1 *	prwin * icm_alliwin1 * f$calc_fold_equity	]

		+

		[	1 *	icm_alliwin0 * (1 - f$calc_fold_equity)	]
	]
>
icm_fold ? 1 : 0















