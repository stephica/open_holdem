##2009-11-25 20:47:26##

##notes##
// RockBot v1.0 - Low Limit Bot - by SwordFish. 

// Pre-Flop Strategy by Swordfish, edited from PotBot v1.82 by kasper0v

// Post-Flop Strategy by SwordFish, edited from Winngy_PT_Limit by Winngy

// Outs Counter v9b from Xtions and others, revised by want2learn

// f$strength_straight and other functions / explanations edited by c1borg and Damaged.

##dll##


##bankroll##
0.000000

##defcon##
0.500000

##rake##
0.000000

##nit##
20000

##f$alli##
0                                 // default is: do not go all-in

##f$swag##
0                                 // default is: no stated wagers

##f$srai##
0                                 // default is: no stated raises

##f$rais##
0                                             // default is: do not raise

|| [ f$Fold==1 ? 0 : 0 ]                      // fold rules

|| [ f$NoRaise ? 0 : 0 ]                      // don't raise

|| [ prwin >= 1.00 ]                          // dead nuts

|| [ prtie >= 1.00 ]                          // sure push

|| [ prlos <= 0.00 ]                          // can't lose

|| [ nhandshi==0 ]                            // showdown beats

|| [ f$evrais > f$evcall && f$evrais>pot/2 ]  // majority share
   
|| [ br==1 && f$islistrais ]                  // listed opening hand

|| [ br>=2 && (
   ( f$rais_FTR_BigPot )
|| ( f$rais_FTR_Aggro )
|| ( f$follow_thru>1 )  
|| ( br==4 && nraisbets<2 && f$raise_the_chaser) ) ]

|| [ br>1 && br <4 && ((prwinnow>=.950)||(prwin>=.900)) && nraisbets<=3 ]

|| [ br==4 && prwinnow>=.980 ]

##f$call##
0                                             // default is: do not call

|| [ f$Fold==1 ? 0 : 0 ]                      // fold rules

|| [ call  <= 0.00 ]                          // zero call amount (check)

|| [ prwin >= 1.00 ]                          // dead nuts

|| [ prtie >= 1.00 ]                          // sure push

|| [ prlos <= 0.00 ]                          // can't lose

|| [ nhandshi<=1 ]                            // showdown beats (call near nuts)

|| [ prwin+prtie>=.990 ]                      // call near nuts

|| [ f$evcall > pot / nplayersdealt ]         // equal share

|| [ br==1 && f$islistcall ]                  // listed opening hand
  
|| [ br>1 && didcall && nbetstocall<1 ]

|| [ br>=2 && (
   ( f$call_FTR_BigPot )
|| ( f$DRAWS )                   
|| ( f$GENERAL_HAND_CALLS )
|| ( (didcall||didrais) && !br==4 && nbetstocall<=1 )
|| ( f$follow_thru>0 ) ) ]
   
|| [ br <4 && ((prwinnow>=.950)||(prwin>=.900)) ]
   
|| [ br==4 && prwinnow>=.980 ]

##f$prefold##
0                                  // default is: do not pre-fold any cards.

##f$rebuy##


##f$delay##
0                                  // default is: do not delay the action.

##f$chat##
0                                  // default is: do not chat.

##f$P##
// Number of opponents for the prwin simulation.
(nopponentsplaying<=1) ? 1 :
br==1 ? nopponentsdealt :
br==2 ? ((nplayersround2-1)+((ncallbets*2)-(didraisround2*2))+((nbetsround1-didraisround1)*.8)) :
br==3 ? ((nplayersround3-1)+((ncallbets*2)-(didraisround3*2))+(nbetsround2-didraisround2)+((nbetsround1-didraisround1)*.8)) :
br==4 ? ((nplayersround4-1)+((ncallbets*2)-(didraisround4*2))+(nbetsround3-didraisround3)+(nbetsround2-didraisround2)+((nbetsround1-didraisround1)*.8)) : 1

##f$play##
1 ? -1 :
(elapsed%4)              ? -1 :     // disabled 3 out of 4 seconds 
// (br==2 && balance > 150) ? 0 :
//------------------------------------------------------------------------ 
//************************************************************************** 
                         // leave the table 
//------------------------------------------------------------------------ 
// LEAVE RULE - Game broken up 
1                                   // 0=off 1=on 
&& issittingout                     // sitting out 
&& nopponentsdealt<=2               // super short handed
&& (br==2 || br==3)                 // flop or turn  
? -2 :                              // leave the table 
//------------------------------------------------------------------------ 

// LEAVE RULE - Wait around, but get out before you get booted 
1                                   // 0=off 1=on 
&& issittingout                     // sitting out 
&& elapsedauto>=100                 // dynamic rule  
     *nopponentsdealt               // 100 seconds times opponents dealt
&& (br==2 || br==3)                 // flop or turn  
? -2 :                              // leave the table 
//------------------------------------------------------------------------ 
// SITIN RULE - Based on players 
1                                   // 0=off 1=on 
&& issittingout                     // sitting out
&& (br==2 || br==3)                 // flop or turn 
&& nchairsdealtright==2             // about to be big blind 
&& nopponentsdealt>=5               // 5 or more opponents
 
?  1 :                              // sitin 
//------------------------------------------------------------------------ 

// SITOUT RULE - Based on players 
1                                   // 0=off 1=on 
&& issittingin                      // sitting in
&& br==2 && nopponentsdealt<=5      // Getting short          
?  0 :                              // sitout 
//------------------------------------------------------------------------ 
// SITOUT RULE - based on Time 
0                                   // 0=off 1=on 
&& issittingin                      // sitting in 
&& (br==2 || br==3)                 // flop or turn 
&&  elapsed>21600                   // playing 6 hours
?  0 :                              // sitout 
//************************************************************************** 
-1                                  // disabled

##f$test##


##f$debug##
                 = elapsed

                 = sblind
                 = bblind
                 = bet

                 = call
                 = currentbet
                 = balance

                 = f$evcall
                 = f$evrais

                 = potplayer
                 = potcommon
                 = pot
                 = rake

                 = chair

                 = pokerval
                 = prwin
                 = prlos
                 = prtie
             1.0 = nopponents

             0.5 = defcon

##list1##
AA KK

// Early Tight vs Raise. (Raise).

// 0.90%

##list2##
QQ JJ TT

// Raise from any position, Re-raise if Raised once, but call if already Re-raised.

// 1.36%

##list3##
AKs AKo AQs AJs

// Call against a Raise, Raise without a Raise against.

// 1.81%

##list4##
AQo

// Raise against no Raise from the Late position.

// 0.90%

##list5##
ATs AQo AJo

KQs KQo KJs

// Raise against 'nothing' from the Middle / Late positions.

// 3.62%

##list6##
ATo A9s A8s 

KJs KTs 

QJs

// Raise against 'nothing' from the Late position.

// 2.41%

##list7##
KQs

// Call against one Raise.

// 0.30%

##list8##
77 66 55 44 33 22

QJs

JTs

T9s

// Call from the Late position against a Raise.

// 3.62%

##list9##
99  88  77 

AJo ATs 

KQo KJs KTs 

QJs QTs 

JTs  

// Call against no Raise from any position.

// 4.98%

##list10##
66 55 44 33 22 

ATo A9s A8s A7s A6s A5s A4s A3s A2s 

KJo K9s 

Q9s 

J9s T9s 

98s

// Call against no Raise from the Middle / Late position.

// 7.99%

##list11##
KTo

QJo QTo

JTo

87s 

76s 

65s 

54s

// Call against no Raise from the Late position.

// 4.83%

##list12##
99 88 77 66 55 44 33 22

// Call against a Raise when only one other player has called from the SB position.

// 3.62%

##list13##
99  88  77  66  55  44  33  22

AJo ATs A9s A8s A7s A6s A5s A4s A3s A2s

KQo KJs KTs K9s

QJs QTs Q9s

JTs J9s 

T9s 

98s 

87s 

76s 

65s 

54s

// Call against a Raise from the BB position.

// 12.37%

##list14##
AA  KK  QQ  JJ  TT 

AKo AQo AKs AQs AJs ATs 

KQs KJs

// Raise against 'nothing' from the SB / BB positions.

// 5.88%

##list15##
99 88 77 66 55 44 33 22

AJo ATo ATs A9s A8s A7s A6s A5s A4s A3s A2s

KQo KJs KJo KTs KTo K9s

QJs QJo QTs QTo Q9s

JTs JTo J9s 

T9s 

98s

87s

76s

65s

54s

// Call against 'nothing' from the SB position. 'looselist'.

// 17.80%

##list16##
AA KK QQ JJ TT 

AKs AKo AQs AJo 

KQs

// Call against a Raise and a Re-raise from any position.

// 4.98%

##list17##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 

AKs AKo AQs AQo AJs ATs 

KQs KJs KTs 

QJs 

JTs

// Call against a Raise from any position.

// 10.41%

##list18##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 

AKs AKo AQs AQo AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s 

KQs KJs KTs 

QJs QTs 

JTs

T9s

98s

87s

76s

// Call against a Raise from the Late position.

// 14.33%

##list19##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 

AKs AKo AQs AQo AJs AJo ATs ATo A9s A8s A7s A6s A5s A4s A3s A2s

KQs KQo KJs KJo KTs K9s 

QJs QTs Q9s 

JTs J9s 

T9s 

98s

// Call from any position.

// 18.25%

##list20##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22

AKs AKo AQs AQo AJs AJo ATs ATo A9s A8s A7s A6s A5s A4s A3s A2s 

KQs KQo KJs KJo KTs KTo K9s K8s K7s K6s K5s K4s K3s K2s 

QJs QJo QTs QTo Q9s Q8s 

JTs JTo J9s J8s J7s 

T9s T8s

98s 97s 

87s 86s

76s 

65s 64s 

54s 53s 

43s

// Call from the Late position.

// 27.90%

##list21##
AA KK QQ JJ TT 99

AKs AKo AQs AJs

KQs

// Raise against a Raise from any position.

// 4.83%

##list22##
AQo AJo ATs 

KJs KQo

// Raise from any position.

// 3.32%

##list23##
88 

AKs AQs AJs ATs A9s A8s 

KQs KJs KTs K9s 

QJs 

JTs

// Raise from the Late position.

// 4.07%

##list24##
AA KK QQ JJ TT 99 

AKs AKo AQs AQo AJs 

KQs KJs

// Raise from SB / BB positions.

// 6.03%

##list25##
JJ TT 99 

AKo AQs AQo AJs ATs 

KQs KJs

// Call vs Raise from any position with more than 30% joining in.

// 4.68%

##list26##
AA KK QQ JJ TT 99 88 77

AK AQ AJ ATs ATo A9s A9o A8s A8o A7s A7o A6s A6o A5s A4s A3s A2s

KQs KQo KJs KJo KTs KTo K9s

QJs QJo QTs QTo Q9s

//Shorthanded: Call against a Raise, Raise without a Raise against.

// 20.21%

##f$evrais##
0                                // start with zero

// DEBITS HERE

- call                           // calling cost
- bet                            // raising cost

// CREDITS HERE

+  (

      pot                        // current pot

   + (call+bet*2)                // my call my bet and a call (minimum)

   + (raisshort-call-bet*2)      // additional callers
      * 0.00                     //   0% (tight)
//    * 0.50                     //  50% (guess)
//    * 1.00                     // 100% (loose)

   )

   * (prwin+prtie/2)             // adjust for winning chances
   * (1+rake)                    // adjust for rake

##f$evcall##
0                                // start with zero

// DEBITS HERE

- call                           // calling cost


// CREDITS HERE

+  (

      pot                        // current pot

   +  call                       // my call (minimum)

   + (callshort-call)            // additional callers
      * 0.00                     //   0% (tight)
//    * 0.50                     //  50% (guess)
//    * 1.00                     // 100% (loose)

   )

   * (prwin+prtie/2)             // adjust for winning chances
   * (1+rake)                    // adjust for rake

##f$islistrais##
// This file is to be changed by anyone, especially SwordFish :)
0
// fullring pre-flop strategy - tight games

|| [ br==1 && islist1 ] // raise and re-raise and re-raise in any game from any position
   
|| [ br==1 && islist2 && nbetstocall <= 2 ] // raise and re-raise from any position

|| [ br==1 && (islist3 || islist4) && nbetstocall <= 1 ] // raise from any position

|| [ br==1 && f$dpm && islist5 && nbetstocall <= 1 ] // raise from middle position

|| [ br==1 && f$dpl && islist5 && nbetstocall <= 1 ] // raise from late position

|| [ br==1 && f$dpl && islist6 && nbetstocall <= 1 ] // raise from late position

|| [ br==1 && f$DP==1 && islist14 && nbetstocall <= 1 ] // raise from SB position

|| [ br==1 && f$DP==2 && islist14 && nbetstocall <= 1 ] // raise from BB position
   
// loose games
   
|| [ br==1 && islist21 && nbetstocall >= 2 ] // raise and re-raise from any position
   
|| [ br==1 && islist22 && nbetstocall <= 1 ] // raise from any position
   
|| [ br==1 && f$dpl && islist23 && nbetstocall <= 1 ] // raise from late position  
   
|| [ br==1 && f$DP==1 && islist24 && nbetstocall <= 1 ] // raise from SB position

|| [ br==1 && f$DP==2 && islist24 && nbetstocall <= 1 ] // raise from BB position

// 6max games
   
|| [ br==1 && nopponentsdealt<=6 && islist26 && nbetstocall<=1 ] // shorthanded: call against a raise, raise without a raise against.

##f$islistcall##
// This file is to be changed by anyone, especially SwordFish :)
0
// fullring pre-flop strategy - tight games

|| [ br==1 && islist2 && nbetstocall <= 2 ] // call v.s. re-raise from any position
   
|| [ br==1 && islist25 && nbetstocall >= 2 && (nopponentsplaying/nplayersdealt) >= 0.35 ] // call v.s. re-raise from any position if more than 30% are joining in
   
|| [ br==1 && islist3 ] // call against a raise, raise without a Raise against.
   
|| [ br==1 && f$dpl && islist4 && nbetstocall<=2 ] // raise against no raise from the late position.
   
|| [ br==1 && f$dpl && islist8 && nbetstocall <= 2 && nplayersplaying>=3 ] // call v.s. raise from late position
   
|| [ br==1 && islist9 && nbetstocall <= 1 ] // call from any position
   
|| [ br==1 && f$dpm && islist10 && nbetstocall <= 1 ] // call from middle position

|| [ br==1 && f$dpl && islist10 && nbetstocall <= 1 ] // call from late position
   
|| [ br==1 && f$dpl && islist11 && nbetstocall <= 1 && nopponentsplaying>=3 ] // call from late position and 3+ players have entered
   
|| [ br==1 && f$DP==1 && islist12 && nbetstocall <= 2 && nopponentsplaying>=2 ] // call v.s. raise from SB position and at least 2 players are in
   
|| [ br==1 && f$DP==2 && islist13 && nbetstocall <= 2 ] // call v.s. raise from BB position
   
|| [ br==1 && f$DP==1 && islist15 && nbetstocall <= 1 ] // call from SB position
   
// loose games
   
|| [ br==1 && islist2 && nbetstocall >= 2 ] // call v.s. re-raise from any position
   
|| [ br==1 && islist25 && nbetstocall >= 2 && (nopponentsplaying/nplayersdealt) >= 0.3 ] // call v.s. re-raise from any position if more than 30% are joining in
   
|| [ br==1 && islist16 && nbetstocall >= 2 ] // call v.s. raise from any position
   
|| [ br==1 && islist17 && nbetstocall <= 2 ] // call v.s. raise from any position
   
|| [ br==1 && f$dpl && islist18 && nbetstocall <= 2 ] // call v.s. raise from late position
   
|| [ br==1 && islist19 && nbetstocall <= 1 ] // call from any position
   
|| [ br==1 && f$dpl && islist20 && nbetstocall <= 1 ] // call from late position

// 6max games
   
|| [ br==1 && nplayersdealt<=6 && islist26 && nbetstocall<=2 ] // shorthanded: call against a raise, raise without a raise against.

##f$NESTR##
//NO EASY STRAIGHT DRAW
(nstraightcommon<=2 && nstraightfillcommon>=3) 
|| (nbetsround1>=2 
    && (     (nstraightfillcommon==1 && nstraightcommon==4 && (`(rankbitscommon&0x007f))==4)   // 6543 
          || (nstraightfillcommon==1 && nstraightcommon==3 && (`(rankbitscommon&0x007c))==4)   // 6542, 6432
       ) 
   )

##f$SAFEBOARD##
[nrankedcommon<2 && 
 nsuitedcommon<3 && 
 nstraightcommon<3 && 
 nstraightfillcommon>1 ]
&& !(br>2 && rankhicommon==14 && rankhicommon>rankhiplayer)

##f$strength_straightflush##
isstraightflush || isroyalflush ?

// Hand strength evaluator - returns a value from 1-5, 5 representing the strongest hand

isroyalflush && !(pokervalcommon&royalflush)                         ? 5 : // Nuts
isstraightflush && nhandshi==0 && !(pokervalcommon&straightflush)    ? 5 : // Nuts 
isstraightflush && !(pokervalcommon&straightflush)                   ? 3 : // I may not have the highest, board does not have a str8flush
isstraightflush && (pokervalcommon&straightflush)                    ? 2 : // I may not have the highest, board does have a str8flush
isroyalflush && (pokervalcommon&royalflush)                          ? 1 : // Chop pot
0

: 0

##f$strength_quads##
isfourofakind ?

isfourofakind && nhandshi==0 && !(pokervalcommon&fourofakind)        ? 5 : // Nuts
isfourofakind && nhandshi==0 && (pokervalcommon&fourofakind)         ? 5 : // Nuts
isfourofakind && !(pokervalcommon&fourofakind)                       ? 3 : // I may not have the highest, board does not have quads
isfourofakind && (pokervalcommon&fourofakind)                        ? 1 : // Board has quads, I don't have best kicker
0

: 0

##f$strength_fullhouse##
isfullhouse ? 

((0
// Board paired, I have pocket pair and top side full house, pocket pair is higher than non-participating board cards  
// e.g. QQ/QTT53
|| [ isfullhouse && ispair && nrankedcommon==2 && !(pokervalcommon&twopair)
  && ((pokerval>>8)&15)>(pokerval&15) && (pcbits&0b11100) && trank==((pokervalcommon>>8)&0xf) ]
// Board paired, I have pocket pair and top side full house, pocket pair is lower than non-participating board cards  
// e.g. QQ/QTTA3
|| [ isfullhouse && ispair && nrankedcommon==2 && !(pokervalcommon&twopair)
  && ((pokerval>>8)&15)>(pokerval&15) && (pcbits&0b11100) && trank<((pokervalcommon>>8)&0xf) ]
// Board paired, I have pocket pair and bottom side full house, pocket pair is higher than non-participating board cards
// e.g. QQ/QKKT6
|| [ isfullhouse && ispair && nrankedcommon==2 && !(pokervalcommon&twopair)
  && ((pokerval>>8)&15)<(pokerval&15) && (pcbits&0b11100) && trank==((pokervalcommon>>8)&0xf) ]
// Board paired, I have pocket pair and bottom side full house, pocket pair is lower than non-participating board cards
// e.g. QQ/QKKA6
|| [ isfullhouse && ispair && nrankedcommon==2 && !(pokervalcommon&twopair)
  && ((pokerval>>8)&15)<(pokerval&15) && (pcbits&0b11100) && trank<((pokervalcommon>>8)&0xf) ]
) ? 5 :

(0
// Board paired, I don't have pocket pair, I have top side full house, pair is higher than non-participating board cards
// e.g. QJ/QQJ53
|| [ isfullhouse && !ispair && nrankedcommon==2 && !(pokervalcommon&twopair)
  && ((pokerval>>8)&15)>(pokerval&15) && (pokerval&0xf)==((pokervalcommon>>8)&0xf) ]
// Board paired, I don't have pocket pair, I have top side full house, pair is lower than non-participating board cards  
// e.g. QJ/QQJA3
|| [ isfullhouse && !ispair && nrankedcommon==2 && !(pokervalcommon&twopair)
  && ((pokerval>>8)&15)>(pokerval&15) && (pokerval&0xf)<((pokervalcommon>>8)&0xf) ]
// Board paired, I don't have pocket pair, I have bottom side full house, pair is higher than non-participating board cards
// e.g. QJ/QJJ53
|| [ isfullhouse && !ispair && nrankedcommon==2 && !(pokervalcommon&twopair)
  && ((pokerval>>8)&15)<(pokerval&15) && (pokerval&0xf)==((pokervalcommon>>8)&0xf) ]
// Board paired, I don't have pocket pair, I have bottom side full house, pair is lower than non-participating board cards
// e.g. QJ/QJJ53
|| [ isfullhouse && !ispair && nrankedcommon==2 && !(pokervalcommon&twopair)
  && ((pokerval>>8)&15)<(pokerval&15) && (pokerval&0xf)<((pokervalcommon>>8)&0xf) ] 
// Board has two pair, I have top trips 
// e.g. QT/QQJJ8 
|| [ isfullhouse && (pokervalcommon&twopair) && 
  ( ((pokervalcommon>>16)&0x0f)==$$pr0 || ((pokervalcommon>>16)&0x0f)==$$pr1 ) ]
) ? 4 :

(0
) ? 3 :

(0
// Board trips, I have pocket pair higher than non-participating board cards
// e.g. QQ/JJJ92
|| [ isfullhouse && ispair && nrankedcommon==3 && (pcbits&0b00011) && $$pr0>((pokervalcommon>>4)&0xf) ]
// Board trips, only one of my hole cards participates, the pair rank is higher than non-participating board cards
// e.g. QT/999T8
|| [ isfullhouse && nrankedcommon==3 && (`(pcbits&0b00011))==1 && (pokerval&0xf)==((pokervalcommon>>4)&0xf) ]
) ? 2 :

(0
// Board trips, I have pocket pair lower than non-participating board cards
// e.g. QQ/JJJK2
|| [ isfullhouse && ispair && nrankedcommon==3 && (pcbits&0b00011) && $$pr0<((pokervalcommon>>4)&0xf) ]
// Board trips, only one of my hole cards participates, the pair rank is lower than non-participating board cards
// e.g. QT/999TK
|| [ isfullhouse && nrankedcommon==3 && (`(pcbits&0b00011))==1 && (pokerval&0xf)<((pokervalcommon>>4)&0xf) ]
// Board has full house
|| [ isfullhouse && (pokervalcommon&fullhouse) ]
) ? 1 : 0 )

: 0

##f$strength_flush##
isflush ?

// Big raise
((
0
|| [ ishiflush && (!(pokervalcommon&flush) || pokerval>pokervalcommon) && nrankedcommon==1 
     && nstraightflushfillcommon>=3 ]  // nuts
) ? 5 :

// Medium raise
(
0
|| [ isflush && `((~srankbits&0x7fff)>>srankhiplayer)<=1 && nrankedcommon==1 && nsuitedcommon<=4 ] // one card can beat my flush
|| [ ishiflush && (!(pokervalcommon&flush) || pokerval>pokervalcommon) && nrankedcommon<=2 
     && nstraightflushfillcommon>=2 ]
) ? 4 :

// Small raise
(
0
|| [ isflush && `((~srankbits&0x7fff)>>srankhiplayer)<=2 && nrankedcommon==1 && nsuitedcommon<=4 ] // two cards can beat my flush
) ? 3 :

// Call
(
0
|| [ isflush && `((~srankbits&0x7fff)>>srankhiplayer)>=3 && nrankedcommon==1 && nsuitedcommon<=4 ] // three or more cards can beat my flush
|| [ isflush && `((~srankbits&0x7fff)>>srankhiplayer)<=2 && nrankedcommon==2 && nsuitedcommon<=4 ] // two or less cards can beat my flush, board paired
) ? 2 :

// Don't call these
(
0
|| [ isflush && `((~srankbits&0x7fff)>>srankhiplayer)>=4 && nsuitedcommon<=4 ] // four or more cards can beat my flush
|| [ isflush && nrankedcommon>=3 ] // board has trips or more
|| [ isflush && pokerval<pokervalcommon && (pokervalcommon&flush) ] // board has flush, my cards don't help
) ? 1 :
0)

// FlushDiscount
- ( 
0
+ (pokervalcommon&twopair?2:0)
)

: 0

##f$strength_straight##
isstraight ?

({0
//Board 3 to a straight, cards in rank 1 and rank 2 (high end)
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>16)&0xf))&&($$pr1==((pokerval>>12)&0xf))) || (($$pr1==((pokerval>>16)&0xf))&&($$pr0==((pokerval>>12)&0xf))))]
//Board 3 to a straight, cards in rank 1 and rank 3
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>16)&0xf))&&($$pr1==((pokerval>>8)&0xf))) || (($$pr1==((pokerval>>16)&0xf))&&($$pr0==((pokerval>>8)&0xf))))]
//Board 3 to a straight, cards in rank 1 and rank 4
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>16)&0xf))&&($$pr1==((pokerval>>4)&0xf))) || (($$pr1==((pokerval>>16)&0xf))&&($$pr0==((pokerval>>4)&0xf))))]
//Board 4 to a straight, card used in rank 1, nut straight with an ace
|| [ isstraight && nstraightfillcommon==1 && ((($$pr0==((pokerval>>16)&0xf))&&($$pr0==14)) || (($$pr1==((pokerval>>16)&0xf))&&($$pr1==14))) ]
//Board 4 to a straight, card used in rank 2, nut straight with a king
|| [ isstraight && nstraightfillcommon==1 && ((($$pr0==((pokerval>>12)&0xf))&&($$pr0==13)) || (($$pr1==((pokerval>>12)&0xf))&&($$pr1==13))) ]
//Board 4 to a straight, card used in rank 3, nut straight with a queen
|| [ isstraight && nstraightfillcommon==1 && ((($$pr0==((pokerval>>8)&0xf))&&($$pr0==12)) || (($$pr1==((pokerval>>8)&0xf))&&($$pr1==12))) ]
//Board 4 to a straight, card used in rank 4, nut straight with a jack
|| [ isstraight && nstraightfillcommon==1 && ((($$pr0==((pokerval>>4)&0xf))&&($$pr0==11)) || (($$pr1==((pokerval>>4)&0xf))&&($$pr1==11))) ]
//Board 4 to a straight, card used in rank 5, nut straight with a ten
|| [ isstraight && nstraightfillcommon==1 && ((($$pr0==((pokerval>>0)&0xf))&&($$pr0==10)) || (($$pr1==((pokerval>>0)&0xf))&&($$pr1==10))) ]
//Board 3 to a straight, nut straights
|| [ isstraight && nstraightfillcommon==2 && rankloplayer>=10 ]
} ? 5 :

{0
//Board 3 to a straight, cards in rank 1 and rank 5
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>16)&0xf))&&($$pr1==((pokerval>>0)&0xf))) || (($$pr1==((pokerval>>16)&0xf))&&($$pr0==((pokerval>>0)&0xf))))]
//Board 3 to a straight, cards in rank 2 and rank 3
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>12)&0xf))&&($$pr1==((pokerval>>8)&0xf))) || (($$pr1==((pokerval>>12)&0xf))&&($$pr0==((pokerval>>4)&0xf))))]
//Board 3 to a straight, cards in rank 2 and rank 4
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>12)&0xf))&&($$pr1==((pokerval>>4)&0xf))) || (($$pr1==((pokerval>>12)&0xf))&&($$pr0==((pokerval>>4)&0xf))))]
} ? 4 :

{0
//Board 3 to a straight, cards in rank 2 and rank 5
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>12)&0xf))&&($$pr1==((pokerval>>0)&0xf))) || (($$pr1==((pokerval>>12)&0xf))&&($$pr0==((pokerval>>0)&0xf))))]
//Board 3 to a straight, cards in rank 3 and rank 4
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>8)&0xf))&&($$pr1==((pokerval>>4)&0xf))) || (($$pr1==((pokerval>>8)&0xf))&&($$pr0==((pokerval>>4)&0xf))))]
//Board 3 to a straight, cards in rank 3 and rank 5
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>8)&0xf))&&($$pr1==((pokerval>>0)&0xf))) || (($$pr1==((pokerval>>8)&0xf))&&($$pr0==((pokerval>>0)&0xf))))]
//Board 3 to a straight, cards in rank 4 and rank 5 (idiot end)
|| [ isstraight && nstraightfillcommon==2 && ((($$pr0==((pokerval>>4)&0xf))&&($$pr1==((pokerval>>0)&0xf))) || (($$pr1==((pokerval>>4)&0xf))&&($$pr0==((pokerval>>0)&0xf))))]
//Board 4 to a straight, card used in rank 1
|| [ isstraight && nstraightfillcommon==1 && (($$pr0==((pokerval>>16)&0xf)) || ($$pr1==((pokerval>>16)&0xf))) ]
//Board 4 to a straight, card used in rank 2
|| [ isstraight && nstraightfillcommon==1 && (($$pr0==((pokerval>>12)&0xf)) || ($$pr1==((pokerval>>12)&0xf))) ]
// Hole cards A5, board 234;
|| [ isstraight && nstraightfillcommon==2 &&(($$pr0==14)&&($$pr1==5))&&(((pokerval>>16)&0xf)<6)]
} ? 3 :

{0
//Board 4 to a straight, card used in rank 3
|| [ isstraight && nstraightfillcommon==1 && (($$pr0==((pokerval>>8)&0xf)) || ($$pr1==((pokerval>>8)&0xf))) ]
//Board 4 to a straight, card used in rank 4
|| [ isstraight && nstraightfillcommon==1 && (($$pr0==((pokerval>>4)&0xf)) || ($$pr1==((pokerval>>4)&0xf))) ]
// Hole cards A(2,3or4), board xx5; look at value of this
|| [isstraight && nstraightfillcommon==2 &&(($$pr0==14)&&($$pr1<=4))&&(((pokerval>>16)&0xf)<6)]
// Hole cards A(>5), board 2345; look at value of this
|| [isstraight && nstraightfillcommon==1 &&(($$pr0==14)&&($$pr1>=6))&&(((pokerval>>16)&0xf)<6)]
} ? 2 :

{0
//Board 4 to a straight, card used in rank 5
|| [ isstraight && nstraightfillcommon==1 && (($$pr0==((pokerval>>0)&0xf)) || ($$pr1==((pokerval>>0)&0xf))) ]
//Board has straight
|| [ isstraight && nstraightfillcommon==0 ]
} ? 1 : 0)

// StraightDiscount
- ( 
0
+(nsuitedcommon>=3)*2 
+(nsuitedcommon>=4) 
+(nrankedcommon>=2) 
+(nrankedcommon>=3) 
+(pokervalcommon&twopair?2:0)
// Negate flush discount if we have a good flush draw 
- ( nsuitedcommon==3 && nsuited==4 && `((~srankbits&0x7fff)>>srankhiplayer)<=2 )
)

: 0

##f$strength_trips##
isthreeofakind ? 

({0
//Board has No Pair and you have top set
|| [ nrankedcommon==1 && ispair && isthreeofakind && rankhiplayer==rankhicommon]

} ? 5 :

{0
//Board has No Pair and you have middle set
|| [ nrankedcommon==1 && ispair && isthreeofakind && rankhiplayer<rankhicommon && rankhiplayer>ranklocommon ] 
 
//Board has Pair and you have Trips w/ good kicker (used as 4th ranked card)
|| [ nrankedcommon==2 && isthreeofakind && ((trank==$$pr0 && $$pr1==((pokerval>>4)&0xf))||(trank==$$pr1 && $$pr0==((pokerval>>4)&0xf))) ] 
} ? 4 :

{0
//Board has Pair and you have Trips w/ moderate kicker (used as 5th ranked card)
|| [ nrankedcommon==2 && isthreeofakind && ((trank==$$pr0 && $$pr1==((pokerval>>0)&0xf))||(trank==$$pr1 && $$pr0==((pokerval>>0)&0xf))) ] 

//Board has No Pair and you have bottom set
|| [ nrankedcommon==1 && ispair && isthreeofakind && rankhiplayer==ranklocommon ] 
//Board not paired catch all
|| [ isthreeofakind && nrankedcommon==1 ]
} ? 3 :

{0
//Board has Pair and you have Trips w/ poor kicker (not used)
|| [ nrankedcommon==2 && isthreeofakind && ((trank==$$pr0 && $$pr1<((pokerval>>0)&0xf))||(trank==$$pr1 && $$pr0<((pokerval>>0)&0xf))) ] 
//Board has 3OAK good kickers
|| [ isthreeofakind && nrankedcommon==3 && rankhiplayer>=13 && rankloplayer>=10 ]
//Board has pair catch all
|| [ isthreeofakind && nrankedcommon==2 ]
} ? 2 :

{0
//Board has 3OAK catch all
|| [ isthreeofakind && nrankedcommon==3 ]
} ? 1 : 0)

// TripsDiscount
- (
0
+(nsuitedcommon>=3)*2
+(nsuitedcommon>=4)
+(!f$NESTR)*2
+(nstraightfillcommon<=1 || nstraightcommon>=4)
)

: 0

##f$strength_twopair##
istwopair ?

({0
 //Board has No Pair and you have Top two pairs
|| [ nrankedcommon==1 && istwopair && (pokerval&15)<((pokerval>>4)&15) ] 
} ? 5 :

{0
//Board has No Pair and you have Top and bottom pair
|| [ nrankedcommon==1 && istwopair && (pokerval&15)<((pokerval>>16)&15) && (pokerval&15)>((pokerval>>4)&15) ] 
//Board has No Pair and you have Middle two pairs
|| [ nrankedcommon==1 && istwopair && (pokerval&15)>((pokerval>>8)&15) && (pokerval&15)>((pokerval>>4)&15) && !(rankloplayer==ranklocommon) ]
//Rainbow board
|| [ istwopair && f$SAFEBOARD ]
} ? 4 :

{0
//Board has Pair and you have Overpair
|| [ nrankedcommon==2 && istwopair && ($$pr0==((pokerval>>16)&0xf) || $$pr1==((pokerval>>16)&0xf)) ] 

|| [ nrankedcommon==2 && istwopair && ispair && $$pr0>trankcommon ] 
//Board has No Pair and you have Bottom two pairs
|| [ nrankedcommon==1 && istwopair && (pokerval&15)>((pokerval>>16)&15) ] 
} ? 3 :

{0
//Board has Pair and you have Underpair
|| [ nrankedcommon==2 && istwopair && ispair && (pokervalcommon < twopair) && $$pr0<trankcommon ] 
//Board has Pair and you have Two pairs w/ good kicker (A-T)
|| [ nrankedcommon==2 && (pokervalcommon < twopair) && istwopair && !ispair && (pokerval&15)>=10 ] 
} ? 2 :

{0
//Board has two pair and you have only two pair
|| [ nrankedcommon==2 && istwopair && (pokervalcommon & twopair) ]
//Board has Pair and you have Two pairs w/ poor kicker (9-2)
|| [ nrankedcommon==2 && (pokervalcommon < twopair) && istwopair && !ispair && (pokerval&15)<=9 ] 
//Catch all
|| [ istwopair ]
} ? 1 : 0) 

// TwoPairDiscount
- (
0
+(nsuitedcommon>=3)*2
+(nsuitedcommon>=4)
+(!f$NESTR)*2
+(nstraightfillcommon<=1 || nstraightcommon>=4)
)

: 0

##f$strength_onepair##
isonepair ? 

((0
//Board has No Pair and you have Overpair 10's or better
|| [ nrankedcommon==1 && ispair && pokerval<twopair && trank>trankcommon && rankloplayer>9] 
//Board has No Pair and you have Top pair Ace w/ good kicker (K-T) 
|| [ nrankedcommon==1 && ishipair && pokerval<twopair && trank==14 && {(trank==$$pr0 && $$pr1>=10)||(trank==$$pr1 && $$pr0>=10)} ] 
//Board has No Pair and you have Top pair King w/ good kicker (A-T) 
|| [ nrankedcommon==1 && ishipair && pokerval<twopair && trank==13 && {(trank==$$pr0 && $$pr1>=10)||(trank==$$pr1 && $$pr0>=10)} ] 
) ? 5 :

(0
//Board has No Pair and you have Overpair 
|| [ nrankedcommon==1 && ispair && pokerval<twopair && trank>trankcommon ] 
//Board has No Pair and you have Top pair Queen or lower w/ good kicker (A-T) 
|| [ nrankedcommon==1 && ishipair && pokerval<twopair && trank<=12 && {(trank==$$pr0 && $$pr1>=10)||(trank==$$pr1 && $$pr0>=10)} ] 
//Board has No Pair and you have Top pair Ace w/ poor kicker (9-2) 
|| [ nrankedcommon==1 && ishipair && pokerval<twopair && trank==14 && {(trank==$$pr0 && $$pr1<=9)||(trank==$$pr1 && $$pr0<=9)} ] 
) ? 4 :

(0
//Board has No Pair and you have Midpair 1 overcard 
|| [ nrankedcommon==1 && ispair && pokerval<twopair && ((pokerval>>8)&15)>trank && ((pokerval>>4)&15)<trank ] 
//Board has No Pair and you have Top pair King w/ poor kicker (9-2) 
|| [ nrankedcommon==1 && ishipair && pokerval<twopair && trank==13 && {(trank==$$pr0 && $$pr1<=9)||(trank==$$pr1 && $$pr0<=9)} ] 
//Board has No Pair and you have Middle pair w/ overcard kicker 
|| [ nrankedcommon==1 && ismidpair && pokerval<twopair && !ispair && {(trank==$$pr0 && $$pr1>trankcommon)||(trank==$$pr1 && $$pr0>trankcommon)} ] 
) ? 3 :

(0
//Board has No Pair and you have Top pair Queen or lower w/ poor kicker (9-2) 
|| [ nrankedcommon==1 && ishipair && pokerval<twopair && trank<=12 && {(trank==$$pr0 && $$pr1<=9)||(trank==$$pr1 && $$pr0<=9)} ] 
//Board has No Pair and you have Midpair 2 overcard 
|| [ nrankedcommon==1 && ispair && pokerval<twopair && ((pokerval>>8)&15)>trank && ((pokerval>>4)&15)>trank ] 
//Board has No Pair and you have Bottom pair w/ overcard kicker 
|| [ nrankedcommon==1 && islopair && pokerval<twopair && !ispair && {(trank==$$pr0 && $$pr1>trankcommon)||(trank==$$pr1 && $$pr0>trankcommon)} ] 
//Board has Pair and you have "Two overcards w/Ace" 
|| [ nrankedcommon==2 && rankloplayer>rankhicommon  && rankhiplayer==14 && rankloplayer>=10 && !ispair ] 
//Board has Pair and you have "Two overcards w/ King" 
|| [ nrankedcommon==2 && rankloplayer>rankhicommon  && rankhiplayer==13 && rankloplayer>=10 && !ispair ] 
) ? 2 :

(0
//Board has No Pair and you have Underpair 
|| [ nrankedcommon==1 && ispair && pokerval<twopair && trank<(pokerval&15) ] 
//Board has No Pair and you have Middle pair w/ poor kicker 
|| [ nrankedcommon==1 && ismidpair && pokerval<twopair && !ispair && {(trank==$$pr0 && $$pr1<trankcommon)||(trank==$$pr1 && $$pr0<trankcommon)} ] 
//Board has No Pair and you have Bottom pair w/ poor kicker 
|| [ nrankedcommon==1 && islopair && pokerval<twopair && !ispair && {(trank==$$pr0 && $$pr1<trankcommon)||(trank==$$pr1 && $$pr0<trankcommon)} ] 
//Board has Pair and you have Two overcards
|| [ nrankedcommon==2 && rankloplayer>rankhicommon ] 
//Board has Pair and you have "One overcard w/Ace (A9-A2)" 
|| [ nrankedcommon==2 && rankhiplayer==14 && pokerval<twopair && rankloplayer<=9 && rankloplayer<rankhicommon ] 
//Board has Pair and you have "One overcard w/ King (K9-K2)" 
|| [ nrankedcommon==2 && rankhiplayer==13 && pokerval<twopair && rankloplayer<=9 && rankloplayer<rankhicommon ] 
//Board has Pair and you have Two small cards 
|| [ nrankedcommon==2 && !ispair && pokerval<twopair && rankhiplayer<=9 ] 
) ? 1 : 0)

// OnePairDiscount
- (
0
+(nsuitedcommon>=3)*2
+(nsuitedcommon>=4)
+(!f$NESTR)*2
+(nstraightfillcommon<=1 || nstraightcommon>=4)
+(nopponentsplaying>2)
+didswag
)

: 0

##f$dpm##
// dynamic middle position
[ betposition/nplayersplaying > (1/2) &&
  betposition/nplayersplaying <=(3/4) &&
  betposition!=nplayersplaying             
]

##f$dpl##
// dynamic late position
[ betposition/nplayersplaying >(3/4) ]

##f$dpd##
// dynamic dealer position
[ betposition==nplayersplaying ]

##f$DP##
// SB=1 BB=2 Early=3 Middle=4 Late=5

dealposition==1 ? 1:
dealposition==2 ? 2:

nplayersdealt==10 ? (dealposition==3 ? 3 :
                     dealposition==4 ? 3 :
                     dealposition==5 ? 3 :
                     dealposition==6 ? 4 :
                     dealposition==7 ? 4 :
                     dealposition==8 ? 4 :
                     dealposition==9 ? 5 :
                     dealposition==10? 5 : 0): 

nplayersdealt==9 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 3 :
                     dealposition==5 ? 3 :
                     dealposition==6 ? 4 :
                     dealposition==7 ? 4 :
                     dealposition==8 ? 5 :
                     dealposition==9 ? 5 : 0):

nplayersdealt==8 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 3 :
                     dealposition==5 ? 4 :
                     dealposition==6 ? 4 :
                     dealposition==7 ? 5 :
                     dealposition==8 ? 5 : 0):

nplayersdealt==7 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 3 :
                     dealposition==5 ? 4 :
                     dealposition==6 ? 4 :
                     dealposition==7 ? 5 : 0):
 
nplayersdealt==6 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 4 :
                     dealposition==5 ? 4 :
                     dealposition==6 ? 5 : 0):
                     
nplayersdealt==5 ?  (dealposition==3 ? 3 :
                     dealposition==4 ? 4 :
                     dealposition==5 ? 5 : 0):
                     
nplayersdealt==4 ?  (dealposition==3 ? 4 :
                     dealposition==4 ? 5 : 0):
                   
nplayersdealt==3 ?  (dealposition==3 ? 5 : 0):0

##f$draw_flop##
br>1 && (
   $$cs0==$$cs1
|| $$cs0==$$cs2
|| $$cs1==$$cs2   
|| ($$cr0-1)==$$cr1   
|| ($$cr0-1)==$$cr2   
|| ($$cr1-1)==$$cr2
|| ($$cr0+1)==$$cr1
|| ($$cr0+1)==$$cr2
|| ($$cr1+1)==$$cr2
|| ($$cr0-2)==$$cr1
|| ($$cr0-2)==$$cr2
|| ($$cr1-2)==$$cr2
|| ($$cr0+2)==$$cr1
|| ($$cr0+2)==$$cr2
|| ($$cr1+2)==$$cr2
|| ($$cr0-3)==$$cr1
|| ($$cr0-3)==$$cr2
|| ($$cr1-3)==$$cr2
|| ($$cr0+3)==$$cr1
|| ($$cr0+3)==$$cr2
|| ($$cr1+3)==$$cr2
        )

##f$rais_FTR_BigPot##
// This file is not to be changed except by Winngy
0
//-----------------------------------------------------------------
|| f$strength_straightflush  >=2 
//-----------------------------------------------------------------
|| f$strength_quads          >=2 
//-----------------------------------------------------------------
|| f$strength_fullhouse      >=3 
|| f$strength_fullhouse      >=2 && nraisbets<=1
//-----------------------------------------------------------------
|| f$strength_flush          >=4 
|| f$strength_flush          >=3 && nraisbets<=1
//-----------------------------------------------------------------
|| f$strength_straight       >=4
|| f$strength_straight       >=3 && nraisbets<=1 
|| isstraight && nstraightfillcommon==2 && nraisbets<=1
//-----------------------------------------------------------------
|| f$strength_trips          >=4 
|| f$strength_trips          >=3 && nraisbets<=1
//-----------------------------------------------------------------
|| f$strength_twopair        >=4 
|| f$strength_twopair        >=3 && nraisbets<=1
//-----------------------------------------------------------------
|| f$strength_onepair        >=5 && (br==2||!didrais)
|| f$strength_onepair        >=4 && nraisbets<=1 
//-----------------------------------------------------------------

##f$call_FTR_BigPot##
// This file is not to be changed except by Winngy
0
//-----------------------------------------------------------------
|| f$strength_straightflush  >=1 
//-----------------------------------------------------------------
|| f$strength_quads          >=2 
//-----------------------------------------------------------------
|| f$strength_fullhouse      >=4 
|| f$strength_fullhouse      >=3 && ncallbets<=2
|| f$strength_fullhouse      >=2 && ncallbets<=1 
|| f$strength_fullhouse      >=2 && (didcall||didrais) && nbetstocall==1
//-----------------------------------------------------------------
|| f$strength_flush          >=4
|| f$strength_flush          >=3 && ncallbets<=2
|| f$strength_flush          >=2 && ncallbets<=1
|| f$strength_flush          >=2 && (didcall||didrais) && nbetstocall==1
//-----------------------------------------------------------------
|| f$strength_straight       >=4
|| f$strength_straight       >=3 && ncallbets<=2
|| isstraight && nstraightfillcommon==2  && ncallbets<=2
|| f$strength_straight       >=2 && ncallbets<=1
|| f$strength_straight       >=2 && (didcall||didrais) && nbetstocall==1
//-----------------------------------------------------------------
|| f$strength_trips          >=4 
|| f$strength_trips          >=3 && ncallbets<=2
|| f$strength_trips          >=2 && ncallbets<=1
|| f$strength_trips          >=2 && (didcall||didrais) && nbetstocall==1
//-----------------------------------------------------------------
|| f$strength_twopair        >=4
|| f$strength_twopair        >=3 && ncallbets<=2
|| f$strength_twopair        >=2 && ncallbets<=1
|| f$strength_twopair        >=2 && (didcall||didrais) && nbetstocall==1
//-----------------------------------------------------------------
|| f$strength_onepair        >=4
|| f$strength_onepair        >=3 && ncallbets<=1
|| f$strength_onepair        >=3 && (didcall||didrais) && nbetstocall==1
//-----------------------------------------------------------------

##f$GENERAL_HAND_CALLS##
// general call rules
0
// flop turn or river call if I raised and have anything
|| [br>=2 && didrais && (prwinnow**nopponentsplaying)>.50]
// flop turn or river calls weaker hands I couldn't bet and only 1 bet to call
|| [br>=2 && (prwinnow**nopponentsplaying)>.55 && nbetstocall<=1]
// flop turn or river call with good hands regardless
|| [br>=2 && (prwin+prtie)>=(.800-(nopponentsplaying*.025))] 
// flop or turn and I have 8+ outs and less than 4 bets to call
|| [(br==2 || br==3) && f$nouts>=8 && nbetstocall==4]
// river and 2 opponents or less and prwinnow*opponents left is greater than .55 and 1 bet to call or did raise
|| [br==4 && nopponentsplaying<=2 && (prwinnow**nopponentsplaying)>.55 && (nbetstocall==1||didrais)]
// river and prwinnow*opponents left is greater than .55 and 1 bet to call and pot divided by call is greater than 7
|| [br==4 && (prwinnow**nopponentsplaying)>.55 && nbetstocall==1 && pot/call>7]
// river and number of bets to call is less or equal to 1.1 and prwin is greater than or equal to 0.05
|| [br==4 && nbetstocall<=1.1 && prwin>=0.05]
// river and did check and did raise on flop or turn and didnt call on flop or turn and number of bets to call is less or equal to 1.1 and 2 or less playing
|| [br==4 && didchec && didraisround2 && !didcallround2 && didraisround3 && !didcallround3 && nbetstocall<=1.1 && nopponentsplaying<=2]
// river and didrais on turn and number of bets to call is less or equal to 1.1 and I have more than a pair greater than a mid pair
|| [br==4 && didrais && nbetstocall<=1.1 && pokerval>onepair && !ismidpair && !islopair]
// number of hands that can beat me is 0
|| nhandshi==0
// prwinnow is greater than 0.90
|| prwinnow>=0.90
// prwin is greater than 0.90
|| prwin>=0.90
//-------------------------------------------------------------------------------------------------------------------

##f$follow_thru##
   [nbetsround<1 && f$openboard && (rankhiplayer>rankhicommon||pokerval>onepair) && (
        (br==2  && didraisround1 && !didcallround1 && (f$DRAWS||f$call_FTR_BigPot||f$GENERAL_HAND_CALLS))
     || (br==3  && didraisround2 && rankhicommon<14 && !didcallround2 && (f$DRAWS||f$call_FTR_BigPot||f$GENERAL_HAND_CALLS))
     || (br==4  && didraisround3 && !didcallround3 && nopponentsplaying<3 && nbetsround<1 && f$draw_flop)
     )  
   ]
|| [br==4 && nbetsround<1 && ishandup]
|| [br==4 && nbetsround<1 && f$draw_flop && f$openboard]
? 2 :
   [ncallbets==1 && f$openboard && (rankhiplayer>=rankhicommon||pokerval>onepair||f$DRAWS) && (
        (br==2  && didraisround2)
     || (br==3  && didraisround3)
     )
   ]
? 1 :
0

##f$raise_the_chaser##
0
|| [pokerval>onepair && nsuitedcommon<4 && nstraightfillcommon>1 && nrankedcommon<2]

##f$rais_FTR_Aggro##
0 
|| [br==2 && nraisbets==2 && didraisround1 && nopponentsplaying==1]
|| [br==2 && nraisbets==1 && didraisround1 && !didcallround1 && f$openboard && 
   ((nopponentsplaying<=4  && f$dpd) ||(nopponentsplaying<=3 && f$dpl  )||( f$dpm && randomround<=.5))]
|| [br==2 && nraisbets==1 && didraisround1 && !didcallround1 && nopponentsplaying<=4 && f$rainbowboard]
|| [br==2 && didraisround1 && !didcallround1 && nopponentsplaying<=4 && nraisbets<=1 && ( f$SAFEBOARD || f$nouts>=3 || $AX || nopponentsplaying==1)] 
|| [br==2 && didraisround1 && !didcallround1 && nopponentsplaying<=2 && nraisbets<=2 && $AX] 
|| [br==2 && didchec && nplayersround==2 && randomround<=0.10] 
|| [br==2 && (f$nouts/ncardsunknown)>=(1/nplayersplaying)&& nraisbets<3] 
|| [br==2 && (f$nouts/ncardsunknown)>=(1/nplayersplaying)] 
|| [br==2 && nsuited==4 && nsuitedcommon==2 && nrankedcommon<3 && nraisbets==1] 
|| [br==2 && nsuited==4 && nsuitedcommon==2 && `((~srankbits&0x7fff)>>srankhiplayer)<=2 && nrankedcommon<3 && nraisbets<=2] 
|| [br==2 && nstraight==4 && nstraightcommon<=2 && !(srankbits&16386 && srankbits&8196) && nsuitedcommon<=2 && nrankedcommon<3 && nraisbets==1] 
|| [br==2 && (f$nouts/ncardsunknown)>((bet+call)/(pot+f$ImpliedOdds))&& nraisbets==1] 
|| [br==2 && (((f$DP==1||f$DP==2) && (f$SAFEBOARD || (nrankedcommon==2 && trank<7))) || (betposition/nplayersplaying>=0.75)) && ncallbets==0 && nplayersround<=4 && randomround<=0.10] 

|| [br==3 && didchec && nplayersround==2 && randomround<=0.10] 
|| [br==3 && didraisround2 && !didcallround2 && nopponentsplaying<=3 && nraisbets<=1 && (f$SAFEBOARD || f$nouts>=3 || $AX || nopponentsplaying==1) && !(betposition==nplayersplaying && didraisround2 && f$nouts<8)] 
|| [br==3 && nbetsround2==0 && nbetsround3==0 && betposition==nplayersplaying && randomround<=0.90 && nplayersround<=4] 
|| [br==3 && (betposition/nplayersplaying>=0.75) && nbetsround2<=1 && nraisbets==1 && nplayersround<=4 && randomround<=0.10] 
|| [br==3 && (f$nouts/ncardsunknown)>=(1/nplayersplaying)] 
|| [br==3 && (f$nouts/ncardsunknown)>((bet+call)/(pot+f$ImpliedOdds)) && !(betposition==nplayersplaying && didraisround2 && f$nouts<8)] 
|| [br==3 && (f$nouts/ncardsunknown)>=(1/nplayersplaying) && !(betposition==nplayersplaying && didraisround2 && f$nouts<8)] 
|| [br==3 && nsuited==4 && nsuitedcommon==2 && nraisbets==1 && !(betposition==nplayersplaying && didraisround2 && f$nouts<8)] 
|| [br==3 && nsuited==4 && nsuitedcommon==3 && `((~srankbits&0x7fff)>>srankhiplayer)==0 && nraisbets<=2 && !(betposition==nplayersplaying && didraisround2 && f$nouts<8)] 
|| [br==3 && nstraight==4 && nstraightcommon<=2 && !(srankbits&16386 && srankbits&8196) && nsuitedcommon<=2 && nrankedcommon<3 && nraisbets==1 && !(betposition==nplayersplaying && didraisround2 && f$nouts<8)] 

|| [br==4 && (betposition/nplayersplaying>=0.75) && nbetsround2<=1 && nraisbets==1 && nplayersround<=4 && randomround<=0.10] 
|| [br==4 && didraisround3 && !didcallround3 && nopponentsplaying<=2 && nbetsround4==0 && nsuitedcommon==2 && ($$cs0==$$cs1 || $$cs0==$$cs2 || $$cs1==$$cs2)]		
|| [br==4 && didraisround3 && !didcallround3 && nopponentsplaying<=2 && nraisbets<=1 && nsuitedcommon==2 && ($$cs0==$$cs1 || $$cs0==$$cs2 || $$cs1==$$cs2)]
|| [br==4 && didraisround3 && !didcallround3 && nopponentsplaying<=2 && nraisbets<=1 && (f$SAFEBOARD || $Ax || nopponentsplaying==1)]

##f$ImpliedOdds##
br==2 ? ((nopponentsbetting*.50)*bet4*1.5) + (((nplayersplaying-1-nopponentsbetting)*.275)*bet4*1.25) : 
br==3 ? ((nopponentsbetting*.50)*bet4) + (((nplayersplaying-1-nopponentsbetting)*.275)*bet4) : 0

##f$DRAWS##
//Drawing Hands 
0
|| [(br==2||br==3) && (f$nouts/ncardsunknown) >= (call/(pot+f$ImpliedOdds)) ]

//Nut Flush Draw
|| [(br==2||br==3) && nsuited==4 
    && `((~srankbits&0x7fff)>>srankhiplayer)==0 
    && nsuitedcommon==2
    && nraisbets<=2]

//Pair and Flush Draw
|| [(br==2||br==3) && prwinnow >.40 
   && nsuited==4 && nsuited>nsuitedcommon 
   && isonepair && (pokervalcommon < onepair)
   && nraisbets<=2]

//Second Nut Flush Draw
|| [(br==2||br==3) && nsuited==4 
   && `((~srankbits&0x7fff)>>srankhiplayer)==1 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]

//Third Nut Flush Draw
|| [(br==2||br==3) && nsuited==4 
   && `((~srankbits&0x7fff)>>srankhiplayer)==2 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]

//Good Flush Draw
|| [(br==2||br==3) && nsuited==4 
   && nsuitedcommon==2 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]//call good flush draws

//Good Straight Draw
|| [(br==2||br==3) && nstraight==4 && nstraightcommon <= 2
   && ((1.2/(prwin + prtie/2)-1) < ((pot + (callshort *.3))/call))]

//Call draw that was raised
|| [(br==2||br==3) && (didrais||didcall) 
   && ((nsuited==4 && nsuitedcommon==2)||(nstraight==4 && nstraightcommon==2)) 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]

//COMBOS DRAWS...pair and draw

//Pair and Flush Draw
|| [(br==2||br==3) && prwinnow >.40 
   && nsuited==4 && nsuited>nsuitedcommon 
   && isonepair && (pokervalcommon < onepair)
   && (((1.5/prwin)-1) < ((pot + (callshort *.3))/call))]

//Pair and Straight Draw
|| [(br==2||br==3) && prwinnow >.40 
   && nstraight==4 && nstraight>nstraightcommon 
   && isonepair && (pokervalcommon < onepair)
   && (((1.5/prwin)-1) < ((pot + (callshort *.3))/call))]

//Straight and Flush Draw
|| [(br==2||br==3) && nsuited==4 
   && nsuited>nsuitedcommon && nstraight==4 
   && nstraight>nstraightcommon 
   && (((1.2/prwin)-1) < ((pot + (callshort *.3))/call))]

##f$kicker_rank##
(nranked==2 && nrankedcommon==1) ? 
  (trank==rankhiplayer? 
   `((~rankbits&0x7ffe)>>rankloplayer)+1: 
   `((~rankbits&0x7ffe)>>rankhiplayer)+1 ) : 
(nranked==3 && nrankedcommon==2) ? 
  (trank==rankhiplayer? 
   `((~rankbits&0x7ffe)>>rankloplayer)+1: 
   `((~rankbits&0x7ffe)>>rankhiplayer)+1 ) : 0

##f$rainbowboard##
// The safest board, no pair, no draws to a straight or flush 
[ nsuitedcommon==1 && nstraightfillcommon>=3 && nrankedcommon==1 ]

##f$openboard##
// impossible to have a boat ,flush, or straight; top set is nuts 
[ nrankedcommon==1 && nsuitedcommon<=2 && nstraightfillcommon>=3 ]

##f$top2pair##
// you hold the two highest pairs on board 
[ istwopair && (pokerval&15)<((pokerval>>4) & 15) ]

##f$topboat##
[  isfullhouse && pokervalcommon&twopair && pcbits&28 
|| isfullhouse && ispair && pokervalcommon&onepair && trank>trankcommon 
|| isfullhouse && pokervalplayer<onepair && nranked==3 && nrankedcommon==2 
&& trank>=trankcommon && trankcommon>=$$pr0 && trankcommon>=$$pr1 ]

##f$NoRaise##
0
// Slow play AA or KK if under the gun 15% of the time
|| [br==1 && !didcall && ($AA || $KK) && f$DP==3 && randomround<=0.15]

// Don't re-raise post flop if not one pair or better if implied odds do not have expected value 
|| [br>1 && didrais && (pokerval<onepair && (f$nouts/ncardsunknown) < ((call+bet)/(pot+f$ImpliedOdds)))]

// Don't re-raise post flop if checkraised this betting round 
|| [br>1 && (ncurrentbets>0 && nbetstocall>0 && dealpositionrais<f$DP && ncallbets==2 && prwin<0.85)]
|| [br>1 && didrais && !didcall && dealpositionrais<f$DP && prwin<0.85]

// Don't re-raise if there is an obvious threat on the board 
|| [br>1 && didrais && (
          (pokerval<threeofakind && (nsuitedcommon>=3 || nrankedcommon==2 || nstraightfillcommon<=2)) 
       || (isthreeofakind && (nsuitedcommon>=3 || nstraightfillcommon<=2)) 
       || (isstraight && (nsuitedcommon>=3 || nrankedcommon==2)) 
       || (isflush && nrankedcommon==2)
       )
   ]

// Round four. Board paired on the river. Do not raise unless top full house or better.  
|| [br==4 && pokerval<fourofakind && !f$topboat && nrankedcommon==2 && ($$cr4==$$cr0 || $$cr4==$$cr1 || $$cr4==$$cr2 || $$cr4==$$cr3)]

##f$Fold##
0
// Fold garbage after bluff raise if re-raised and not paired, no redraws and no strategical reason to call or raise
|| [br>1 && call>0 && didrais && pokerval<onepair && !f$DRAWS  && f$follow_thru==0]

// You have one pair (not a pocket pair) and there is an ace on the board. Your highest card is less than an ace.
// You do not have a redraw. Two or more opponents have bet and raised making it two bets to you. Don't be stupid.
|| [ br>=3 && !ispair && isonepair && nrankedcommon==1 && rankhicommon==14 && trank<=13 && nopponentsbetting>=2 && nbetsround>=2 && !f$DRAWS ]

// Round two. You have pair (even top pair) and no kicker. Opponents could have flush draw and possible backdoor straight.  
|| [ br==2 && !f$DRAWS && isonepair && pokerval<twopair && nsuitedcommon==2 && nstraightfillcommon==3 && f$kicker_rank<1 && ncallbets>0 ] 


// Round two. You have top pair eight or less and top kicker vs a possible made opponent straight 
// Do not call unless dynamic dealer and only one bet.
|| [ br==2 && $Ax && rankloplayer<9 && ishipair && trank==rankloplayer && ( 
         nstraightfillcommon==2 && (
            nsuited<=2 && (
                ncallbets>1 
             || nstraightcommon==3 
             || ncallbets==1 && (
                    !f$dpd
                 || f$dpd && 
                    nsuitedcommon<=2 && (
                        (nstraightcommon==2 && call>(pot*(4/47)) ) 
                     || (nstraightcommon==1 && call>(pot*(5/47)) )   
                     )
                 )
             )
         || (nsuited==3 && ncallbets==1 && nsuitedcommon<=2 && nstraightcommon==2 && f$dpd && call>(pot*(5.5/47)) ) 
         || nstraightcommon==3 
         )
     )
   ]

// Round two. Player has a pocket pair. Flop is a pair (even if lower than player's pockets) and an overcard. 
// Fold to any bet. If first in this round bet once. If raised fold anything less than top fullhouse. 
// Raiser likely has paired the high card or tripped the pair. Let's not get involved in the hand. We could lose a bundle.
// We could be betting dead and opponent has at least 5 outs to beat us now and will likely have 8 outs to beat us on the turn.
|| [br==2 && ispair && !isfourofakind && rankhicommon>trank && (pokerval<=fullhouse) && !f$topboat]

// Round three. Round two was capped. Board paired on the turn. You have two pair or less.   
// Fold to any bet. If first in this round bet once. If raised fold anything less than trips.
|| [br==3 && nbetsround2==4.00 && pokerval<threeofakind && !f$top2pair && nrankedcommon==2 && ($$cr3==$$cr0 || $$cr3==$$cr1 || $$cr3==$$cr2)]

// Round four. We have been leaking a lot of big bets at the river calling hand call. Our win percentage with less than a pair is near zero.
|| [br==4 && randomround<.75 && pokerval<onepair && call>0] // add profiling

##f$nouts##
//Outs Counter V.9b

br==1 ? nouts :
br==4 ? 0 :

// This Formula will take the existing symbold "nouts" and fix it show "the total number of unseen single cards that
// if dealt to the board might put your hand in the lead. to be counted as an out,
// the card must be able to bump your level and your new level must be higher than the resulting common level"

nouts +

//****************************************************************************************************
//Overcards
//****************************************************************************************************

// Here we discount the outs that makes a pair but does not put our hand in the lead

       //**Hi card**//

//My high card is lower than the highest board card ? -3 outs
((rankhiplayer<rankhicommon && (ishicard || (isonepair && nrankedcommon==2)) ) ||

//My high card is higher than the highest board card and is an ace ? -3 outs
(rankhiplayer==14 && (ishicard || (isonepair && nrankedcommon==2))) ||
// i have included this we dont want to hit top pair of aces and lose to 2 pair

//My high card is higher than the highest board card and board is three suited ? -3 outs
(rankhiplayer>rankhicommon && nsuitedcommon==3 && (ishicard || (isonepair && nrankedcommon==2))) ||

//My high card is higher than the highest board card and board has a possible straight ? -3 outs
(rankhiplayer>rankhicommon && nstraightfillcommon<=2 && nstraight<4 && (ishicard || (isonepair && nrankedcommon==2))) ||
// i deleted && nsuitedcommon<3 because it has already been covered and is therefore not neccessary

//My high card is higher than the highest board card, and my kicker is less than a J ? -3 outs
(rankhiplayer>rankhicommon && rankloplayer<9 && (ishicard || (isonepair && nrankedcommon==2)))  ? -3 : 0) +
// i have changed ($$pr1<11||$$pr0<11)because it reads more easy

//My high card is higher than the highest board card and board is two suited ? -1 out
// Discounting 1 out on a flushdraw board unless the first card is of the same suite
(rankhiplayer>rankhicommon && rankloplayer>10 && nsuitedcommon==2 && nsuited<4 && (ishicard || (isonepair && nrankedcommon==2))  ? -1 : 0) +
(rankhiplayer>rankhicommon && rankloplayer>10 && nsuitedcommon==2 && nsuited==3 &&
$$ps0==tsuitcommon && (ishicard || (isonepair && nrankedcommon==2)) ? 1 : 0)+
// i have changed ($$pr1>=11&&$$pr0>=11) and ($$ps0==$$cs0||$$ps0==$$cs1||$$ps0==$$cs2||$$ps0==$$cs3) for easy reading

//My high card is higher than the highest board card and board has two flush draws ? -1 out
// Discounting 1 out on the turn when the board is double suited
(rankhiplayer>rankhicommon && nsuitedcommon==2 && nstraightfillcommon>2 && (
$$cs0==$$cs1 && $$cs2==$$cs3 ||
$$cs0==$$cs2 && $$cs1==$$cs3 ||
$$cs0==$$cs3 && $$cs1==$$cs2 ) && (ishicard || (isonepair && nrankedcommon==2))  ? -1 : 0)+

   //**Low Card**//

//My low card is lower than the highest board card ? -3 outs
((rankloplayer<rankhicommon && (ishicard || (isonepair && nrankedcommon==2))) ||

//My low card is higher than the highest board card and board is three suited ? -3 outs
(rankloplayer>rankhicommon && nsuitedcommon==3 && (ishicard || (isonepair && nrankedcommon==2))) ||

//My low card is higher than the highest board card and board has a possible straight ? -3 outs
(rankloplayer>rankhicommon && nstraightfillcommon<=2 && nstraight<4 && (ishicard || (isonepair && nrankedcommon==2)) ) ? -3 : 0) +
//i took out && nsuitedcommon<3 it is not neccessary

//My low card is higher than the highest board card, and my kicker is less than a J ? -3 outs
//($$pr1>rankhicommon && ($$pr1<11||$$pr0<11) && ishicard) 
// this line becomes unneccessary because we look at high / lowcard

//My low card is higher than the highest board card and board is two suited ? -1 out
//discounting on a suited board unless we have that suited card
(rankloplayer>rankhicommon && rankloplayer>10 && nsuitedcommon==2 && nsuited<4 && (ishicard || (isonepair && nrankedcommon==2))  ? -1 : 0) +
(rankloplayer>rankhicommon && rankloplayer>10 && nsuitedcommon==2 && nsuited==3 &&
$$ps1==tsuitcommon && (ishicard || (isonepair && nrankedcommon==2)) ? 1 : 0)+
// changed ($$pr1>=11&&$$pr0>=11) and ($$ps1==$$cs0||$$ps1==$$cs1||$$ps1==$$cs2||$$ps1==$$cs3)

//My low card is higher than the highest board card and board has two flush draws ? -1 out
(rankloplayer>rankhicommon && nsuitedcommon==2 && nstraightfillcommon>2 && (
$$cs0==$$cs1 && $$cs2==$$cs3 ||
$$cs0==$$cs2 && $$cs1==$$cs3 ||
$$cs0==$$cs3 && $$cs1==$$cs2 ) && (ishicard || (isonepair && nrankedcommon==2))  ? -1 : 0)+


//**************************************************************************************************
//Straight draw
//**************************************************************************************************

(br==2 && nstraightfill==1 ? (
nstraightfillcommon>2 && (rankhiplayer-rankloplayer)==1 && pcbits<4 ? -8 :
nstraightfillcommon>2 && (rankhiplayer-rankloplayer)== 2 && pcbits<10 ? -6 :
nstraightfillcommon>2 && (rankhiplayer-rankloplayer)== 3 && pcbits<=5 ? -6 :
nsuited<4 && nsuitedcommon==3 && nstraightflushfill>1 ? -6 :
nsuited<4 && nrankedcommon>1 && nsuitedcommon>1 ? -5 :
nsuited<4 && nrankedcommon>1 ? -4 :
(mh_bottomsd || rankhiplayer<ranklocommon && !(rankbits&16386 && rankbits&8196))  ? -4 :
nsuited<4 && nsuitedcommon==2 ? (((rankbits & 0b0000000010111010)==0b0000000010111010)   
||    ((rankbits & 0b0000000101110100)==0b0000000101110100)
||    ((rankbits & 0b0000001011101000)==0b0000001011101000)
||    ((rankbits & 0b0000010111010000)==0b0000010111010000)
||    ((rankbits & 0b0000101110100000)==0b0000101110100000)
||    ((rankbits & 0b0001011101000000)==0b0001011101000000)
||    ((rankbits & 0b0010111010000000)==0b0010111010000000)
||    ((rankbits & 0b0101110100000000)==0b0101110100000000)
||    ((rankbits>>ranklo)==0b10111101) ? -2 :
      ($$cs0==$$cs1 && $$cs2==$$cs3 || $$cs0==$$cs2 && $$cs1==$$cs3  || $$cs0==$$cs3 && $$cs1==$$cs2  ) ? -2 :
-1): 
0 ): 0)+

//******************************************************************************************************************
//Flush draw
//******************************************************************************************************************

// Here we discount outs for making a flush which does not put our hand in the lead


//I have discounted when we have a low flush draw inaccordance with the orignal code:
(nsuited==4 && nsuitedcommon==2 && mh_nsuitedbetter>4 ? -1 : 0)+
(nsuited==4 && nsuitedcommon==2 && mh_nsuitedbetter>5 ? -1 : 0)+
(nsuited==4 && nsuitedcommon==2 && mh_nsuitedbetter>6 ? -1 : 0)+

//we will discount 2 outs for every suited card better than ours when we drawing to a flush using 1 hole card
// i have changed `((~srankbits&0x7ffe)>>srankhiplayer) for easy reading
(nsuited==4 && nsuitedcommon==3 && mh_nsuitedbetter>1 ? -2 : 0)+
(nsuited==4 && nsuitedcommon==3 && mh_nsuitedbetter>2 ? -2 : 0)+
(nsuited==4 && nsuitedcommon==3 && mh_nsuitedbetter>3 ? -2 : 0)+
(nsuited==4 && nsuitedcommon==3 && mh_nsuitedbetter>4 ? -2 : 0)+
(nsuited==4 && nsuitedcommon==3 && mh_nsuitedbetter>5 ? -1 : 0)+

// we discount outs when drawing to a flush on a paired board
// question: why are we using -4.5? dont we think maybe this is to conservative
// surely there are max 3 outs that make ur flush and villans full
(nsuited==4 && nrankedcommon==2 ? -3 : 0)+

// we will discount 9 outs on a board which is double paired or presenting trips
(nsuited==4 && (nrankedcommon>=3||pokervalcommon&twopair) ? -9 : 0)+

// This addision is only good if used with the above discount for low flush draws
// nett result would be that low flush draw gets discounted unless used with a straight draw
(nsuited==4 && nstraight==4 ? 1 : 0)+


//******************************************************************************************************************
//Onepair
//*******************************************************************************************************************

// Here we will discount outs for hitting 2 pair or trips which does not put our hand in the lead

  //**One Pair**//

//Discounting the outs that pair the board but does not pair our hole card
(br==2  && !ispair && isonepair && nrankedcommon==1 ? -6 : 0) +
(br==3  && !ispair && isonepair && nrankedcommon==1 ? -9 : 0) +
// i added nrankedcommon==1 and i have added the nrankedcommon==2 with the overcards code

//Discounting on suited board where we dont have the suit
(isonepair && !ispair && nrankedcommon==1 && nsuitedcommon==2 && nsuited==2 ? -1 : 0)+

//Discounting outs to two pair or trips on suited or straighting board
(isonepair && !ispair && nrankedcommon==1 && nsuitedcommon>=3 && nsuited==nsuitedcommon ? -5 : 0)+
(isonepair && !ispair && nrankedcommon==1 && nstraightfillcommon<=2 ? -4 : 0)+
// changed pokervalcommon<onepair for easy reading



// how can we have 1 pair on a paired board AND one of our hole cards have paired the board????
//(isonepair && nsuitedcommon==2 &&(($$pr0==$$cr0 ||$$pr0==$$cr1 ||$$pr0==$$cr2 ||$$pr0==$$cr3
//)&& $$ps0==tsuitcommon)||(($$pr1==$$cr0 ||$$pr1==$$cr1 ||$$pr1==$$cr2 ||$$pr1==$$cr3)
//&& $$ps1==tsuitcommon)? -1 : 0)+

// Adding one out for straight draw i truelly cant see why
//(isonepair && !ispair && nstraight==4 && nstraight>nstraightcommon && nsuitedcommon<=2 ? 1 : 0)+

//Question when/ how is pokervalcommon<onepair && nrankedcommon==2 possible?
//What are we trying 2 code here??
//(isonepair && !ispair && pokervalcommon<onepair && nsuitedcommon>=2 && nrankedcommon==2 ? -6 : 0)+


//Discounting outs to 2 pair or trips on a double suited board
// Question why is this -1 ? (we have 5 outs to 2 pair or trips but: of the 2 pair that makes our trips 1 card
// completes a flush and of the 3 cards that makes our 2 pair 2 cards completes a flush)
(isonepair && nsuited<4 && nsuitedcommon==2 && nstraightfill>1 &&
($$cs0==$$cs1 && $$cs2==$$cs3 ||
$$cs0==$$cs2 && $$cs1==$$cs3 ||
$$cs0==$$cs3 && $$cs1==$$cs2 ||
$$cs1==$$cs2 && $$cs2==$$cs3 ||
$$cs1==$$cs3 && $$cs2==$$cs0    )  ? -3 : 0)+
// I changed this from -1

//**Pocket pair**//

//Discounting our outs to two pair  with a pocket pair
(br==2 && ispair && isonepair ? -9: 0)+
(br==3 && ispair && isonepair ? -12 : 0)+

//Discounting our outs to trips (pocket pair) on paired or straighting board.
(ispair && isonepair && nstraightfillcommon<=2 && nstraightfill>1 ? -2 : 0)+
(ispair && isonepair && nsuitedcommon==2  && nsuited==2 ? -1 : 0)+
(ispair && isonepair && nsuitedcommon==3 ? -2 : 0)+


//****************************************************************************************************************
//Twopair
//****************************************************************************************************************
// Here we will deal with our outs to make a fullhouse and discount the outs that will make the small boat

//the board is paired and we have two pair
// we discount the 2 outs that makes the board trips only if we have paired the card below the common pair
(istwopair && nrankedcommon==2 && trankcommon>rankhiplayer ? -2:0)+

// This code is only relavent to the turn when we have a board that is paired and
// our holecards have paired the remaining 2 unpaired cards (effectively giving us 3 pairs)
// we discount 2 outs which will give us a fullhouse but will give villan bigger fullhouse
(istwopair && nrankedcommon==2 && trankcommon>rankhiplayer &&
(($$pr0==$$cr0||$$pr0==$$cr1||$$pr0==$$cr2||$$pr0==$$cr3) &&
($$pr1==$$cr0||$$pr1==$$cr1||$$pr1==$$cr2||$$pr1==$$cr3)) ? -2 : 0)+
// i have included trankcommon>rankhiplayer because we make the bigger full if boards make trips lower than our pair
// i have change the discount to 2

//**************************************************************************************************************************
//Str Flush
//**************************************************************************************************************************
// Here we want to re apply the outs we have discounted above for our flush or straight draw because we have a straightflush draw
(pokervalcommon>=onepair && nstraightflush==4 && nstraightflushcommon<4 && nstraightflushfill==1 && ((rankbits&16398) != 16398 && (rankbits&28674) != 28674)  ? 2  : 0)+
(pokervalcommon>=onepair && nstraightflush==4 && nstraightflushcommon<4 && nstraightflushfill==1 && mh_nsuitedbetter>5 && ((rankbits&16398) != 16398 && (rankbits&28674) != 28674)  ? 1  : 0)+
(pokervalcommon>=onepair && nstraightflush==4 && nstraightflushcommon<4 && nstraightflushfill==1 && mh_nsuitedbetter>6 && ((rankbits&16398) != 16398 && (rankbits&28674) != 28674)  ? 1  : 0)+
(isflush && nstraightflush==4 && nstraightflushcommon<4 && nstraightflushfill==1 && ((rankbits&16398) != 16398 && (rankbits&28674) != 28674  ? 4 :0)+
isflush && nstraightflushfill==1 && nstraightflushfillcommon>1 ? 3 : 0)+
// i adusted this to re apply for the weaker flush

//******************************************************************************************************************************
//BACKDOOR OUTS
//******************************************************************************************************************************

// Here we will add our chance of makking runner runner straight or runner runner flush
(br==2 && `((~srankbits&0x7ffe)>>srankhiplayer)==0 && nsuited==3 && nsuitedcommon<3 && nrankedcommon==1 ? 1.5:
br==2 && `((~srankbits&0x7ffe)>>srankhiplayer)<=2 && nsuited==3 && nsuitedcommon<3 && nrankedcommon==1 ? 1 : 0)+
(br==2 && nstraightfill==2 && nstraightfillcommon>2 && (nsuitedcommon==1||(nsuitedcommon==2 && nsuited==4)) && (nrankedcommon==1||(nrankedcommon==2 && isthreeofakind))  ? 1.5: 0)+
// i have gone more conservative with the back door flush draw based on the stats shown.
0

