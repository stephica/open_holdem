##2012-10-28 12:47:16##

##notes##


##dll##


##bankroll##
0.000000

##defcon##
0.000000

##rake##
0.000000

##nit##
0

##f$alli##
// f$alli is the very first function to be called on each turn,
// so we abuse it to initialize memory-symbhols as a side-effect
// and only then we do the real evaluation.

// We can't use addition here to call the functions in correct sequential order,
// because OH doesn't add the operands in order:
// http://www.maxinmontreal.com/forums/viewtopic.php?f=111&t=14525&start=0
   [f$OpenPPL_InitMemorySymbols * 0]
|| [f$OpenPPL_RememberToSitoutIfNecessary * 0]
|| [f$OpenPPL_Decision == f$OpenPPL_RaiseMax]
|| [f$OpenPPL_Decision == f$OpenPPL_RaiseMax]
|| [(f$OpenPPL_Decision >= balance) && (balance > 0)]
|| [f$OpenPPL_DecisionIsPercentagedPotsizedBet 
    && f$OpenPPL_BetSizeForPercentagedPotsizeBet >= f$OpenPPL_MaximumBetsizeInDollars]
	

##f$swag##
// No swagging in a FL game
isfl ? f$OpenPPL_HINT_No_NL_BetSizing_In_A_FL_Game : 
// Only swag, if we really decided to swag
// and not because the betsize-adaption resulted in a positive betsize.
f$OpenPPL_DecisionIsFixedBetInBigBlinds        ? f$OpenPPL_BetSizeAdjustedToCasinosInputRequirements : 
f$OpenPPL_DecisionIsPercentagedPotsizedBet     ? (((f$OpenPPL_BetSizeAdjustedToCasinosInputRequirements/sblind)+.5)^0)*sblind : 
f$OpenPPL_DecisionIsBetPotOrBetHalfPotOrBetMax ? (((f$OpenPPL_BetSizeAdjustedToCasinosInputRequirements/sblind)+.5)^0)*sblind : 
0

//*****************************************************************************
//
//  OpenPPL - f$play
//  ================
//
//  f$play will be replaced by f$sitin, f$sitout and f$leave in OH 2.2.0.
//  But for the moment we need it so make OpenPPLs sitout command work.
//  http://forum.winholdem.net/wbb/viewtopic.php?t=8095
//  -2 press the leave button this frame
//  -1 do absolutely nothing this frame
//  0 click the sitout action this frame
//  +1 click the sitin action this frame
//
//*****************************************************************************

##f$srai##


##f$rais##
   [f$OpenPPL_Decision == f$OpenPPL_Raise]
|| f$OpenPPL_DecisionIsBetPotOrBetHalfPotOrBetMax
|| f$OpenPPL_DecisionIsPercentagedPotsizedBet
|| f$OpenPPL_DecisionIsFixedBetInBigBlinds
//
// Below is 2 times the same expression,
// but we want to log the very verbose explanation
// only in the case of a true error
// and not for normal evaluations.
//
|| [f$OpenPPL_Decision == 0 && f$betsize == f$OpenPPL_Undefined_BetSize_Probably_Due_To_Misscraped_Pot_Defaulting_To_Minraise]

##f$call##
   [f$OpenPPL_Decision == f$OpenPPL_Check]
|| [f$OpenPPL_Decision == f$OpenPPL_Call]
|| [f$OpenPPL_AmountToCall == 0]
|| f$rais

##f$prefold##


##f$rebuy##


##f$delay##


##f$chat##


##f$P##


##f$play##
f$sitout ? 0 : -1

##f$test##


##f$debug##
          6.0000 = nplayersseated 
          5.0000 = nplayersactive
= nplayersdealt
= nchairsdealtleft

##f$preflop##
[ [ (f$OpenPPL_Raises >= 0) ] ? me_st_userwebturbosng_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises >= 0) ] ? me_st_userversion110_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated == 3) ] ? me_st_userbubble_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated == 2) ] ? me_st_useritm_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated == 1) ] ? me_st_userheadsup_1 : 0] && 0 ? 0 :
[ [ ( nopponentsseated > 3 ) ] ? me_st_usertightpreflop_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated == 3) ] ? me_st_usernormalbubble_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated <= 32) ] ? me_st_usernormalitm_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises >= 0) ] ? me_st_usernormalshortstackstrategy_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BigBlindSize < 80) ] ? me_st_usergameearly_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BigBlindSize >= 80 && f$OpenPPL_BigBlindSize <= 200) ] ? me_st_usergamemiddle_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BigBlindSize > 200) ] ? me_st_usergamelate_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StillToAct >= 7) ] ? me_st_userearlyposition_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_StillToAct == 6 || f$OpenPPL_StillToAct == 5]) ] ? me_st_usermiddleposition_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StillToAct == 4) ] ? me_st_userhijackposition_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StillToAct == 3) ] ? me_st_usercutoffposition_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Button) ] ? me_st_userbuttonposition_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_SmallBlind) ] ? me_st_usersmallblindposition_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BigBlind) ] ? me_st_userbigblindposition_1 : 0] && 0 ? 0 :
[ [ ([me_re_userhijackposition || me_re_usercutoffposition || me_re_userbuttonposition]) ] ? me_st_userlateposition_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises >= 1 && f$OpenPPL_LastRaiserPosition >= 7) ] ? me_st_userraiserpositionearly_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises >= 1 && [f$OpenPPL_LastRaiserPosition == 6 || f$OpenPPL_LastRaiserPosition == 5]) ] ? me_st_userraiserpositionmiddle_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises >= 1 && f$OpenPPL_LastRaiserPosition == 4) ] ? me_st_userraiserpositionhijack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises >= 1 && f$OpenPPL_LastRaiserPosition == 3) ] ? me_st_userraiserpositioncutoff_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises >= 1 && f$OpenPPL_LastRaiserPosition == 2) ] ? me_st_userraiserpositionbutton_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises >= 1 && f$OpenPPL_LastRaiserPosition == 1) ] ? me_st_userraiserpositionsmallblind_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsWithHigherStack == 0) ] ? me_st_userchipleader_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsWithLowerStack == 0) ] ? me_st_usershortstackattable_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsWithLowerStack == 1) ] ? me_st_user2ndshortstackattable_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsWithLowerStack == 2) ] ? me_st_user2oppstackssmallerthanbot_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsWithLowerStack == 3) ] ? me_st_user3oppstackssmallerthanbot_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsWithLowerStack == 4) ] ? me_st_user4oppstackssmallerthanbot_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsWithLowerStack == 5) ] ? me_st_user5oppstackssmallerthanbot_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsWithLowerStack == 6) ] ? me_st_user6oppstackssmallerthanbot_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsWithLowerStack == 7) ] ? me_st_user7oppstackssmallerthanbot_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_OpponentsWithLowerStack >= 1 && nopponentsseated == 3) || (f$OpenPPL_OpponentsWithLowerStack >= 2 && nopponentsseated == 4)]) ] ? me_st_usergoodcashposition_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin) ] ? me_st_useropponentisallin_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionpreflopraise_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_None) ] ? me_st_userlastactionpreflopnone_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionpreflopcall_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_CallsSinceLastRaise == 1) ] ? me_st_user1callerpreflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_CallsSinceLastRaise > 1) ] ? me_st_usermultiplecallerspreflop_1 : 0] && 0 ? 0 :
[ [ ([($AA) || ($KK) || ($QQ) || ($JJ)]) ] ? me_st_userbigpocketpair_1 : 0] && 0 ? 0 :
[ [ ([($TT) || ($99) || ($88) || ($77)]) ] ? me_st_usermiddlepocketpair_1 : 0] && 0 ? 0 :
[ [ ([($66) || ($55) || ($44) || ($33) || ($22)]) ] ? me_st_usersmallpocketpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_MaxStillToActStackSize < 5) ] ? me_st_usermaxstilltoactstacklessthan5_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_MaxStillToActStackSize < 10 && f$OpenPPL_MaxStillToActStackSize >= 5) ] ? me_st_usermaxstilltoactstacklessthan10_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_MaxStillToActStackSize < 20 && f$OpenPPL_MaxStillToActStackSize >= 10) ] ? me_st_usermaxstilltoactstacklessthan20_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_MaxStillToActStackSize >= 20) ] ? me_st_usermaxstilltoactstackgreaterthan20_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 20 || f$OpenPPL_MaxStillToActStackSize <= 20]) ] ? me_st_usereffectivestacksize20_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 19 || f$OpenPPL_MaxStillToActStackSize <= 19]) ] ? me_st_usereffectivestacksize19_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 18 || f$OpenPPL_MaxStillToActStackSize <= 18]) ] ? me_st_usereffectivestacksize18_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 17 || f$OpenPPL_MaxStillToActStackSize <= 17]) ] ? me_st_usereffectivestacksize17_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 16 || f$OpenPPL_MaxStillToActStackSize <= 16]) ] ? me_st_usereffectivestacksize16_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 15 || f$OpenPPL_MaxStillToActStackSize <= 15]) ] ? me_st_usereffectivestacksize15_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 14 || f$OpenPPL_MaxStillToActStackSize <= 14]) ] ? me_st_usereffectivestacksize14_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 13 || f$OpenPPL_MaxStillToActStackSize <= 13]) ] ? me_st_usereffectivestacksize13_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 12 || f$OpenPPL_MaxStillToActStackSize <= 12]) ] ? me_st_usereffectivestacksize12_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 11 || f$OpenPPL_MaxStillToActStackSize <= 11]) ] ? me_st_usereffectivestacksize11_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 10 || f$OpenPPL_MaxStillToActStackSize <= 10]) ] ? me_st_usereffectivestacksize10_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 9 || f$OpenPPL_MaxStillToActStackSize <= 9]) ] ? me_st_usereffectivestacksize9_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 8 || f$OpenPPL_MaxStillToActStackSize <= 8]) ] ? me_st_usereffectivestacksize8_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 7 || f$OpenPPL_MaxStillToActStackSize <= 7]) ] ? me_st_usereffectivestacksize7_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 6 || f$OpenPPL_MaxStillToActStackSize <= 6]) ] ? me_st_usereffectivestacksize6_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 5 || f$OpenPPL_MaxStillToActStackSize <= 5]) ] ? me_st_usereffectivestacksize5_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 4 || f$OpenPPL_MaxStillToActStackSize <= 4]) ] ? me_st_usereffectivestacksize4_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 3 || f$OpenPPL_MaxStillToActStackSize <= 3]) ] ? me_st_usereffectivestacksize3_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 2 || f$OpenPPL_MaxStillToActStackSize <= 2]) ] ? me_st_usereffectivestacksize2_1 : 0] && 0 ? 0 :
[ [ (me_re_userheadsup && [f$OpenPPL_StackSize <= 1 || f$OpenPPL_MaxStillToActStackSize <= 1]) ] ? me_st_usereffectivestacksize1_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 0) ] ? me_st_useratc0preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 1) ] ? me_st_useratc1preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 2) ] ? me_st_useratc2preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 3) ] ? me_st_useratc3preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 4) ] ? me_st_useratc4preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall >= 5) ] ? me_st_useratcgreaterthanorequalto5preflop_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated == 5) ] ? me_st_user6handed_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated == 4) ] ? me_st_user5handed_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated == 3) ] ? me_st_user4handed_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated == 2) ] ? me_st_user3handed_1 : 0] && 0 ? 0 :
[ [ (nopponentsseated == 1) ] ? me_st_userheadsup_1 : 0] && 0 ? 0 :
[ [ ([nopponentsseated == 3 || nopponentsseated == 2] && [(f$OpenPPL_BigBlindSize == 100 && f$OpenPPL_MinOpponentStackSize >= 32 && f$OpenPPL_MaxOpponentStackSize <= 48 && f$OpenPPL_StackSize >= 32 && f$OpenPPL_StackSize <= 48) || (f$OpenPPL_BigBlindSize == 200 && f$OpenPPL_MinOpponentStackSize >= 16 && f$OpenPPL_MaxOpponentStackSize <= 24 && f$OpenPPL_StackSize >= 16 && f$OpenPPL_StackSize <= 24) || (f$OpenPPL_BigBlindSize == 300 && f$OpenPPL_MinOpponentStackSize >= 10 && f$OpenPPL_MaxOpponentStackSize <= 16 && f$OpenPPL_StackSize >= 10 && f$OpenPPL_StackSize <= 16) || (f$OpenPPL_BigBlindSize == 400 && f$OpenPPL_MinOpponentStackSize >= 8 && f$OpenPPL_MaxOpponentStackSize <= 12 && f$OpenPPL_StackSize >= 8 && f$OpenPPL_StackSize <= 12) || (f$OpenPPL_BigBlindSize == 500 && f$OpenPPL_MinOpponentStackSize >= 6 && f$OpenPPL_MaxOpponentStackSize <= 10 && f$OpenPPL_StackSize >= 6 && f$OpenPPL_StackSize <= 10) || (f$OpenPPL_BigBlindSize == 600 && f$OpenPPL_MinOpponentStackSize >= 5 && f$OpenPPL_MaxOpponentStackSize <= 8 && f$OpenPPL_StackSize >= 5 && f$OpenPPL_StackSize <= 8) || (f$OpenPPL_BigBlindSize == 800 && f$OpenPPL_MinOpponentStackSize >= 4 && f$OpenPPL_MaxOpponentStackSize <= 6 && f$OpenPPL_StackSize >= 4 && f$OpenPPL_StackSize <= 6) || (f$OpenPPL_BigBlindSize == 1000 && f$OpenPPL_MinOpponentStackSize >= 3 && f$OpenPPL_MaxOpponentStackSize <= 5 && f$OpenPPL_StackSize >= 3 && f$OpenPPL_StackSize <= 5)]) ] ? me_st_userevenstacks_1 : 0] && 0 ? 0 :
[ [ ([(me_re_userminoppstacksize2 && f$OpenPPL_StackSize <= 1) || (me_re_userminoppstacksize3 && f$OpenPPL_StackSize <= 2) || (me_re_userminoppstacksize4 && f$OpenPPL_StackSize <= 3) || (me_re_userminoppstacksize5 && f$OpenPPL_StackSize <= 4) || (me_re_userminoppstacksize6 && f$OpenPPL_StackSize <= 5) || (me_re_userminoppstacksize7 && f$OpenPPL_StackSize <= 6) || (me_re_userminoppstacksize8 && f$OpenPPL_StackSize <= 7) || (me_re_userminoppstacksize9 && f$OpenPPL_StackSize <= 8) || (me_re_userminoppstacksize10 && f$OpenPPL_StackSize <= 9)]) ] ? me_st_useronelessthanshortstack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_MaxStillToActStackSize >= 200 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppbbstackgreaterthanorequalto2xbotstacksize_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_MaxStillToActStackSize >= 150 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_MaxStillToActStackSize < 200 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppbbstackgreaterthanorequalto15xbotstacksize_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_MaxStillToActStackSize >= 100 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_MaxStillToActStackSize < 150 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppbbstackgreaterthanorequalto1xbotstacksize_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_MaxStillToActStackSize >= 50 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_MaxStillToActStackSize < 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppbbstackgreaterthanorequaltohalfbotstacksize_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_MaxStillToActStackSize < 50 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppbbstacklessthanhalfbotstacksize_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_BetSize <= 1 && f$OpenPPL_StackSize > 20) || (f$OpenPPL_BetSize <= 2 && f$OpenPPL_StackSize > 40) || (f$OpenPPL_BetSize <= 3 && f$OpenPPL_StackSize > 60) || (f$OpenPPL_BetSize <= 4 && f$OpenPPL_StackSize > 80)]) ] ? me_st_userbetlessthan20xstack_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_BigBlindSize == 60 && f$OpenPPL_StackSize <= 27 && f$OpenPPL_StackSize >= 20) || (f$OpenPPL_BigBlindSize == 100 && f$OpenPPL_StackSize <= 16 && f$OpenPPL_StackSize >= 12)]) ] ? me_st_usergoodstackmidlvl_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_BigBlindSize == 100 && f$OpenPPL_StackSize >= 27) || (f$OpenPPL_BigBlindSize == 150 && f$OpenPPL_StackSize >= 18) || (f$OpenPPL_BigBlindSize == 200 && f$OpenPPL_StackSize >= 14) || (f$OpenPPL_BigBlindSize == 300 && f$OpenPPL_StackSize >= 9) || (f$OpenPPL_BigBlindSize == 400 && f$OpenPPL_StackSize >= 17) || (f$OpenPPL_BigBlindSize == 600 && f$OpenPPL_StackSize >= 5)]) ] ? me_st_usergoodstacklatelvl_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_BigBlindSize == 60 && f$OpenPPL_StackSize < 20) || (f$OpenPPL_BigBlindSize == 100 && f$OpenPPL_StackSize < 12)]) ] ? me_st_userlowstackmidlvl_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 0) ] ? me_st_userstacksize0_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 1) ] ? me_st_userstacksize1_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 2) ] ? me_st_userstacksize2_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 3) ] ? me_st_userstacksize3_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 4) ] ? me_st_userstacksize4_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 5) ] ? me_st_userstacksize5_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 6) ] ? me_st_userstacksize6_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 7) ] ? me_st_userstacksize7_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 8) ] ? me_st_userstacksize8_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 9) ] ? me_st_userstacksize9_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 10) ] ? me_st_userstacksize10_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 11) ] ? me_st_userstacksize11_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 12) ] ? me_st_userstacksize12_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 13) ] ? me_st_userstacksize13_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 14) ] ? me_st_userstacksize14_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 15) ] ? me_st_userstacksize15_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 16) ] ? me_st_userstacksize16_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 17) ] ? me_st_userstacksize17_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 18) ] ? me_st_userstacksize18_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize <= 19) ] ? me_st_userstacksize19_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize >= 20 && f$OpenPPL_StackSize < 30) ] ? me_st_userstacksize20orgreater_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize >= 30 && f$OpenPPL_StackSize < 40) ] ? me_st_userstacksize30orgreater_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize >= 40 && f$OpenPPL_StackSize < 50) ] ? me_st_userstacksize40orgreater_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StackSize >= 50) ] ? me_st_userstacksize50orgreater_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_OpponentsWithLowerStack == 0 && nopponentsseated == 3) || ( (nopponentsseated != 3))]) ] ? me_st_usersafepush_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_BigBlindSize == 20 && f$OpenPPL_StackSize >= 125) || (f$OpenPPL_BigBlindSize == 40 && f$OpenPPL_StackSize >= 70) || (f$OpenPPL_BigBlindSize == 60 && f$OpenPPL_StackSize >= 45) || (f$OpenPPL_BigBlindSize == 100 && f$OpenPPL_StackSize >= 30) || (f$OpenPPL_BigBlindSize == 150 && f$OpenPPL_StackSize >= 20) || (f$OpenPPL_BigBlindSize >= 200 && f$OpenPPL_StackSize >= 15)]) ] ? me_st_userdoubledupstack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 2 && [(f$OpenPPL_MinStillToActStackSize < 10 && f$OpenPPL_BigBlindSize <= 200) || (f$OpenPPL_MinStillToActStackSize < 7 && f$OpenPPL_BigBlindSize == 300) || (f$OpenPPL_MinStillToActStackSize < 5 && f$OpenPPL_BigBlindSize >= 400)]) ] ? me_st_userminsmallstacktoblindratio_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 2 && [(f$OpenPPL_MaxStillToActStackSize < 10 && f$OpenPPL_BigBlindSize <= 200) || (f$OpenPPL_MaxStillToActStackSize < 7 && f$OpenPPL_BigBlindSize == 300) || (f$OpenPPL_MaxStillToActStackSize < 5 && f$OpenPPL_BigBlindSize >= 400)]) ] ? me_st_usermaxsmallstacktoblindratio_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [(f$OpenPPL_MinStillToActStackSize >= 10 && f$OpenPPL_MinStillToActStackSize <= 15 && f$OpenPPL_BigBlindSize <= 200) || (f$OpenPPL_MinStillToActStackSize >= 7 && f$OpenPPL_MinStillToActStackSize <= 10 && f$OpenPPL_BigBlindSize == 300) || (f$OpenPPL_MinStillToActStackSize >= 5 && f$OpenPPL_MinStillToActStackSize <= 10 && f$OpenPPL_BigBlindSize >= 400)]) ] ? me_st_userminmidstacktoblindratio_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [(f$OpenPPL_MaxStillToActStackSize >= 10 && f$OpenPPL_MaxStillToActStackSize <= 15 && f$OpenPPL_BigBlindSize <= 200) || (f$OpenPPL_MaxStillToActStackSize >= 7 && f$OpenPPL_MaxStillToActStackSize <= 10 && f$OpenPPL_BigBlindSize == 300) || (f$OpenPPL_MaxStillToActStackSize >= 5 && f$OpenPPL_MaxStillToActStackSize <= 10 && f$OpenPPL_BigBlindSize >= 400)]) ] ? me_st_usermaxmidstacktoblindratio_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 2 && [(f$OpenPPL_MinStillToActStackSize > 15 && f$OpenPPL_BigBlindSize <= 200) || (f$OpenPPL_MinStillToActStackSize > 10 && f$OpenPPL_BigBlindSize == 300) || (f$OpenPPL_MinStillToActStackSize > 10 && f$OpenPPL_BigBlindSize >= 400)]) ] ? me_st_userminlargestacktoblindratio_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 2 && [(f$OpenPPL_MaxStillToActStackSize > 15 && f$OpenPPL_BigBlindSize <= 200) || (f$OpenPPL_MaxStillToActStackSize > 10 && f$OpenPPL_BigBlindSize == 300) || (f$OpenPPL_MaxStillToActStackSize > 10 && f$OpenPPL_BigBlindSize >= 400)]) ] ? me_st_usermaxlargestacktoblindratio_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct == 2 && f$OpenPPL_Button && me_re_userminsmallstacktoblindratio && me_re_usermaxsmallstacktoblindratio) ] ? me_st_user2smallstacksleft_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct == 2 && f$OpenPPL_Button && me_re_userminsmallstacktoblindratio && me_re_usermaxmidstacktoblindratio) ] ? me_st_user1small1midstackleft_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct == 2 && f$OpenPPL_Button && me_re_userminsmallstacktoblindratio && me_re_usermaxlargestacktoblindratio) ] ? me_st_user1small1largestackleft_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct == 2 && f$OpenPPL_Button && me_re_usermaxmidstacktoblindratio && me_re_userminmidstacktoblindratio) ] ? me_st_user2midstacksleft_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct == 2 && f$OpenPPL_Button && me_re_usermaxlargestacktoblindratio && me_re_userminmidstacktoblindratio) ] ? me_st_user1mid1largestackleft_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct == 2 && f$OpenPPL_Button && me_re_usermaxlargestacktoblindratio && me_re_userminlargestacktoblindratio) ] ? me_st_user2largestacksleft_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct == 1 && f$OpenPPL_SmallBlind && me_re_usermaxsmallstacktoblindratio) ] ? me_st_user1smallstackleft_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct == 1 && f$OpenPPL_SmallBlind && me_re_usermaxmidstacktoblindratio) ] ? me_st_user1midstackleft_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct == 1 && f$OpenPPL_SmallBlind && me_re_usermaxlargestacktoblindratio) ] ? me_st_user1largestackleft_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? me_st_useropponents0_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0) || (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1)]) ] ? me_st_useropponents1_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 1) || (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2) || (f$OpenPPL_Raises == 2 && f$OpenPPL_Calls == 0)]) ] ? me_st_useropponents2_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Raises >= 2 || (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls >= 2) || (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 3)]) ] ? me_st_useropponentsmultiway_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsLastAction == f$OpenPPL_None) ] ? me_st_userunopenedpot_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Raises == 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_CallsSinceLastRaise == 0) ] ? me_st_userraisedpot_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Raises == 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_CallsSinceLastRaise == 1) ] ? me_st_user1coldcalledpot_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Raises == 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_CallsSinceLastRaise > 1) ] ? me_st_usermulticoldcalledpot_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 1) || f$OpenPPL_BotsLastAction == f$OpenPPL_Call]) ] ? me_st_userlimpedpot_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 1) ] ? me_st_useroppallin1bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 2) ] ? me_st_useroppallin2bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 3) ] ? me_st_useroppallin3bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 4) ] ? me_st_useroppallin4bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 5) ] ? me_st_useroppallin5bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 6) ] ? me_st_useroppallin6bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 7) ] ? me_st_useroppallin7bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 8) ] ? me_st_useroppallin8bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 9) ] ? me_st_useroppallin9bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 10) ] ? me_st_useroppallin10bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 11) ] ? me_st_useroppallin11bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 12) ] ? me_st_useroppallin12bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize > 12) ] ? me_st_useroppallingreaterthan12bb_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 0) ] ? me_st_useratc0preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 1) ] ? me_st_useratc1preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 2) ] ? me_st_useratc2preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 3) ] ? me_st_useratc3preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 4) ] ? me_st_useratc4preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 5) ] ? me_st_useratc5preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 6) ] ? me_st_useratc6preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 7) ] ? me_st_useratc7preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 8) ] ? me_st_useratc8preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 9) ] ? me_st_useratc9preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 10) ] ? me_st_useratc10preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall >= 10) ] ? me_st_useratcgreaterthan10preflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall <= 10 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppallinlessthanorequalto10percstack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 10 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppallinlessthanorequalto20percstack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 20 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppallinlessthanorequalto30percstack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 30 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 40 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppallinlessthanorequalto40percstack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 40 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppallinlessthanorequalto50percstack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppallinlessthanorequalto75percstack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppallingreaterthanorequalto75percstack_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppallingreaterthanorequalto100percstack_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall <= 10 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useroppallinlessthanorequalto10percstack_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 10 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useratclessthanorequalto20percstack_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 20 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useratclessthanorequalto30percstack_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 30 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 40 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useratclessthanorequalto40percstack_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 40 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useratclessthanorequalto50percstack_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useratclessthanorequalto75percstack_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useratcgreaterthanorequalto75percstack_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_useratcgreaterthanorequalto100percstack_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall <= 10 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppallinlessthanorequalto10percpot_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 10 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useratclessthanorequalto20percpot_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useratclessthanorequalto30percpot_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 30 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 40 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useratclessthanorequalto40percpot_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 40 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useratclessthanorequalto50percpot_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useratclessthanorequalto75percpot_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useratcgreaterthanorequalto75percpot_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall > 100 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useratcgreaterthanorequalto100percpot_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_MinOpponentStackSize > 0 && [(f$OpenPPL_Raises >= 2 && f$OpenPPL_OpponentIsAllin) || (f$OpenPPL_OpponentsWithLowerStack >= 3) || (f$OpenPPL_Raises >= 1 && f$OpenPPL_OpponentsWithLowerStack >= 2) || (f$OpenPPL_Raises == 1 && f$OpenPPL_CallsSinceLastRaise == 1 && f$OpenPPL_OpponentIsAllin) || (me_re_userdoubledupstack) || (f$OpenPPL_StackSize >= 5 && f$OpenPPL_MinOpponentStackSize <= 3) || (f$OpenPPL_StackSize >= 3 && f$OpenPPL_MinOpponentStackSize <= 2) || ( ![(me_re_usershortstackattable)] && f$OpenPPL_MinOpponentStackSize <= 3)] && [nopponentsseated == 3]) ] ? me_st_userbubblesafetyfold_1 : 0] && 0 ? 0 :
[ [ ([(f$OpenPPL_Raises >= 2 && f$OpenPPL_OpponentIsAllin) || (f$OpenPPL_Raises == 1 && f$OpenPPL_CallsSinceLastRaise == 1 && f$OpenPPL_OpponentIsAllin)] && nopponentsseated == 3) ] ? me_st_userbubbleoppallinandcalled_1 : 0] && 0 ? 0 :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [(f$OpenPPL_TotalInvested >= f$OpenPPL_StackSize) || f$OpenPPL_StackSize <= 5] && [($AK) || ($AA) || ($KK) || ($QQ) || ($JJ)]) ] ? f$OpenPPL_RaiseMax :
[ (me_re_userbubbleoppallinandcalled && f$OpenPPL_BetSize <= 2 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
[ (me_re_userbubbleoppallinandcalled &&  ![([$AA] || [$KK])]) ] ? f$OpenPPL_Fold :
[ (me_re_userbubbleoppallinandcalled &&  ![([$AA] || [$KK] || [$QQ])]) ] ? f$OpenPPL_Fold :
[ (f$OpenPPL_BigBlind && f$OpenPPL_TotalInvested >= 150 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_BotsLastAction == f$OpenPPL_None) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BigBlindSize >= 1000 && [f$OpenPPL_Raises == 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_StackSize < 30 && [($QQ) || ($JJ)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_StackSize > 100 && f$OpenPPL_Raises >= 1 && f$OpenPPL_BetSize > 12 &&  ![([$AA] || [$KK] || [$QQ] || [$AK] || f$OpenPPL_OpponentIsAllin || nopponentsseated <= 3)]) ] ? f$OpenPPL_Fold :
[ (nopponentsseated <= 4 && f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || f$OpenPPL_PairInHand] && f$OpenPPL_BetSize < 26 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
[ (me_re_userheadsup && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize <= 10 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($QJ) || ($QT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
[ (me_re_userheadsup && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($A) || ($KQ) || ($KJ) || ($KT) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT)]) ] ? 110 * f$RaiseByPercentagedPotsize :
[ (me_re_userheadsup && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize < 10 && [($A) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($KQ) || ($KJ) || ($KTs)]) ] ? f$OpenPPL_RaiseMax :
[ (me_re_userheadsup && f$OpenPPL_Raises == 0 && [f$OpenPPL_PairInHand] && f$OpenPPL_StackSize < 15) ] ? f$OpenPPL_RaiseMax :
[ (me_re_userheadsup && f$OpenPPL_Raises == 0 && [f$OpenPPL_PairInHand] && f$OpenPPL_StackSize >= 15) ] ? f$OpenPPL_RaiseMin :
[ (me_re_userheadsup && f$OpenPPL_StackSize <= 15 && [($ATs) || f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BigBlind && f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize < 10 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_StackSize < 3 && f$OpenPPL_BotsLastAction == f$OpenPPL_Raise) ] ? f$OpenPPL_RaiseMax :
[ ([($AA) || ($KK)] && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 3) ] ? f$OpenPPL_RaisePot :
[ ([($AA) || ($KK)] && [f$OpenPPL_Raises > 1 || f$OpenPPL_Calls >= 3]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize < 15 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($A) || ($KQs)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BetSize < 15 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize < 10 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8) || ($T7) || ($98) || ($97) || ($96s) || ($87) || ($86s) || ($85s) || ($76) || ($65s)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize < 15 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_BotsLastAction == f$OpenPPL_Raise) ] ? f$OpenPPL_Call :
[ ([($22) || ($33) || ($44) || ($55)] && f$OpenPPL_StackSize > 12 && f$OpenPPL_StackSize < 20 && f$OpenPPL_Raises >= 1 &&  ![(f$OpenPPL_TotalInvested > 50 * 0.01 * f$OpenPPL_StackSize)] && f$OpenPPL_AmountToCall > 2 && nopponentsseated > 2) ] ? f$OpenPPL_Fold :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_StackSize <= 3 && f$OpenPPL_Raises >= 1) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_BetSize <= 3 && f$OpenPPL_StackSize >= 18 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && [($JJ)] && nopponentsseated > 2) ] ? 8 * f$RaiseByBigBlinds :
[ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_BetSize <= 3 && f$OpenPPL_StackSize >= 18 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && f$OpenPPL_BigBlindSize > 80 && [($99) || ($TT) || ($JJ)] && nopponentsseated > 2) ] ? 8 * f$RaiseByBigBlinds :
[ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_BetSize <= 4 && f$OpenPPL_StackSize >= 18 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && [($JJ)] && nopponentsseated > 2) ] ? 9 * f$RaiseByBigBlinds :
[ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_BetSize <= 4 && f$OpenPPL_StackSize >= 18 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && f$OpenPPL_BigBlindSize > 80 && [($99) || ($TT) || ($JJ)] && nopponentsseated > 2) ] ? 9 * f$RaiseByBigBlinds :
[ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_BetSize <= 4 && f$OpenPPL_StackSize < 18 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && [($99) || ($TT) || ($JJ)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_BetSize <= 4 && f$OpenPPL_StackSize >= 18 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && [($AA) || ($KK) || ($QQ) || ($AK)] && nopponentsseated > 2) ] ? 85 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_BetSize <= 4 && f$OpenPPL_StackSize < 18 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_InBigBlind && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises <= 1 && f$OpenPPL_AmountToCall <= 1) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_MinOpponentStackSize > 0 && f$OpenPPL_StackSize >= 8 && f$OpenPPL_MinOpponentStackSize <= 2 && nopponentsseated == 3 &&  ![(f$OpenPPL_PairInHand || [$AK] || [$AQ] || [$AJ] || [$AT] || [$KQ] || [$KJ] || [$KT] || [$QJ] || [$QTs] || [$JTs] || [$T9s])]) ] ? f$OpenPPL_Fold :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && [($AA) || ($KK)] && f$OpenPPL_StackSize <= 10) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_StillToAct > 4 && [($AA)]) ] ? f$OpenPPL_RaisePot :
[ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 12 && [($AA) || ($KK) || ($QQ)]) ] ? 3 * f$RaiseByBigBlinds :
[ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize < 12 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 11 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)] && me_re_userheadsup) ] ? f$OpenPPL_RaisePot :
[ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 7 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BigBlindSize <= 50 && f$OpenPPL_BotsLastAction == f$OpenPPL_Call && [($AA) || ($KK)] && f$OpenPPL_Random <= 50) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BigBlindSize <= 50 && f$OpenPPL_BotsLastAction == f$OpenPPL_Call && [($AA) || ($KK)] && f$OpenPPL_Random > 50) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize <= 50 &&  ![(me_re_usertightpreflop)] && me_re_userearlyposition && [($AA) || ($KK)] && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlind && f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaisePot :
[ (f$OpenPPL_BigBlind && f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaisePot :
[ (f$OpenPPL_BigBlind && f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 3 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaisePot :
[ (f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaisePot :
[ (f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaisePot :
[ (f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 3 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaisePot :
[ (nopponentsseated <= 3 && f$OpenPPL_StackSize <= 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ)] && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall <= 13 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0 && [($AA) || ($KK)] && f$OpenPPL_BigBlindSize <= 80) ] ? 3 * f$RaiseByBigBlinds :
[ (f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0 && [($AA) || ($KK)]) ] ? 3 * f$RaiseByBigBlinds :
[ (f$OpenPPL_StackSize > 25 && [($AA) || ($KK)]) ] ? 125 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_StackSize <= 25 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_StackSize <= 6 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ)] && f$OpenPPL_MinOpponentStackSize >= 4) ] ? f$OpenPPL_RaisePot :
[ (f$OpenPPL_StackSize <= 10 && [($AK)] && f$OpenPPL_MinOpponentStackSize >= 4) ] ? f$OpenPPL_RaiseMax :
[ (nopponentsseated <= 4 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ)]) ] ? 3 * f$RaiseByBigBlinds :
[ (nopponentsseated <= 4 && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ)]) ] ? 3 * f$OpenPPL_AmountToCall :
[ (nopponentsseated <= 4 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && f$OpenPPL_StackSize <= 6) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && f$OpenPPL_BetSize <= 30 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && f$OpenPPL_BetSize <= 30 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_BigBlind && f$OpenPPL_Raises >= 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_BetSize < 5 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_BigBlind && f$OpenPPL_BetSize < 12 * 0.01 * f$OpenPPL_StackSize && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_Folds > 2 && f$OpenPPL_BetSize < 15 * 0.01 * f$OpenPPL_StackSize && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && nopponentsseated < 5 && f$OpenPPL_Calls == 0 && f$OpenPPL_BetSize < 18 * 0.01 * f$OpenPPL_StackSize && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_BetSize <= 25 * 0.01 * f$OpenPPL_StackSize && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_BigBlind && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises >= 1 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises >= 1 && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Opponents == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_BetSize <= 35 * 0.01 * f$OpenPPL_StackSize && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 10 && f$OpenPPL_TotalInvested >= 50 * 0.01 * f$OpenPPL_PotSize && [f$OpenPPL_PairInHand] &&  ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$TT])]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_StackSize <= 6 && [f$OpenPPL_BigBlind || f$OpenPPL_SmallBlind] && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && [($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA) || ($AK) || ($AQ) || ($AJs) || ($KQs)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_SmallBlind && nopponentsseated <= 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 0 && [($AK) || ($AQ) || ($AJs) || ($KQs) || ($AA) || ($KK) || ($QQ) || ($JJ)]) ] ? 3 * f$RaiseByBigBlinds :
[ (f$OpenPPL_StackSize <= 7 && nopponentsseated <= 3 && f$OpenPPL_StillToAct <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_Calls == 0 && [($TT) || ($JJ) || ($QQ) || ($KK) || ($AA) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 7 && f$OpenPPL_Calls == 0 && [($55) || ($66) || ($77) || ($88) || ($99)]) ] ? f$OpenPPL_RaiseMax :
[ ([f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind] && f$OpenPPL_Raises == 1 && f$OpenPPL_LastRaiserPosition <= 3 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_Calls == 0 && f$OpenPPL_BetSize <= 4 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Bubble_Safety_Fold)
//
f$myfunc1  &&  [ (f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_Button || f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind)] &&  ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$TT] || [$99] || [$AK] || [$AQ] || [$AJ] || [$AT])] && f$OpenPPL_OpponentsAtTable > 2) ] ? f$OpenPPL_Fold :
f$myfunc1  &&  [ (f$OpenPPL_Raises == 0 &&  ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$TT] || [$99] || [$88] || [$77] || [$AK] || [$AQ] || [$AJ] || [$AT] || [$KQ])] && f$OpenPPL_OpponentsAtTable > 2) ] ? f$OpenPPL_Fold :
f$myfunc1  &&  [ (f$OpenPPL_Raises == 1 &&  ![(f$OpenPPL_OpponentIsAllin)] &&  ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$AK])] && f$OpenPPL_OpponentsAtTable > 2) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_BigBlind_Position AND User_Opponent_Is_All_In AND Raises = 1 AND Calls = 0 AND LastRaiserPosition = 1 AND (NOT (User_Bubble) OR (User_Bubble AND User_Short_Stack_At_Table)))
//
f$myfunc2  &&  [ (f$OpenPPL_StackSize > 6 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize > 6 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_BetSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize > 6 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_BetSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize > 6 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_BetSize <= 6 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7s) || ($KQs) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize > 6 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_BetSize <= 7 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize > 6 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_BetSize <= 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize > 6 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_BetSize <= 9 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($AK) || ($AQ) || ($AJ) || ($ATs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize > 6 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_BetSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize > 6 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_BetSize <= 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_StackSize > 4 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_StackSize > 4 && f$OpenPPL_BetSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($T9s) || ($T8s) || ($98s) || ($87s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_StackSize > 4 && f$OpenPPL_BetSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($QJ) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_StackSize > 4 && f$OpenPPL_BetSize <= 12 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6s) || ($A5s) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize <= 4 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize <= 4 && f$OpenPPL_BetSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($T9s) || ($T8s) || ($98s) || ($97s) || ($87s) || ($87s) || ($76s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc2  &&  [ (f$OpenPPL_StackSize <= 3 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 12 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc3  &&  [ ([($AA) || ($KK)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($QJ) || ($QT) || ($Q9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($A3) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($K3) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7s) || ($J6s) || ($T9) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc3  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6s) || ($98) || ($97s) || ($87s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 11 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc4  &&  [ ([($AA) || ($KK)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 12 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($QJ) || ($QT) || ($Q9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($QJ) || ($QT) || ($Q9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($A3) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($K3) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7s) || ($J6s) || ($T9) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc4  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6s) || ($98) || ($97s) || ($87s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 10 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc5  &&  [ ([($AA) || ($KK)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 13 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A4) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 12 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A4) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A4) || ($A3) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A4) || ($A3) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($K3) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7s) || ($J6s) || ($T9) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc5  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6s) || ($98) || ($97s) || ($87s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 9 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc6  &&  [ ([($AA) || ($KK)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 14 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($A3) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 13 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($A3) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 12 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($A3) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($A3) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($A4) || ($A3) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($K3) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7s) || ($J6s) || ($T9) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc6  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6s) || ($98) || ($97s) || ($87s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 8 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc7  &&  [ ([($AA) || ($KK)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 15 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 14 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 13 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 12 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6s) || ($Q5s) || ($Q4s) || ($JT) || ($J9) || ($J8) || ($J7s) || ($T9s) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($T9) || ($T8s) || ($T7s) || ($98s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc7  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($J5) || ($J4) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6s) || ($T5s) || ($T4s) || ($98) || ($97s) || ($96s) || ($87s) || ($86s) || ($76s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 7 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc8  &&  [ ([($AA) || ($KK)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 16 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 15 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 14 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 13 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 12 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5s) || ($Q4s) || ($Q3s) || ($JT) || ($J9) || ($J8) || ($J7s) || ($T9s) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5) || ($Q4) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($T9) || ($T8) || ($T7s) || ($98s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc8  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($J5) || ($J4) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6) || ($T5s) || ($T4s) || ($98) || ($97) || ($96s) || ($87s) || ($86s) || ($76s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 6 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc9  &&  [ ([($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize >= 16 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 15 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 14 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 13 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 12 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5s) || ($Q4s) || ($Q3s) || ($JT) || ($J9) || ($J8) || ($J7s) || ($T9) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5) || ($Q4) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($T9) || ($T8) || ($T7s) || ($98s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc9  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($J5) || ($J4) || ($J3) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6) || ($T5s) || ($T4s) || ($T3s) || ($98) || ($97) || ($96s) || ($95s) || ($87s) || ($86s) || ($76s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 5 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc10  &&  [ ([($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize >= 16 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 15 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 14 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 13 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 12 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5s) || ($Q4s) || ($Q3s) || ($JT) || ($J9) || ($J8) || ($J7s) || ($T9) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5) || ($Q4) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($T9) || ($T8) || ($T7s) || ($98s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc10  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($J5) || ($J4) || ($J3) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6) || ($T5s) || ($T4s) || ($T3s) || ($98) || ($97) || ($96s) || ($95s) || ($87s) || ($86s) || ($76s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 4 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc11  &&  [ ([($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize >= 16 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 15 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 14 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 13 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 12 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5s) || ($Q4s) || ($Q3s) || ($JT) || ($J9) || ($J8) || ($J7s) || ($T9) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5) || ($Q4) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($T9) || ($T8) || ($T7s) || ($98s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc11  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($J5) || ($J4) || ($J3) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6) || ($T5s) || ($T4s) || ($T3s) || ($98) || ($97) || ($96s) || ($95s) || ($87s) || ($86s) || ($76s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 3 AND OpponentsAtTable >= 2 AND (User_Short_Stack_At_Table OR User_2nd_Short_Stack_At_Table))
//
f$myfunc12  &&  [ ([($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize >= 16 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 15 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 14 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 13 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 12 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 11 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 9 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 8 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 7 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 6 && [($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($JT) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5s) || ($Q4s) || ($Q3s) || ($JT) || ($J9) || ($J8) || ($J7s) || ($T9) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($Q5) || ($Q4) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($T9) || ($T8) || ($T7s) || ($98s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc12  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($J5) || ($J4) || ($J3) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6) || ($T5s) || ($T4s) || ($T3s) || ($98) || ($97) || ($96s) || ($95s) || ($87s) || ($86s) || ($76s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_ITM AND Raises >= 1)
//
f$myfunc13  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 200)
//
f$myfunc14  &&  [ (f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc14  &&  [ (f$OpenPPL_StackSize <= 15 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($QJ) || ($QTs) || ($Q9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc14  &&  [ (f$OpenPPL_MinStillToActStackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc14  &&  [ (f$OpenPPL_MinStillToActStackSize <= 15 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($QJ) || ($QTs) || ($Q9s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 300)
//
f$myfunc15  &&  [ (f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc15  &&  [ (f$OpenPPL_StackSize <= 15 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc15  &&  [ (f$OpenPPL_MinStillToActStackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc15  &&  [ (f$OpenPPL_MinStillToActStackSize <= 15 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 400)
//
f$myfunc16  &&  [ (f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc16  &&  [ (f$OpenPPL_StackSize <= 15 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc16  &&  [ (f$OpenPPL_MinStillToActStackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc16  &&  [ (f$OpenPPL_MinStillToActStackSize <= 15 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5s) || ($K4s) || ($K3s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 100 AND StackSize >= 120)
//
f$myfunc17  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc17  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 120 AND StackSize >= 100)
//
f$myfunc18  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc18  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 160 AND StackSize >= 75)
//
f$myfunc19  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc19  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 200 AND StackSize >= 55)
//
f$myfunc20  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc20  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 240 AND StackSize >= 42)
//
f$myfunc21  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc21  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 300 AND StackSize >= 34)
//
f$myfunc22  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc22  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 400 AND StackSize >= 25)
//
f$myfunc23  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc23  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 500 AND StackSize >= 20)
//
f$myfunc24  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc24  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 600 AND StackSize >= 17)
//
f$myfunc25  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc25  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND BigBlindSize = 800 AND StackSize >= 12)
//
f$myfunc26  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || ($JXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc26  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BotsLastAction = RAISE AND User_Heads_Up AND StackSize > 15 AND OpponentsWithLowerStack = 0)
//
f$myfunc27  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc27  &&  [ ( ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$TT] || [$99] || [$88] || [$77] || [$AK] || [$AQ] || [$AJ] || [$AT] || [$KQ])]) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BotsLastAction = RAISE AND User_Heads_Up AND StackSize <= 15 AND OpponentsWithLowerStack = 0)
//
f$myfunc28  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($QXs) || ($JT) || ($T9) || ($98)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc28  &&  [ (f$OpenPPL_StackSize < 7) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BotsLastAction = RAISE AND User_Heads_Up AND User_2nd_Short_Stack_At_Table)
//
f$myfunc29  &&  [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall <= 15 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc29  &&  [ ([f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc29  &&  [ ([($A)] && f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall <= 40 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc29  &&  [ ( ![(f$OpenPPL_PairInHand || [$A] || [$KQ] || [$KJ] || [$KT] || [$K9] || [$K8] || [$K7] || [$QJ] || [$QT] || [$JT])]) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Heads_Up AND StillToAct = 1 AND StackSize >= 15 AND Raises = 0 AND Calls = 0)
//
f$myfunc30  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc30  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($JXs) || ($T9s) || ($T8s) || ($T7s) || ($98s) || ($97s) || ($87s) || ($86s) || ($76s) || ($75s) || ($65s)] && f$OpenPPL_Random <= 85) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc30  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6) || ($98) || ($97) || ($96) || ($95) || ($87) || ($86) || ($85) || ($76) || ($75) || ($65)]) ] ? 1 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (User_Heads_Up AND StillToAct = 0 AND StackSize >= 15 AND Raises = 1 AND AmountToCall <= 1)
//
f$myfunc31  &&  [ ([($A4) || ($A3) || ($A2) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($K3) || ($K2) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($JT) || ($J9) || ($J8) || ($J7)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (User_Heads_Up AND StackSize >= 15 AND Raises = 0)
//
f$myfunc32  &&  [ (f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($JT) || ($J9) || ($J8s) || ($T9) || ($T8) || ($98) || ($97) || ($87) || ($86s) || ($76s) || ($75s) || ($65s) || ($64s) || ($54s)]) ] ? 1 * f$RaiseByBigBlinds :
f$myfunc32  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($QJ) || ($QTs) || ($JTs)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (User_Heads_Up AND StackSize >= 15 AND Raises = 1)
//
f$myfunc33  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KTs) || ($QJs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Heads_Up AND StackSize > 10 AND Raises = 0)
//
f$myfunc34  &&  [ (f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9) || ($J8s) || ($T9s) || ($T8s) || ($98s) || ($87s)]) ] ? 1 * f$RaiseByBigBlinds :
f$myfunc34  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($QJ) || ($QTs) || ($JTs)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (User_Heads_Up AND StackSize > 10 AND Raises = 1)
//
f$myfunc35  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($QJ) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Heads_Up AND StackSize <= 10)
//
f$myfunc36  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($KXs) || ($QJ) || ($Q9) || ($Q8s) || ($JT) || ($J9) || ($J8s) || ($T9s) || ($T8s) || ($98s) || ($87s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Heads_Up AND StackSize <= 6)
//
f$myfunc37  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($JT) || ($J9) || ($J8s) || ($T9s) || ($T8s) || ($98s) || ($87s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Heads_Up AND StackSize <= 4)
//
f$myfunc38  &&  [ (f$OpenPPL_Raises >= 0) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Bubble AND OpponentsWithLowerStack = 0 AND StackSize <= 15)
//
f$myfunc39  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_None && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc39  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc39  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc39  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_RaiseMax :
f$myfunc39  &&  [ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_StillToAct <= 4 && f$OpenPPL_Calls == 0 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Bubble AND StackSize <= 10 AND Raises = 0 AND Calls = 0 AND OpponentsWithLowerStack = 0 AND User_Button_Position)
//
f$myfunc40  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || ($Q9s) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Bubble AND StackSize <= 6 AND Raises = 0 AND Calls = 0 AND OpponentsWithLowerStack = 0 AND User_Button_Position)
//
f$myfunc41  &&  [ ([($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($JT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Bubble AND StackSize <= 10 AND Raises = 0 AND Calls = 0 AND OpponentsWithLowerStack = 0 AND StillToAct <= 4)
//
f$myfunc42  &&  [ ([($KQ) || ($KJ) || ($KT) || ($A8) || ($A9) || ($AT) || ($AJ) || ($AQ) || ($AK) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Bubble AND Raises = 0 AND Calls = 0 AND OpponentsWithLowerStack = 0 AND StillToAct = 5)
//
f$myfunc43  &&  [ (f$OpenPPL_StackSize <= 10 && [($KQs) || ($ATs) || ($AJ) || ($AQ) || ($AK) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc43  &&  [ (f$OpenPPL_StackSize <= 9 && [($KQs) || ($KJs) || ($A8s) || ($A9s) || ($AT) || ($AJ) || ($AQ) || ($AK) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc43  &&  [ (f$OpenPPL_StackSize <= 8 && [($JTs) || ($QTs) || ($QJs) || ($KQs) || ($KJs) || ($KTs) || ($A4s) || ($A5s) || ($A6s) || ($A7s) || ($A8s) || ($A9) || ($AT) || ($AJ) || ($AQ) || ($AK) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc43  &&  [ (f$OpenPPL_StackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($K8s) || ($K7s) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JT) || ($J9s) || ($J8s) || ($J7s) || ($T9s) || ($T8s) || ($T7s) || ($98s) || ($97s) || ($87s) || ($86s) || ($76s) || ($65s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc43  &&  [ (f$OpenPPL_StackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9) || ($T8s) || ($T7s) || ($T6s) || ($98s) || ($97s) || ($96s) || ($87s) || ($86s) || ($76s) || ($75s) || ($65s) || ($54s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc43  &&  [ (f$OpenPPL_StackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($QXs) || ($JT) || ($J9) || ($J8) || ($JXs) || ($T9) || ($T8) || ($T7s) || ($T6s) || ($T5s) || ($98) || ($97) || ($96s) || ($95s) || ($87) || ($86s) || ($85s) || ($76s) || ($75s) || ($74s) || ($65s) || ($64s) || ($54s) || ($53s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Bubble AND BotsLastAction = Raise)
//
f$myfunc44  &&  [ ([($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc44  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc44  &&  [ (f$OpenPPL_StackSize <= 5) ] ? f$OpenPPL_RaiseMax :
f$myfunc44  &&  [ (f$OpenPPL_AmountToCall <= 15 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (User_Bubble AND StackSize >= 12 AND Raises = 0 AND Calls = 0)
//
f$myfunc45  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs)]) ] ? 115 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (User_Bubble AND StackSize <= 15 AND User_BigBlind_Position)
//
f$myfunc46  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition == 1 &&  ![(f$OpenPPL_OpponentIsAllin)] && [($AK) || ($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc46  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition == 1 &&  ![(f$OpenPPL_OpponentIsAllin)] && f$OpenPPL_MinOpponentStackSize >= 6 && f$OpenPPL_OpponentsWithLowerStack >= 1 && [($AK) || ($AQ) || ($AJ) || ($KQ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// ((User_Bubble) AND OpponentsWithLowerStack >= 1 AND MinOpponentstackSize <= 3 AND StackSize >= 8)
//
f$myfunc47  &&  [ (f$OpenPPL_StackSize >= 15 && [($A) || ($KTs) || ($QJ)] && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc47  &&  [ (f$OpenPPL_PairInHand && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 12 && f$OpenPPL_BigBlindSize >= 150) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc47  &&  [ (f$OpenPPL_PairInHand && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 11) ] ? f$OpenPPL_RaiseMax :
f$myfunc47  &&  [ (f$OpenPPL_PairInHand && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize > 11) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// ((User_Bubble) AND OpponentsWithLowerStack >= 1 AND MinOpponentstackSize <= 5 AND StackSize >= 10 AND StackSize < 20)
//
f$myfunc48  &&  [ (f$OpenPPL_StackSize >= 15 && [($A) || ($KTs) || ($QJ)] && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc48  &&  [ (f$OpenPPL_PairInHand && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 12 && f$OpenPPL_BigBlindSize >= 150) ] ? f$OpenPPL_RaiseMin :
f$myfunc48  &&  [ (f$OpenPPL_PairInHand && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// ((User_Bubble) AND OpponentsWithLowerStack >= 1 AND MinOpponentstackSize <= 4 AND StackSize >= 8 AND StackSize < 20)
//
f$myfunc49  &&  [ (f$OpenPPL_StackSize >= 15 && [($A) || ($KTs) || ($QJ)] && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc49  &&  [ (f$OpenPPL_PairInHand && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 12 && f$OpenPPL_BigBlindSize >= 150) ] ? f$OpenPPL_RaiseMin :
f$myfunc49  &&  [ (f$OpenPPL_PairInHand && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (User_Bubble AND OpponentsWithLowerStack >= 1 AND MinOpponentstackSize <= 3 AND StackSize >= 9)
//
f$myfunc50  &&  [ ( ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$TT] || [$AK] || [$AQ] || [$AJ])]) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Bubble AND OpponentsWithLowerStack >= 1 AND StackSize >= 15 AND User_Button_Position AND Raises = 0 AND Calls = 0)
//
f$myfunc51  &&  [ ([($A) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($KQ) || ($KJ) || ($KT) || ($QJ)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (User_Bubble AND OpponentsWithLowerStack >= 1 AND StackSize >= 15 AND User_SmallBlind_Position AND Raises = 0 AND Calls = 0)
//
f$myfunc52  &&  [ ([($A) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($KQ) || ($KJ) || ($KT) || ($QJ)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (User_Bubble AND OpponentsWithLowerStack >= 1 AND StackSize >= 15 AND User_BigBlind_Position AND Raises = 1 AND Calls = 0 AND (LastRaiserPosition = 1 OR LastRaiserPosition = 2) AND BetSize = 1)
//
f$myfunc53  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($KQ) || ($KJ)]) ] ? 75 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (User_Bubble AND StackSize >= 15 AND User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND Opponents = 1)
//
f$myfunc54  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc54  &&  [ ([($A) || ($KQ) || ($KJ) || ($KT) || ($QJ)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (User_Bubble AND StackSize >= 15 AND User_BigBlind_Position AND Raises = 1 AND Calls = 0 AND (LastRaiserPosition = 1 OR LastRaiserPosition = 2) AND BetSize = 1)
//
f$myfunc55  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Bubble AND Raises = 0 AND StackSize <= 10)
//
f$myfunc56  &&  [ ([($AK) || ($AQ) || ($AJ) || ($JJ) || ($TT) || ($99) || ($88)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc56  &&  [ (f$OpenPPL_OpponentsWithLowerStack == 0 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7s) || ($A6s) || ($A5s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc56  &&  [ (f$OpenPPL_OpponentsWithLowerStack == 0 && [($KQ) || ($QJs) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc56  &&  [ ([($AA) || ($KK)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (User_Bubble AND OpponentsWithLowerStack = 0 AND Raises = 0 AND StackSize <= 10)
//
f$myfunc57  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7s) || ($A6s) || ($A5s)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMax :
f$myfunc57  &&  [ ([($KQ) || ($QJs) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMax :
f$myfunc57  &&  [ ([($AK) || ($AQ) || ($AJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc57  &&  [ ([($KQ) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc57  &&  [ ([($AT) || ($A9) || ($A8) || ($A7s) || ($A6s) || ($A5s)]) ] ? f$OpenPPL_Call :
f$myfunc57  &&  [ ([($QJs) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88)]) ] ? f$OpenPPL_Call :
f$myfunc57  &&  [ ([($AA) || ($KK)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (User_ITM AND StackSize <= 10)
//
f$myfunc58  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 1 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($QJ) || ($QT) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc58  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_StackSize <= 6 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($QJ) || ($QT) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc58  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_Calls == 0 && [($A) || ($K) || ($Q9s) || ($Q8s) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc58  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_StackSize <= 6 && f$OpenPPL_Calls == 0 && [($A) || ($K) || ($Q9s) || ($Q8s) || ($J9s) || ($T9s) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s) || ($76s) || ($75s) || ($65s) || ($64s) || ($54s) || ($53s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc58  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JT) || ($J9s) || ($J8s) || ($T9s) || ($98s) || ($87s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc58  &&  [ (f$OpenPPL_OpponentIsAllin && [f$OpenPPL_CallsSinceLastRaise == 1 || f$OpenPPL_Raises >= 2] &&  ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$AK] || [$AQ])]) ] ? f$OpenPPL_Fold :
f$myfunc58  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($QJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc58  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 7 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($QJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc58  &&  [ (f$OpenPPL_Raises == 1 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_BigBlind_Position AND Raises = 0 AND Calls = 1 AND LastCallerPosition = 1 AND OpponentsWithLowerStack = 0 AND StackSize <= 10)
//
f$myfunc59  &&  [ ( ![([$A] || [$KQ] || [$KJ] || [$KT] || [$K9] || [$QJ] || [$QT] || [$JT] || f$OpenPPL_PairInHand)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc59  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND Raises = 0)
//
f$myfunc60  &&  [ (me_re_userbuttonposition && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KTs)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc60  &&  [ (me_re_userbuttonposition && f$OpenPPL_StackSize > 20 && [($99) || ($88) || ($A9) || ($A8) || ($K9) || ($QJ)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc60  &&  [ (me_re_userbuttonposition && f$OpenPPL_StackSize > 30 && [f$OpenPPL_PairInHand || ($A) || ($K)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc60  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KTs)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc60  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_StackSize > 20 && [($99) || ($88) || ($A9) || ($A8) || ($K9) || ($QJ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc60  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_StackSize > 30 && [f$OpenPPL_PairInHand || ($A) || ($K)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc60  &&  [ (f$OpenPPL_BigBlind && f$OpenPPL_StackSize > 10 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || ($AA) || ($KK) || ($QQ) || ($JJ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc60  &&  [ (f$OpenPPL_BigBlind && f$OpenPPL_StackSize <= 10 && [($A) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc60  &&  [ (f$OpenPPL_BigBlind && f$OpenPPL_StackSize <= 6 && [($A) || ($K) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_SmallBlind_Position AND Raises = 1 AND StackSize <= 10 AND OpponentsWithLowerStack = 0)
//
f$myfunc61  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_SmallBlind_Position AND Raises = 1 AND StackSize <= 10 AND OpponentsWithLowerStack >= 1)
//
f$myfunc62  &&  [ ([($A) || ($KXs) || ($KQ) || ($KJ) || ($KTs) || ($QJs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_BigBlind_Position AND Raises = 1 AND StackSize <= 10 AND OpponentsWithLowerStack = 0)
//
f$myfunc63  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_BigBlind_Position AND Raises = 1 AND StackSize <= 10 AND OpponentsWithLowerStack >= 1)
//
f$myfunc64  &&  [ ([($A) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND Raises >= 1)
//
f$myfunc65  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && f$OpenPPL_TotalInvested >= 125 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc65  &&  [ ([($AA) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc65  &&  [ (f$OpenPPL_StackSize <= 13 && [($AJ) || ($AT) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc65  &&  [ (f$OpenPPL_StackSize >= 20 && [($AJ) || ($KQ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (User_Button_Position AND MaxStillToActStackSize >= 20 AND MinStillToActStackSize >= 20 AND Raises = 0 AND Calls = 0)
//
f$myfunc66  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8s) || ($A7s) || ($KQs) || ($KJs) || ($KTs) || ($QJs) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc66  &&  [ (f$OpenPPL_StackSize <= 9 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($AXs) || ($KQ) || ($KJs) || ($KTs) || ($QJs) || ($QTs) || ($JTs) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc66  &&  [ (f$OpenPPL_StackSize <= 8 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KTs) || ($K9s) || ($QJ) || ($QTs) || ($Q9s) || ($JT) || ($J9s) || ($J8s) || ($T9s) || ($T8s) || ($98s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc66  &&  [ (f$OpenPPL_StackSize <= 7 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9) || ($T8s) || ($T7s) || ($T6s) || ($98) || ($97s) || ($96s) || ($87s) || ($86s) || ($76s) || ($65s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc66  &&  [ (f$OpenPPL_StackSize <= 6 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($J4s) || ($J3s) || ($T9) || ($T8) || ($T7) || ($T6s) || ($T5s) || ($T4s) || ($98) || ($97) || ($96s) || ($95s) || ($87) || ($86s) || ($85s) || ($84s) || ($76) || ($75s) || ($74s) || ($65s) || ($64s) || ($54s) || ($53s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc66  &&  [ (f$OpenPPL_StackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($Q4s) || ($Q3s) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($T9) || ($T8) || ($T7) || ($T6s) || ($98) || ($97s) || ($96s) || ($87) || ($86s) || ($85s) || ($76s) || ($75s) || ($65s) || ($64s) || ($54s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc66  &&  [ (f$OpenPPL_StackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7s) || ($J6s) || ($J5s) || ($J4s) || ($J3s) || ($T9) || ($T8) || ($T7s) || ($T6s) || ($T5s) || ($T4s) || ($98) || ($97) || ($96s) || ($95s) || ($87) || ($86s) || ($85s) || ($76) || ($75s) || ($74s) || ($65s) || ($64s) || ($54s) || ($53s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Button_Position AND StackSize <= 8 AND Raises = 0 AND Calls = 0)
//
f$myfunc67  &&  [ (f$OpenPPL_BigBlindSize < 300 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc67  &&  [ (f$OpenPPL_BigBlindSize >= 300 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($AQ) || ($AJ) || ($AT) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc67  &&  [ (f$OpenPPL_BigBlindSize >= 300 && f$OpenPPL_StackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($KXs) || ($QJ) || ($QT)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BotsLastAction = RAISE AND Raises <= 1 AND Opponents = 1)
//
f$myfunc68  &&  [ (f$OpenPPL_OpponentIsAllin && [($AK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 6 AND Raises = 0 AND Calls = 0 AND StillToAct <= 4 AND MinOpponentstackSize >= 2)
//
f$myfunc69  &&  [ ([f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc69  &&  [ ([($QJs) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 5 AND Raises = 0 AND Calls = 0 AND StillToAct <= 4 AND MinOpponentstackSize >= 2)
//
f$myfunc70  &&  [ ([f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc70  &&  [ ([($QJs) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 4 AND Raises = 0 AND Calls = 0 AND StillToAct <= 4 AND MinOpponentstackSize >= 2)
//
f$myfunc71  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($K8s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc71  &&  [ ([($QJ) || ($QTs) || ($Q9s) || ($JTs) || ($J9s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 3 AND Raises = 0 AND Calls = 0 AND StillToAct <= 4 AND MinOpponentstackSize >= 1)
//
f$myfunc72  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6s) || ($K5s) || ($K4s) || ($K3s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc72  &&  [ ([($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JT) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc72  &&  [ ([($J8s) || ($T9s) || ($T8s) || ($98s) || ($97s) || ($96s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc72  &&  [ ([($87s) || ($76s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 2 AND Raises = 0 AND Calls = 0 AND StillToAct <= 4)
//
f$myfunc73  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc73  &&  [ ([($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($Q4s) || ($JT) || ($J9)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc73  &&  [ ([($J8s) || ($J7s) || ($J6s) || ($T9) || ($T8s) || ($T7s) || ($T6s) || ($98s) || ($97s) || ($96s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc73  &&  [ ([($87s) || ($86s) || ($76s) || ($75s) || ($65s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_Chip_Leader)
//
f$myfunc273 &&  [ ([($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($QXs) || f$OpenPPL_PairInHand]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc74  &&  [ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 0 && [($A) || f$OpenPPL_PairInHand || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QT) || ($JTs)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (BotsLastAction = RAISE AND Raises <= 1 AND Opponents = 1)
//
f$myfunc75  &&  [ (f$OpenPPL_OpponentIsAllin && [($AK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc75  &&  [ (f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_OpponentIsAllin && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc75  &&  [ (f$OpenPPL_AmountToCall <= 3 && [f$OpenPPL_PairInHand || ($AQ)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_Button_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 6)
//
f$myfunc76  &&  [ ([($JTs) || ($J9s) || ($T9s) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s) || ($76s) || ($75s) || ($65s) || ($64s) || ($54s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_Button_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 10)
//
f$myfunc77  &&  [ (f$OpenPPL_BigBlindSize < 100 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc77  &&  [ (f$OpenPPL_BigBlindSize >= 100 && f$OpenPPL_StackSize > 8 && [($A) || ($KQ) || ($KJ) || ($KT) || ($QJ) || f$OpenPPL_PairInHand]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc77  &&  [ (f$OpenPPL_BigBlindSize >= 100 && f$OpenPPL_StackSize > 8 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_Opponent_Is_All_In)
//
f$myfunc78  &&  [ (f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_StackSize && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND StackSize <= 4 AND Raises = 0)
//
f$myfunc79  &&  [ (f$OpenPPL_Calls == 0 && f$OpenPPL_AmountToCall <= 1 && [($A) || ($K) || ($Q) || ($J) || ($TXs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc79  &&  [ (f$OpenPPL_StackSize <= 2 && f$OpenPPL_OpponentsWithLowerStack == 0) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND Raises = 0 AND Calls >= 0)
//
f$myfunc80  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc80  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_StackSize > 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($KQ) || ($KJ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc80  &&  [ (f$OpenPPL_BigBlind && f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc80  &&  [ (f$OpenPPL_BigBlind && f$OpenPPL_StackSize > 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($KQ) || ($KJ)]) ] ? 3 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_Button_Position AND Raises = 0 AND Calls = 0 AND Opponents <= 2)
//
f$myfunc81  &&  [ (f$OpenPPL_StackSize <= 8 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc81  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($QJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc81  &&  [ (f$OpenPPL_StackSize <= 10 && [f$OpenPPL_PairInHand || ($A) || ($KT) || ($K9s) || ($QT) || ($JT)]) ] ? f$OpenPPL_Call :
f$myfunc81  &&  [ (f$OpenPPL_StackSize > 10 && [($AA) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JT) || ($J9s) || ($J8s)]) ] ? 110 * f$RaiseByPercentagedPotsize :
f$myfunc81  &&  [ (f$OpenPPL_StackSize > 10 && [($AA) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QT) || ($JTs)]) ] ? 110 * f$RaiseByPercentagedPotsize :
f$myfunc81  &&  [ (f$OpenPPL_StackSize >= 15 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($KXs) || ($QJ) || ($QT) || ($QXs) || ($JTs) || ($J9s) || ($T9s)]) ] ? 110 * f$RaiseByPercentagedPotsize :
f$myfunc81  &&  [ (f$OpenPPL_OpponentsWithLowerStack == 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($JXs) || ($T9s) || ($T8s) || ($T7s) || ($98s) || ($97s) || ($87s)] && f$OpenPPL_StackSize >= 20) ] ? 110 * f$RaiseByPercentagedPotsize :
f$myfunc81  &&  [ (f$OpenPPL_StackSize >= 10 && [f$OpenPPL_PairInHand || ($A)]) ] ? f$OpenPPL_RaiseMin :

f$myfunc81  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_Button_Position AND Raises = 2)
//
f$myfunc82  &&  [ ( ![([$AA] || [$KK] || [$QQ] || [$AK])] && f$OpenPPL_OpponentIsAllin) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_Button_Position AND Raises >= 1)
//
f$myfunc83  &&  [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_Call :
f$myfunc83  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND Opponents = 1)
//
f$myfunc84  &&  [ (f$OpenPPL_StackSize <= 15 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc84  &&  [ (f$OpenPPL_StackSize <= 8 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc84  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($QJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc84  &&  [ (f$OpenPPL_StackSize <= 10 && [f$OpenPPL_PairInHand || ($A) || ($KT) || ($K9s) || ($QT) || ($JT)]) ] ? f$OpenPPL_Call :
f$myfunc84  &&  [ (f$OpenPPL_StackSize > 10 && [($AA) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JT) || ($J9s) || ($J8s)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc84  &&  [ (f$OpenPPL_StackSize > 10 && [f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc84  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_SmallBlind_Position AND Raises = 0 AND Calls = 1)
//
f$myfunc85  &&  [ ([($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($QXs) || ($JT) || ($J9) || ($T9s) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s) || ($76s) || ($75s) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_SmallBlind_Position AND Raises = 1)
//
f$myfunc86  &&  [ (f$OpenPPL_StackSize <= 8 && f$OpenPPL_MinOpponentStackSize > 2 && f$OpenPPL_OpponentsWithLowerStack >= 1 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc86  &&  [ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_MinOpponentStackSize > 2 && f$OpenPPL_OpponentsWithLowerStack >= 1 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($QJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc86  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_MinOpponentStackSize > 2 && f$OpenPPL_OpponentsWithLowerStack >= 1 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc86  &&  [ (f$OpenPPL_StackSize <= 15 && f$OpenPPL_MinOpponentStackSize > 2 && f$OpenPPL_OpponentsWithLowerStack >= 1 && [($AJ) || ($ATs) || f$OpenPPL_PairInHand] && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_RaiseMax :
f$myfunc86  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc86  &&  [ (f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc86  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_BetSize <= 3 && [f$OpenPPL_PairInHand || ($AT) || ($AJ) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc86  &&  [ (f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK)] && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_RaiseMax :
f$myfunc86  &&  [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_Call :
f$myfunc86  &&  [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall <= 10 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc86  &&  [ (f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_StackSize >= 9 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QT) || ($JT) || f$OpenPPL_PairInHand || ($T9s) || ($Q9s) || ($Q8s) || ($J9s) || ($J8s)]) ] ? f$OpenPPL_Call :
f$myfunc86  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_BigBlind_Position AND Raises = 0 AND Calls = 1 AND LastCallerPosition = 1)
//
f$myfunc87  &&  [ (f$OpenPPL_StackSize <= 4) ] ? f$OpenPPL_RaiseMax :
f$myfunc87  &&  [ (f$OpenPPL_StackSize <= 7 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($QJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc87  &&  [ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_StackSize > 7 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc87  &&  [ (f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || ($JT)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc87  &&  [ (f$OpenPPL_OpponentsWithLowerStack == 2 && f$OpenPPL_StackSize >= 20 &&  ![([$23] || [$24] || [$25] || [$26] || [$27] || [$28] || [$29] || [$2T] || [$34] || [$35] || [$36] || [$37] || [$38] || [$39] || [$3T] || [$45] || [$46] || [$47] || [$48] || [$49] || [$4T] || [$56] || [$57] || [$58] || [$59] || [$5T])]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc87  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_BigBlind_Position AND Raises = 0 AND Calls = 1 AND LastCallerPosition = 2)
//
f$myfunc88  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJ) || ($AT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc88  &&  [ (f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc88  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_BigBlind_Position AND Raises = 1 AND (LastRaiserPosition = 1 OR LastRaiserPosition = 2))
//
f$myfunc89  &&  [ (f$OpenPPL_StackSize <= 10 && [f$OpenPPL_PairInHand || ($A) || ($KXs) || ($KQ) || ($KJ) || ($KT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc89  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc89  &&  [ (f$OpenPPL_StackSize > 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc89  &&  [ (f$OpenPPL_StackSize > 15 && f$OpenPPL_BetSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT)]) ] ? f$OpenPPL_Call :
f$myfunc89  &&  [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_Call :
f$myfunc89  &&  [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_Call :
f$myfunc89  &&  [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 10 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc89  &&  [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 10 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc89  &&  [ (f$OpenPPL_StackSize <= 4 && f$OpenPPL_Raises <= 1 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9s) || ($T8s) || ($98s) || ($87s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc89  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 2 AND User_BigBlind_Position AND Raises = 2)
//
f$myfunc90  &&  [ ([($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc90  &&  [ (f$OpenPPL_StackSize <= 10 && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc90  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (User_Button_Position AND MaxStillToActStackSize >= 20 AND MinStillToActStackSize >= 20 AND Raises = 0 AND Calls = 0)
//
f$myfunc91  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8s) || ($A7s) || ($KQs) || ($KJs) || ($KTs) || ($QJs) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc91  &&  [ (f$OpenPPL_StackSize <= 9 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($AXs) || ($KQ) || ($KJs) || ($KTs) || ($QJs) || ($QTs) || ($JTs) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc91  &&  [ (f$OpenPPL_StackSize <= 8 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KTs) || ($K9s) || ($QJ) || ($QTs) || ($Q9s) || ($JT) || ($J9s) || ($J8s) || ($T9s) || ($T8s) || ($98s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc91  &&  [ (f$OpenPPL_StackSize <= 7 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9) || ($T8s) || ($T7s) || ($T6s) || ($98) || ($97s) || ($96s) || ($87s) || ($86s) || ($76s) || ($65s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc91  &&  [ (f$OpenPPL_StackSize <= 6 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($J4s) || ($J3s) || ($T9) || ($T8) || ($T7) || ($T6s) || ($T5s) || ($T4s) || ($98) || ($97) || ($96s) || ($95s) || ($87) || ($86s) || ($85s) || ($84s) || ($76) || ($75s) || ($74s) || ($65s) || ($64s) || ($54s) || ($53s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc91  &&  [ (f$OpenPPL_StackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($Q4s) || ($Q3s) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($T9) || ($T8) || ($T7) || ($T6s) || ($98) || ($97s) || ($96s) || ($87) || ($86s) || ($85s) || ($76s) || ($75s) || ($65s) || ($64s) || ($54s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc91  &&  [ (f$OpenPPL_StackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7s) || ($J6s) || ($J5s) || ($J4s) || ($J3s) || ($T9) || ($T8) || ($T7s) || ($T6s) || ($T5s) || ($T4s) || ($98) || ($97) || ($96s) || ($95s) || ($87) || ($86s) || ($85s) || ($76) || ($75s) || ($74s) || ($65s) || ($64s) || ($54s) || ($53s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc91  &&  [ (f$OpenPPL_StackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($J5) || ($J4) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6) || ($TXs) || ($98) || ($97) || ($96) || ($9Xs) || ($87) || ($86) || ($85) || ($8Xs) || ($76) || ($75) || ($74s) || ($73s) || ($65) || ($64s) || ($63s) || ($54) || ($5Xs) || ($4Xs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc91  &&  [ (f$OpenPPL_StackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($J) || ($T9) || ($T8) || ($T7) || ($T6) || ($TXs) || ($98) || ($97) || ($96) || ($95s) || ($87) || ($86s) || ($85s) || ($76s) || ($75s) || ($65s) || ($64s) || ($54s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Opponent_Is_All_In AND Raises = 1 AND Calls = 0 AND User_BigBlind_Position AND BetSize <= 10)
//
f$myfunc92  &&  [ ([($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 8 AND NOT (User_Bubble OR User_Heads_Up OR User_Chip_Leader))
//
f$myfunc93  &&  [ ( ![([$23] || [$24] || [$25] || [$26] || [$27] || [$28] || [$29] || [$2T] || [$34] || [$35] || [$36] || [$37] || [$38] || [$39] || [$3T] || [$49] || [$4T] || [$5T])]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_SmallBlind_Position AND Raises = 0 AND Calls = 0 AND StackSize <= 8 AND OpponentsWithLowerStack = 0 AND NOT (User_Heads_Up))
//
f$myfunc94  &&  [ ([($23s) || ($24s) || ($25s) || ($26s) || ($2Ts) || ($34s) || ($35s) || ($36s) || ($37s) || ($3Ts) || ($4Ts) || ($5Ts)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc94  &&  [ ( ![([$23] || [$24] || [$25] || [$26] || [$27] || [$28] || [$29] || [$2T] || [$34] || [$35] || [$36] || [$37] || [$38] || [$39] || [$3T] || [$49] || [$4T] || [$5T])]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize >= 13 AND Raises = 1 AND BetSize = 1)
//
f$myfunc95  &&  [ (f$OpenPPL_StackSize >= 17 && [($TT) || ($99)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (StackSize <= 12)
//
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && [($AK) || ($AQ) || ($AJs) || ($QQ) || ($JJ) || ($TT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_BigBlindSize <= 100 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 9 && [($JJ) || ($TT) || ($AK)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc96  &&  [ (f$OpenPPL_BigBlindSize <= 100 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 9 && [($99) || ($88) || ($77) || ($AQ)] && f$OpenPPL_StillToAct <= 5 &&  ![(f$OpenPPL_BigBlind || f$OpenPPL_SmallBlind)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc96  &&  [ (f$OpenPPL_BigBlindSize <= 100 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 9 && f$OpenPPL_Calls == 0 && [($99) || ($88) || ($77) || ($AQ)] && f$OpenPPL_StillToAct <= 5) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 9 && [($JJ) || ($TT) || ($AK)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 9 && [($99) || ($88) || ($77) || ($AQ)] && f$OpenPPL_StillToAct <= 5 &&  ![(f$OpenPPL_BigBlind || f$OpenPPL_SmallBlind)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 9 && f$OpenPPL_Calls == 0 && [($99) || ($88) || ($77) || ($AQ)] && f$OpenPPL_StillToAct <= 5) ] ? f$OpenPPL_RaiseMin :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && [($JJ) || ($TT) || ($AK) || ($AQs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && [($99) || ($88) || ($77) || ($AQ)] && f$OpenPPL_StillToAct <= 5 &&  ![(f$OpenPPL_BigBlind || f$OpenPPL_SmallBlind)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($99) || ($88) || ($77) || ($AQ)] && f$OpenPPL_StillToAct <= 5) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_BigBlindSize <= 100 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 9 && f$OpenPPL_Calls == 0 && f$OpenPPL_SmallBlind && [($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || ($JT)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 9 && f$OpenPPL_Calls == 0 && f$OpenPPL_SmallBlind && [($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_SmallBlind && [($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_OpponentIsAllin && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_OpponentIsAllin && [($AQ)] && f$OpenPPL_LastRaiserPosition <= 6) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && [($JJ) || ($TT) || ($AK)] && f$OpenPPL_LastRaiserPosition <= 5) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 9 && [($JJ) || ($TT) || ($AK)] && f$OpenPPL_LastRaiserPosition <= 5) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && [($99) || ($88) || ($77)] && f$OpenPPL_OpponentIsAllin && f$OpenPPL_LastRaiserPosition <= 3) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 12)
//
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && me_re_userbuttonposition &&  ![(me_re_usergoodcashposition)] && [($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || ($JT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && me_re_userbuttonposition && [($AJ) || ($AT) || ($A9) || ($A8)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc96  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 5 && [($AJs) || ($AQs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 8)
//
f$myfunc97  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 5 && [($AQ) || ($AK) || ($AJ) || ($AT) || ($A9s) || ($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA)] && f$OpenPPL_OpponentsWithLowerStack == 0) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 6 AND StillToAct <= 4)
//
f$myfunc98  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AQ) || ($AK) || ($AJ) || ($AT) || ($A9s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 6 AND StillToAct <= 3)
//
f$myfunc99  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AQ) || ($AK) || ($AJ) || ($AT) || ($A9s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 5 AND Raises = 0 AND User_BigBlind_Position)
//
f$myfunc100  &&  [ ([f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 4 AND Raises = 1 AND Calls = 0 AND User_Opponent_Is_All_In AND BetSize <= 3)
//
f$myfunc101  &&  [ (f$OpenPPL_SmallBlind && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($QJ) || ($QT)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 3 AND Raises = 1 AND Calls = 0 AND User_Opponent_Is_All_In AND BetSize >= 10 AND NOT (User_SmallBlind_Position OR User_BigBlind_Position))
//
f$myfunc102  &&  [ ( ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$TT] || [$99] || [$AK])]) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (StackSize <= 10)
//
f$myfunc103  &&  [ (f$OpenPPL_Raises == 0 && [($JJ) || ($TT) || ($AJ) || ($AT) || ($AQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc103  &&  [ (f$OpenPPL_StackSize <= 8 && f$OpenPPL_Raises == 0 && f$OpenPPL_BigBlind && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc103  &&  [ (f$OpenPPL_Raises == 0 && [($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc103  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 3 && [($66) || ($55) || ($44) || ($33) || ($22)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc103  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && [($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc103  &&  [ (f$OpenPPL_Raises == 1 && [($JJ) || ($TT)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 7)
//
f$myfunc104  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($66) || ($55) || ($44) || ($33) || ($22)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc104  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && [($99) || ($88) || ($77)] && f$OpenPPL_OpponentIsAllin && f$OpenPPL_LastRaiserPosition <= 8) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize < 1 AND User_SmallBlind_Position)
//
f$myfunc105  &&  [ (f$OpenPPL_Raises >= 0) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize < 1 AND User_BigBlind_Position)
//
f$myfunc106  &&  [ (f$OpenPPL_Raises == 0) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 2 AND StillToAct <= 3)
//
f$myfunc107  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 &&  ![(me_re_usergoodcashposition)] && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($Q4s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($J6s) || ($T9) || ($T8)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc107  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 2 AND StillToAct <= 4)
//
f$myfunc108  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9s) || ($T8s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_BigBlind_Position AND User_Opponent_Is_All_In AND BetSize <= 1 AND Opponents = 1)
//
f$myfunc109  &&  [ (f$OpenPPL_Raises >= 1) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (User_BigBlind_Position AND User_Opponent_Is_All_In AND Raises = 1 AND Calls = 0 AND LastRaiserPosition = 1)
//
f$myfunc110  &&  [ (f$OpenPPL_BetSize <= 4 && [($A) || ($K) || ($QJ) || ($QT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc110  &&  [ (f$OpenPPL_BetSize <= 6 && [($A8) || ($A9) || ($AT) || ($AJ) || ($AQ) || ($AK) || f$OpenPPL_PairInHand || ($KQ) || ($KJ)]) ] ? f$OpenPPL_Call :
f$myfunc110  &&  [ (f$OpenPPL_BetSize <= 10 && [($AJ) || ($AQ) || ($AK) || ($KQ) || ($99) || ($TT) || ($JJ) || ($QQ)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (StackSize < 4 AND Raises = 0)
//
f$myfunc111  &&  [ (f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($JT) || ($T9s) || ($98s) || ($87s) || ($76s) || ($65s) || ($54s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc111  &&  [ (f$OpenPPL_Calls == 0 && [($QTs) || ($J9s) || ($T8s) || ($97s) || ($86s) || ($75s) || ($64s) || ($53s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc111  &&  [ ([f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQs) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize < 4)
//
f$myfunc112  &&  [ ([f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize < 1)
//
f$myfunc113  &&  [ (f$OpenPPL_Raises >= 0 && [($A) || ($K) || ($Q) || ($J)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc113  &&  [ (f$OpenPPL_Raises >= 0 && [f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 5 AND User_Button_Position AND Raises = 0 AND Calls = 0)
//
f$myfunc114  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KXs) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($QJ) || ($QT) || ($Q9s) || ($Q8s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 5 AND Raises = 1 AND Calls = 0 AND LastRaiserPosition = 2 AND User_SmallBlind_Position)
//
f$myfunc115  &&  [ ([($66) || ($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA) || ($AJ) || ($AQ) || ($AK) || ($ATs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 5 AND Raises = 1 AND Calls = 0 AND (LastRaiserPosition = 2 OR LastRaiserPosition = 1) AND User_BigBlind_Position)
//
f$myfunc116  &&  [ ([($66) || ($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA) || ($AJ) || ($AQ) || ($AK) || ($ATs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize < 8 AND OpponentsAtTable > 2)
//
f$myfunc117  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && (nopponentsseated != 3) &&  ![([$23] || [$24] || [$25] || [$26] || [$27] || [$28] || [$29] || [$2T] || [$34] || [$35] || [$36] || [$37] || [$38] || [$39] || [$3T] || [$4T] || [$49] || [$5T])]) ] ? f$OpenPPL_RaiseMax :
f$myfunc117  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_MinOpponentStackSize >= 6 &&  ![([$23] || [$24] || [$25] || [$26] || [$27] || [$28] || [$29] || [$2T] || [$34] || [$35] || [$36] || [$37] || [$38] || [$39] || [$3T] || [$4T] || [$49] || [$5T])]) ] ? f$OpenPPL_RaiseMax :
f$myfunc117  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QT) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc117  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_OpponentsWithLowerStack == 0 &&  ![([$23] || [$24] || [$25] || [$26] || [$27] || [$28] || [$29] || [$2T] || [$34] || [$35] || [$36] || [$37] || [$38] || [$39] || [$3T] || [$4T] || [$49] || [$5T])]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 10)
//
f$myfunc118  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_LastCallerPosition == 1 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($K8s) || ($K7s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JT) || ($J9) || ($J8s) || ($T9)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (me_re_userbuttonposition && f$OpenPPL_Raises == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (me_re_userbuttonposition && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8s) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (me_re_usercutoffposition && f$OpenPPL_Raises == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (me_re_userhijackposition && f$OpenPPL_Raises == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (f$OpenPPL_StillToAct == 5 && f$OpenPPL_Raises == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (f$OpenPPL_StillToAct == 6 && f$OpenPPL_Raises == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (me_re_userearlyposition && f$OpenPPL_Raises == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_OpponentsWithLowerStack == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ) || ($KQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (f$OpenPPL_Raises == 1 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc118  &&  [ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_BetSize <= 4 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize <= 25 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($KXs) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JT) || ($J9s) || ($J8s) || ($T9s) || ($T8s)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (StackSize < 12)
//
f$myfunc119  &&  [ (f$OpenPPL_Raises == 1 && [($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize < 15)
//
f$myfunc120  &&  [ (f$OpenPPL_Raises == 1 && [($JJ) || ($TT) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 4 AND User_SmallBlind_Position AND StackSize <= 12 AND Raises = 0 AND Calls = 0)
//
f$myfunc121  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KTs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 4 AND StillToAct <= 3 AND StackSize <= 10 AND Raises = 0 AND Calls = 0)
//
f$myfunc122  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc122  &&  [ (f$OpenPPL_StackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($KXs) || ($QJ) || ($QTs) || ($JTs) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 4 AND StillToAct <= 3 AND StackSize > 10 AND Raises = 0 AND Calls = 0)
//
f$myfunc123  &&  [ (f$OpenPPL_BigBlindSize <= 100 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($QJs)]) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc123  &&  [ (f$OpenPPL_BigBlindSize <= 100 && f$OpenPPL_StillToAct <= 2 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ)]) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc123  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($QJs)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc123  &&  [ (f$OpenPPL_StillToAct <= 2 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 4 AND (User_Button_Position OR User_SmallBlind_Position) AND Raises = 0 AND Calls = 0)
//
f$myfunc124  &&  [ (f$OpenPPL_MaxStillToActStackSize <= 10 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 4 AND StackSize <= 11)
//
f$myfunc125  &&  [ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_BetSize <= 3 && [f$OpenPPL_LastRaiserPosition == 1 || f$OpenPPL_LastRaiserPosition == 2 || f$OpenPPL_LastRaiserPosition == 3] && [f$OpenPPL_PairInHand || ($AT) || ($AJ) || ($AQ) || ($AK) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable = 4 AND StackSize <= 7)
//
f$myfunc126  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_BigBlind && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc126  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls <= 1 && [f$OpenPPL_BigBlind || f$OpenPPL_SmallBlind] && [($A9) || ($A8) || ($A7) || ($QJ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 4 AND StackSize >= 17)
//
f$myfunc127  &&  [ (f$OpenPPL_BigBlindSize <= 100 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QTs) || ($JTs)]) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc127  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 4 AND StackSize <= 5)
//
f$myfunc128  &&  [ (f$OpenPPL_Raises == 0 && [($A) || ($KXs) || ($QJ) || ($QT) || ($Q9s) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 4 AND StackSize < 10 AND User_Button_Position AND OpponentsWithLowerStack = 0)
//
f$myfunc129  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 4 AND User_BigBlind_Position AND Raises = 0 AND StackSize >= 13 AND BigBlindSize >= 50)
//
f$myfunc130  &&  [ ( ![(me_re_userloosepreflop || me_re_usertightpreflop)] && f$OpenPPL_BigBlindSize <= 100 && [($ATs) || ($AJ) || ($AQ) || ($AK) || ($KQ) || ($KJs) || ($JJ)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc130  &&  [ ( ![(me_re_userloosepreflop || me_re_usertightpreflop)] && [($ATs) || ($AJ) || ($AQ) || ($AK) || ($KQ) || ($KJs) || ($JJ)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (BigBlindSize >= 100 AND StillToAct <= 3 AND Raises = 0 AND Calls = 0 AND StackSize >= 12)
//
f$myfunc131  &&  [ (f$OpenPPL_BigBlindSize <= 100 && me_re_usercutoffposition && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJs) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc131  &&  [ (f$OpenPPL_BigBlindSize <= 100 && f$OpenPPL_StillToAct <= 2 && [($A) || ($KQ) || ($KJ) || ($KT) || ($QJs) || ($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc131  &&  [ (f$OpenPPL_BigBlindSize <= 100 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc131  &&  [ (me_re_usercutoffposition && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJs) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc131  &&  [ (f$OpenPPL_StillToAct <= 2 && f$OpenPPL_MaxStillToActStackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc131  &&  [ (f$OpenPPL_StillToAct <= 2 && [($A) || ($KQ) || ($KJ) || ($KT) || ($QJs) || ($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc131  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (BigBlindSize >= 60 AND StillToAct <= 3 AND Raises = 0 AND Calls = 0 AND StackSize >= 12)
//
f$myfunc132  &&  [ (f$OpenPPL_BigBlindSize <= 100 && [($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || ($KJs) || ($QJs) || ($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc132  &&  [ (f$OpenPPL_BigBlindSize <= 100 && f$OpenPPL_StillToAct <= 2 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc132  &&  [ ([($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || ($KJs) || ($QJs) || ($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc132  &&  [ (f$OpenPPL_StillToAct <= 2 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($77) || ($88) || ($99) || ($TT) || ($JJ) || ($QQ) || ($KK) || ($AA)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (BigBlindSize >= 100 AND User_Button_Position AND Raises = 0 AND Calls = 0 AND StackSize >= 14)
//
f$myfunc133  &&  [ (f$OpenPPL_BigBlindSize == 100 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc133  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (BigBlindSize >= 50 AND User_Button_Position AND Raises = 0 AND Calls = 0 AND StackSize >= 14)
//
f$myfunc134  &&  [ (f$OpenPPL_BigBlindSize <= 100 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? 100 * f$RaiseByPercentagedPotsize :
f$myfunc134  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (BigBlindSize >= 50 AND Raises = 0 AND Calls = 0 AND (StillToAct <= 3 OR OpponentsAtTable <= 5) AND StackSize >= 12)
//
f$myfunc135  &&  [ (f$OpenPPL_StackSize <= 15 && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Button_Position AND Raises = 0 AND Calls >= 2 AND BigBlindSize <= 80 AND StackSize >= 12)
//
f$myfunc136  &&  [ ([($ATs)]) ] ? f$OpenPPL_Call :
f$myfunc136  &&  [ (f$OpenPPL_StackSize >= 30 && [($A8s) || ($A9s) || ($A9s) || ($ATs)]) ] ? f$OpenPPL_Call :
f$myfunc136  &&  [ (f$OpenPPL_StackSize >= 40 && [($KTs) || ($QJs) || ($QTs) || ($Q9s) || ($JTs) || ($J9s) || ($T9s)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 5 AND Raises = 0 AND OpponentsWithLowerStack >= 1 AND StackSize >= 13)
//
f$myfunc137  &&  [ (f$OpenPPL_BigBlind && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc137  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc137  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ)] && f$OpenPPL_Calls == 0) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc137  &&  [ ([($TT) || ($99) || ($AJ)]) ] ? f$OpenPPL_Call :
f$myfunc137  &&  [ ([me_re_usercutoffposition || me_re_userbuttonposition] && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($JTs)] && f$OpenPPL_BigBlindSize <= 100) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc137  &&  [ ([me_re_usercutoffposition || me_re_userbuttonposition] && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($JTs)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (OpponentsAtTable <= 5 AND Raises = 1 AND User_Opponent_Is_All_In AND BetSize <= 12 AND BetSize <= 50% StackSize AND Calls = 0 AND Opponents = 1)
//
f$myfunc138  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ)] && f$OpenPPL_BetSize <= 40 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (BotsLastAction = RAISE AND Raises = 1)
//
f$myfunc139  &&  [ ([($AK) || ($QQ)] && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (StackSize >= 20 AND Raises = 1 AND BetSize <= 1)
//
f$myfunc140  &&  [ ([($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaisePot :
f$myfunc140  &&  [ ([f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (BigBlindSize <= 50 AND User_Early_Position)
//
f$myfunc141  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 0 && [($JJ) || ($TT)]) ] ? f$OpenPPL_Call :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 20 && [($AQs)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 25 && [f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc141  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc141  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc141  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 25 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize >= 14 && [($AK) || ($QQ) || ($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc141  &&  [ (f$OpenPPL_Raises >= 2 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc141  &&  [ (f$OpenPPL_AmountToCall <= 3 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($AKs) || ($AQs) || ($AJs) || ($ATs)]) ] ? f$OpenPPL_Call :
f$myfunc141  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($AK) || ($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc141  &&  [ (f$OpenPPL_StackSize <= 13 && f$OpenPPL_Raises == 0 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc141  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 11 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc141  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc141  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize <= 50 AND User_Middle_Position)
//
f$myfunc142  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ)]) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ)]) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 0 && [($JJ) || ($TT)]) ] ? f$OpenPPL_Call :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 20 && [($AQs)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 25 && [f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc142  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc142  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc142  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 25 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize >= 14 && [($AK) || ($QQ) || ($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc142  &&  [ (f$OpenPPL_Raises >= 2 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc142  &&  [ (f$OpenPPL_StackSize >= 25 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($AT) || ($AJ) || ($AQ) || ($KQs)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc142  &&  [ (f$OpenPPL_AmountToCall <= 3 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc142  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($AK) || ($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc142  &&  [ (f$OpenPPL_StackSize <= 13 && f$OpenPPL_Raises == 0 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc142  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AK) || ($AQ) || ($AJs) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT)]) ] ? f$OpenPPL_Call :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 11 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc142  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc142  &&  [ (f$OpenPPL_AmountToCall <= 5 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_StackSize >= 15 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc142  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize <= 50 AND (User_Hijack_Position OR User_CutOff_Position))
//
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ) || ($AJ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 1 && f$OpenPPL_StackSize >= 25 && [f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 1 && f$OpenPPL_StackSize >= 30 && [($KQs)]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 15 && [($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 20 && f$OpenPPL_Calls >= 1 && [($66) || ($55) || ($44) || ($33) || ($22)]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 20 && f$OpenPPL_Calls >= 1 && [($KQs) || ($KJs) || ($QJs) || ($AKs) || ($AQs) || ($AJs) || ($ATs)]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 25 && [f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc143  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 25 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize >= 14 && [($AK) || ($QQ) || ($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_Raises >= 2 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc143  &&  [ (f$OpenPPL_StackSize >= 25 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AXs) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQs) || ($KJs) || ($KTs)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc143  &&  [ (f$OpenPPL_StackSize >= 25 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($AXs) || ($KQ) || ($KJ) || ($QJ)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc143  &&  [ (f$OpenPPL_AmountToCall <= 3 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($AXs) || ($KQ) || ($KJ) || ($QJ)]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($AK) || ($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc143  &&  [ (f$OpenPPL_StackSize <= 13 && f$OpenPPL_Raises == 0 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc143  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AK) || ($AQ) || ($AJs) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT)]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 11 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc143  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_PairInHand && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_AmountToCall <= 3 && f$OpenPPL_StackSize >= 13) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_AmountToCall <= 5 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_StackSize >= 15 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc143  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize <= 50 AND User_Button_Position)
//
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ)]) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 18 && [($TT) || ($99) || ($88) || ($77) || ($A) || ($KQ) || ($KJs) || ($QJs) || ($QTs)]) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 25 && [f$OpenPPL_PairInHand || ($KQs)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 25 && [($AXs) || ($KQs) || ($KJs) || ($QJs) || ($QTs) || ($JTs) || ($T9s) || ($98s) || ($87s) || ($76s) || ($65s)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 15 && [($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($22)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 15 && [($AXs) || ($KQs) || ($KJs) || ($QJs) || ($QTs) || ($JTs) || ($T9s) || ($98s) || ($87s) || ($76s) || ($65s)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 13 && f$OpenPPL_Calls >= 2 && [($KTs) || ($Q9s) || ($J9s) || ($T8s) || ($97s) || ($86s) || ($75s) || ($64s) || ($53s)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 25 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize >= 14 && [($AK) || ($QQ) || ($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_Raises >= 2 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_StackSize >= 25 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AXs) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQs) || ($KJs) || ($KTs) || ($QJs) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_StackSize >= 25 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($AXs) || ($KQ) || ($KJ) || ($QJ)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc144  &&  [ (f$OpenPPL_AmountToCall <= 3 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($AXs) || ($KQ) || ($KJ) || ($QJ)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($AK) || ($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_StackSize <= 13 && f$OpenPPL_Raises == 0 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AK) || ($AQ) || ($AJs) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT)]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 11 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_StackSize <= 11 && nopponentsseated >= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$PushOnButton) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_PairInHand && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_AmountToCall <= 3 && f$OpenPPL_StackSize >= 13) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_AmountToCall <= 5 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_StackSize >= 15 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc144  &&  [ (f$OpenPPL_StackSize <= 11 && nopponentsseated >= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Button && f$PushOnButton) ] ? f$OpenPPL_RaiseMax :
f$myfunc144  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize <= 50 AND (User_SmallBlind_Position OR User_BigBlind_Position))
//
f$myfunc145  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ) || ($AT)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 1 && f$OpenPPL_StackSize >= 20 && [f$OpenPPL_PairInHand || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($QJ) || ($QTs) || ($JTs) || ($J9s) || ($T9s)]) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc145  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 25 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize >= 14 && [($AK) || ($QQ) || ($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_Raises >= 2 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc145  &&  [ (f$OpenPPL_AmountToCall <= 3 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($AXs) || ($KQ) || ($KJ) || ($QJ)]) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($AK) || ($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc145  &&  [ (f$OpenPPL_StackSize <= 13 && f$OpenPPL_Raises == 0 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc145  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AK) || ($AQ) || ($AJs) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT)]) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall < 1) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 11 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc145  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_OpponentsAtTable <= 3 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_StackSize >= 13 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc145  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_PairInHand && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_AmountToCall <= 3 && f$OpenPPL_StackSize >= 13) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_AmountToCall <= 5 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_StackSize >= 15 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_AmountToCall < 1 && f$OpenPPL_StackSize >= 6 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9s) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s) || ($76s) || ($75s) || ($65s) || ($54s) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc145  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize > 50 AND Raises = 1 AND StackSize >= 20 AND BetSize <= 2)
//
f$myfunc146  &&  [ ([($AQs) || ($KQs) || ($AJs) || ($TT) || ($99)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (BigBlindSize >= 100 AND Raises = 0)
//
f$myfunc147  &&  [ ([($AQ)] && f$OpenPPL_Calls == 0) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc147  &&  [ ([($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (BigBlindSize >= 100 AND Raises = 0 AND Calls = 0)
//
f$myfunc148  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJs)]) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc148  &&  [ (f$OpenPPL_StillToAct <= 4 && f$OpenPPL_StackSize >= 14 && [($77) || ($AJ) || ($ATs) || ($KQ)]) ] ? 115 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (BigBlindSize >= 100 AND Raises = 1 AND Calls = 0)
//
f$myfunc149  &&  [ ([($AA) || ($KK)]) ] ? 2.5 * f$OpenPPL_AmountToCall :
//
// Starting open-ended when-condition
// (BigBlindSize > 50 AND BigBlindSize <= 120 AND User_Early_Position)
//
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize < 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 11 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize < 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 11 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize > 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize > 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 15 && [($TT) || ($99)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 15 && [($TT) || ($99)]) ] ? f$OpenPPL_Call :
f$myfunc150  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 30 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc150  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 2 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 3 * f$OpenPPL_AmountToCall :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 3 && f$OpenPPL_StackSize >= 13 && [($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 13 && [($AK)]) ] ? 3 * f$OpenPPL_AmountToCall :
f$myfunc150  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize <= 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize < 13 && [($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises >= 2 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc150  &&  [ (f$OpenPPL_BetSize == 1 && (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call) && f$OpenPPL_BotsActionsOnThisRound <= 1 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc150  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize > 50 AND BigBlindSize <= 120 AND User_Middle_Position)
//
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize < 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 11 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize < 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 11 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ) || ($AJs)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize > 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize > 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 15 && [($99) || ($88) || ($AJ) || ($KQs)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 17 && [($99) || ($AJs) || ($KQs)]) ] ? f$OpenPPL_Call :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 22 && [($88) || ($77)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 17 && [($88) || ($77)]) ] ? f$OpenPPL_Call :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && [($AK) || ($AQ) || ($AJ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc151  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc151  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 30 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc151  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 2 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 3 * f$OpenPPL_AmountToCall :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 3 && f$OpenPPL_StackSize >= 13 && [($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 13 && [($AK)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc151  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 9 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize <= 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize < 13 && [($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises >= 2 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc151  &&  [ (f$OpenPPL_BetSize == 1 && (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call) && f$OpenPPL_BotsActionsOnThisRound <= 1 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc151  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize > 50 AND BigBlindSize <= 120 AND (User_Hijack_Position OR User_CutOff_Position))
//
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ) || ($KQs)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize < 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 11 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 30 && [($ATs)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize < 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 11 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ) || ($AJ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize > 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJs)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize > 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJs)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 18 && [($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($22)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 30 && [($TT) || ($99) || ($88) || ($77)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 18 && [($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($22)]) ] ? f$OpenPPL_Call :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 18 && [($KQs) || ($KJs) || ($QJs) || ($QTs) || ($JTs) || ($T9s)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && [($AK) || ($AQ) || ($AJ) || ($KQs)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 18 && [($KQs) || ($KJs) || ($QJs) || ($QTs) || ($JTs) || ($T9s)]) ] ? f$OpenPPL_Call :
f$myfunc152  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc152  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 30 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc152  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 2 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 3 * f$OpenPPL_AmountToCall :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 3 && f$OpenPPL_StackSize >= 13 && [($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 13 && [($AK)]) ] ? 3 * f$OpenPPL_AmountToCall :
f$myfunc152  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize <= 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize < 13 && [($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises >= 2 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc152  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_StackSize >= 13 && [($AX) || ($KQ) || ($KJ) || ($QJ) || ($QT) || f$OpenPPL_PairInHand] && f$OpenPPL_BigBlindSize >= 60 && f$OpenPPL_StillToActPreflop <= 3) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_BetSize == 1 && (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call) && f$OpenPPL_BotsActionsOnThisRound <= 1 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc152  &&  [ (f$OpenPPL_StackSize >= 11 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_StillToActPreflop <= 3 && f$OpenPPL_Opponents <= 3 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AX) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QT) || ($JTs) || f$OpenPPL_PairInHand]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc152  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize > 50 AND BigBlindSize <= 120 AND User_Button_Position)
//
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 13 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJ) || ($KQ) || ($KJs)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize < 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($ATs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 11 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 30 && [($ATs)]) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize < 14 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 11 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize > 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize > 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJs)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 15 && [($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($22) || ($AXs) || ($KQs) || ($KJs) || ($QJs) || ($QTs) || ($JTs) || ($J9s) || ($T9s) || ($T8s) || ($98s) || ($87s)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 40 && [($99)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && [($99)]) ] ? f$OpenPPL_Call :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && [($AK) || ($AQ) || ($AJ) || ($KQ)]) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 40 && [($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($22)]) ] ? f$OpenPPL_Call :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 30 && [($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($22)]) ] ? f$OpenPPL_Call :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 40 && [($AXs) || ($KQs) || ($KJs) || ($QJs) || ($QTs) || ($JTs) || ($T9s)]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize > 30 && [($AXs) || ($KQs) || ($KJs) || ($QJs) || ($QTs) || ($JTs) || ($T9s)]) ] ? f$OpenPPL_Call :
f$myfunc153  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc153  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 30 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc153  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 2 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 3 * f$OpenPPL_AmountToCall :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 3 && f$OpenPPL_StackSize >= 13 && [($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 13 && [($AK)]) ] ? 3 * f$OpenPPL_AmountToCall :
f$myfunc153  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize <= 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize < 13 && [($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_LastRaiserPosition <= 5 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises >= 2 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_StackSize <= 12 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AK) || ($AQ) ||($AJ) || ($AT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_StackSize <= 11 && nopponentsseated >= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$PushOnButton) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_BetSize == 1 && (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call) && f$OpenPPL_BotsActionsOnThisRound <= 1 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc153  &&  [ (f$OpenPPL_StackSize >= 15 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_Opponents <= 2 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AX) || ($KX) || ($QX) || ($QT) || ($JT) || ($J9) || ($J8) || ($J7s) || ($T9s) || ($T8s) || ($98s) || f$OpenPPL_PairInHand]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$ATCBtnSteal) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Button && f$OpenPPL_Opponents <= 2 && f$OpenPPL_StackSize <= 12 && [($AX) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc153  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Button && f$OpenPPL_Opponents <= 2 && f$OpenPPL_StackSize >= 16 && f$OpenPPL_BigBlindSize >= 60 && f$SmallBlind_StackSize >= 12 && f$BigBlind_StackSize >= 12 && f$OpenPPL_Opponents <= 2 && nopponentsseated == 4 && [($AX) || ($KX) || ($QXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($JT) || ($J9) || ($J8) || ($JXs) || ($T9s) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s) || f$OpenPPL_PairInHand]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc153  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize > 50 AND User_SmallBlind_Position AND StackSize >= 15)
//
f$myfunc154  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QT) || f$OpenPPL_PairInHand] && f$OpenPPL_BigBlindSize <= 100) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc154  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMin :
f$myfunc154  &&  [ (f$OpenPPL_Raises == 0 && [($77) || ($88) || ($99)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (BigBlindSize > 50 AND User_BigBlind_Position AND StackSize >= 20)
//
f$myfunc155  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_LastCallerPosition == 1 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJ) || ($QT) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (BigBlindSize > 50 AND BigBlindSize <= 120 AND (User_SmallBlind_Position OR User_BigBlind_Position))
//
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize > 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 30 && [($AT) || ($A9s) || ($KTs)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize > 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize > 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize > 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 1 && f$OpenPPL_StackSize >= 20 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KT) || ($KXs) || ($QJ) || ($JT) || ($KJ) || ($QT) || ($J9s) || ($J8s) || ($J7s) || ($QXs) || ($T9s) || ($T8s) || ($T7s) || ($T6s) || ($98s) || ($97s) || ($96s) || ($87s) || ($86s) || ($85s) || ($76s) || ($75s) || ($74s) || ($65s) || ($64s)]) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises >= 1 && [($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 30 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 2 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Opponents == 1 && [($QQ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize > 13 && [($AA) || ($KK) || ($QQ)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 3 && f$OpenPPL_StackSize >= 13 && [($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 13 && [($AK)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_BotsActionsOnThisRound == 0 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && [f$OpenPPL_PairInHand || ($AXs) || ($KQs) || ($KJs) || ($KTs) || ($QJs) || ($QTs) || ($JTs) || ($T9s)]) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 1 && f$OpenPPL_StackSize >= 8 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($A8s)]) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)] &&  ![(me_re_userdoubledupstack)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 10 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 2 && f$OpenPPL_StackSize <= 12 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls > 2 && f$OpenPPL_StackSize <= 15 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 13 && [($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 5 && f$OpenPPL_StackSize < 13 && [($JJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_LastRaiserPosition <= 5 && f$OpenPPL_Calls == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_StackSize <= 6 && [($A) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs) || ($JTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_StackSize <= 12 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [($AK) || ($AQ) ||($AJ) || ($AT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_BetSize == 1 && (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call) && f$OpenPPL_BotsActionsOnThisRound <= 1 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_BetSize <= 2 && f$OpenPPL_StackSize <= 8 && [($AX) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Raises <= 1 && f$OpenPPL_BetSize <= 2 && f$OpenPPL_StackSize <= 10 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($A8s) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_PairInHand) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ (f$OpenPPL_SmallBlind && f$OpenPPL_AmountToCall < 1 && f$OpenPPL_StackSize >= 6 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($QXs) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9s) || ($T8s) || ($98s) || ($97s) || ($87s) || ($86s) || ($76s) || ($75s) || ($65s) || ($54s) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc156  &&  [ ([(f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind)] && nopponentsseated != 3 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_StackSize < 11 && f$OpenPPL_Opponents == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMax :
f$myfunc156  &&  [ (f$OpenPPL_Others) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (BigBlindSize > 120 AND User_Early_Position AND Raises = 0)
//
f$myfunc157  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BetSize <= 5 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc157  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_Call :
f$myfunc157  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJ) || ($KQs)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc157  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc157  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($99)]) ] ? f$OpenPPL_Call :
f$myfunc157  &&  [ (f$OpenPPL_StackSize > 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJ) || ($AT)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc157  &&  [ (f$OpenPPL_StackSize > 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc157  &&  [ (f$OpenPPL_StackSize >= 40 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ) || ($KTs) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc157  &&  [ (f$OpenPPL_StackSize > 30 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc157  &&  [ (f$OpenPPL_StackSize >= 40 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc157  &&  [ (f$OpenPPL_StackSize > 30 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc157  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc157  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_StackSize < 10 && [($AQ) || ($AJs) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc157  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BigBlindSize > 120 AND User_Early_Position AND Raises = 1)
//
f$myfunc158  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BetSize <= 5 && [($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc158  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize < 25 && f$OpenPPL_BetSize <= 6 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc158  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 6 && [($TT) || ($99) || ($88) || ($AQ) || ($KQ)]) ] ? f$OpenPPL_Call :
f$myfunc158  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 25 && f$OpenPPL_BetSize <= 3 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc158  &&  [ (f$OpenPPL_StackSize > 25 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc158  &&  [ (f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 3 && [($TT) || ($99) || ($88) || ($AQ) || ($KQ)]) ] ? f$OpenPPL_Call :
f$myfunc158  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc158  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_StackSize < 10 && [($AQ) || ($AJs) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc158  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc158  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 25 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BigBlindSize > 120 AND (StillToAct = 6 OR StillToAct = 5 OR User_Hijack_Position) AND Raises = 0)
//
f$myfunc159  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BetSize <= 5 && [f$OpenPPL_PairInHand || ($AQ) || ($KQ) || ($AJs)]) ] ? f$OpenPPL_Call :
f$myfunc159  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_Call :
f$myfunc159  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ) || ($AJ) || ($KQ) || ($JJ) || ($TT)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc159  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ) || ($AJ) || ($KQ) || ($JJ) || ($TT)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc159  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && f$OpenPPL_Calls == 0 && [($99) || ($88) || ($77)]) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc159  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($JJ) || ($TT) || ($99) || ($88) || ($77) || ($KQ) || ($AJs)]) ] ? f$OpenPPL_Call :
f$myfunc159  &&  [ (f$OpenPPL_StackSize > 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc159  &&  [ (f$OpenPPL_StackSize > 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc159  &&  [ (f$OpenPPL_StackSize > 30 && f$OpenPPL_Calls == 0 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($QJ) || ($QT) || ($JT) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc159  &&  [ (f$OpenPPL_StackSize > 30 && [f$OpenPPL_PairInHand || ($KQ) || ($AJs)]) ] ? f$OpenPPL_Call :
f$myfunc159  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc159  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_StackSize < 10 && [($AQ) || ($AJs) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc159  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc159  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ) || ($AJ) || ($KQ) || ($JJ) || ($TT)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BigBlindSize > 120 AND (StillToAct = 6 OR StillToAct = 5 OR User_Hijack_Position) AND Raises = 1)
//
f$myfunc160  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BetSize <= 5 && [($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc160  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize < 25 && f$OpenPPL_BetSize <= 6 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc160  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 6 && [($TT) || ($99) || ($88) || ($AQ) || ($KQ)]) ] ? f$OpenPPL_Call :
f$myfunc160  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 25 && f$OpenPPL_BetSize <= 3 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc160  &&  [ (f$OpenPPL_StackSize > 25 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc160  &&  [ (f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 3 && [($TT) || ($99) || ($88) || ($AQ) || ($KQ)]) ] ? f$OpenPPL_Call :
f$myfunc160  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc160  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_StackSize < 10 && [($AQ) || ($AJs) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc160  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize <= 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc160  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 25 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BigBlindSize > 120 AND (StillToAct <= 3) AND Raises = 0)
//
f$myfunc161  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BetSize <= 5 && [f$OpenPPL_PairInHand || ($AQ) || ($KQ) || ($AJs)]) ] ? f$OpenPPL_Call :
f$myfunc161  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_Call :
f$myfunc161  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJ) || ($KQ)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc161  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ) || ($AJ) || ($KQ)]) ] ? 115 * f$RaiseByPercentagedPotsize :
f$myfunc161  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && f$OpenPPL_Calls == 0 && [($JJ) || ($TT) || ($99) || ($88) || ($77) || ($KQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc161  &&  [ (f$OpenPPL_StackSize <= 12 && f$OpenPPL_BigBlind && [($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc161  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($JJ) || ($TT) || ($99) || ($88) || ($77) || ($KQ) || ($AJs)]) ] ? f$OpenPPL_Call :
f$myfunc161  &&  [ (f$OpenPPL_StackSize > 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc161  &&  [ (f$OpenPPL_StackSize > 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc161  &&  [ (f$OpenPPL_StackSize > 30 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($KQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc161  &&  [ (f$OpenPPL_StackSize > 30 && [f$OpenPPL_PairInHand || ($KQ) || ($AJs)]) ] ? f$OpenPPL_Call :
f$myfunc161  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc161  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_StackSize < 10 && [($AQ) || ($AJs) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc161  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize < 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AQ) || ($AK) || ($99) || ($88)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BigBlindSize > 120 AND (StillToAct <= 3) AND Raises = 1)
//
f$myfunc162  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BetSize <= 5 && [($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc162  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize < 25 && f$OpenPPL_BetSize <= 7 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc162  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 7 && [($TT) || ($99) || ($88) || ($AQ) || ($KQ)]) ] ? f$OpenPPL_Call :
f$myfunc162  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 5 && [($KJs) || ($ATs) || ($QJs) || ($QTs)]) ] ? f$OpenPPL_Call :
f$myfunc162  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 25 && f$OpenPPL_BetSize <= 3 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc162  &&  [ (f$OpenPPL_StackSize > 25 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc162  &&  [ (f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 3 && [($TT) || ($99) || ($88) || ($AQ) || ($KQ)]) ] ? f$OpenPPL_Call :
f$myfunc162  &&  [ (f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 2 && [($KJs) || ($ATs) || ($QJs) || ($QTs)]) ] ? f$OpenPPL_Call :
f$myfunc162  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc162  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_StackSize < 10 && [($AQ) || ($AJs) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc162  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize < 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AQ) || ($AK) || ($99) || ($88)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc162  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 25 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BigBlindSize > 120 AND (User_SmallBlind_Position OR User_BigBlind_Position) AND Raises = 0)
//
f$myfunc163  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BetSize <= 5 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc163  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_Call :
f$myfunc163  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc163  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($AA) || ($KK) || ($QQ) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc163  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 30 && [($JJ) || ($TT) || ($99) || ($88) || ($77) || ($KQ) || ($AJs)]) ] ? f$OpenPPL_Call :
f$myfunc163  &&  [ (f$OpenPPL_StackSize > 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)] && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMin :
f$myfunc163  &&  [ (f$OpenPPL_StackSize > 30 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQ)]) ] ? 2 * f$RaiseByBigBlinds :
f$myfunc163  &&  [ (f$OpenPPL_StackSize >= 40 && [f$OpenPPL_PairInHand || ($KQ) || ($AJs)]) ] ? 1 * f$RaiseByBigBlinds :
f$myfunc163  &&  [ (f$OpenPPL_StackSize > 30 && [f$OpenPPL_PairInHand || ($KQ) || ($AJs)]) ] ? f$OpenPPL_Call :
f$myfunc163  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc163  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_StackSize < 10 && [($AQ) || ($AJs) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc163  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize < 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AQ) || ($AK) || ($99) || ($88)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BigBlindSize > 120 AND (User_SmallBlind_Position OR User_BigBlind_Position) AND Raises = 1)
//
f$myfunc164  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BetSize <= 5 && [($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc164  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize < 25 && f$OpenPPL_BetSize <= 7 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc164  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 7 && [($TT) || ($99) || ($88) || ($AQ) || ($KQ)]) ] ? f$OpenPPL_Call :
f$myfunc164  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 25 && f$OpenPPL_BetSize <= 3 && [($JJ) || ($TT) || ($AQ)]) ] ? f$OpenPPL_Call :
f$myfunc164  &&  [ (f$OpenPPL_StackSize > 25 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($AK)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc164  &&  [ (f$OpenPPL_StackSize > 25 && f$OpenPPL_BetSize <= 3 && [($TT) || ($99) || ($88) || ($AQ) || ($KQ)]) ] ? f$OpenPPL_Call :
f$myfunc164  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc164  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_StackSize < 10 && [($AQ) || ($AJs) || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc164  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_StackSize < 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AQ) || ($AK) || ($99) || ($88)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc164  &&  [ (f$OpenPPL_StackSize > 10 && f$OpenPPL_StackSize <= 25 && [($AA) || ($KK) || ($QQ) || ($AK)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Button_Position AND MaxStillToActStackSize >= 20 AND MinStillToActStackSize >= 20 AND Raises = 0 AND Calls = 0)
//
f$myfunc165  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8s) || ($A7s) || ($KQs) || ($KJs) || ($KTs) || ($QJs) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc165  &&  [ (f$OpenPPL_StackSize <= 9 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($AXs) || ($KQ) || ($KJs) || ($KTs) || ($QJs) || ($QTs) || ($JTs) || ($J9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc165  &&  [ (f$OpenPPL_StackSize <= 8 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KTs) || ($K9s) || ($QJ) || ($QTs) || ($Q9s) || ($JT) || ($J9s) || ($J8s) || ($T9s) || ($T8s) || ($98s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc165  &&  [ (f$OpenPPL_StackSize <= 7 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9) || ($Q8s) || ($Q7s) || ($Q6s) || ($Q5s) || ($JT) || ($J9) || ($J8s) || ($J7s) || ($T9) || ($T8s) || ($T7s) || ($T6s) || ($98) || ($97s) || ($96s) || ($87s) || ($86s) || ($76s) || ($65s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc165  &&  [ (f$OpenPPL_StackSize <= 6 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($J4s) || ($J3s) || ($T9) || ($T8) || ($T7) || ($T6s) || ($T5s) || ($T4s) || ($98) || ($97) || ($96s) || ($95s) || ($87) || ($86s) || ($85s) || ($84s) || ($76) || ($75s) || ($74s) || ($65s) || ($64s) || ($54s) || ($53s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc165  &&  [ (f$OpenPPL_StackSize <= 5 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($K6) || ($K5) || ($K4) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7s) || ($Q6s) || ($Q5s) || ($Q4s) || ($Q3s) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6s) || ($J5s) || ($T9) || ($T8) || ($T7) || ($T6s) || ($98) || ($97s) || ($96s) || ($87) || ($86s) || ($85s) || ($76s) || ($75s) || ($65s) || ($64s) || ($54s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc165  &&  [ (f$OpenPPL_StackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($Q6) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7s) || ($J6s) || ($J5s) || ($J4s) || ($J3s) || ($T9) || ($T8) || ($T7s) || ($T6s) || ($T5s) || ($T4s) || ($98) || ($97) || ($96s) || ($95s) || ($87) || ($86s) || ($85s) || ($76) || ($75s) || ($74s) || ($65s) || ($64s) || ($54s) || ($53s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc165  &&  [ (f$OpenPPL_StackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($JT) || ($J9) || ($J8) || ($J7) || ($J6) || ($J5) || ($J4) || ($JXs) || ($T9) || ($T8) || ($T7) || ($T6) || ($TXs) || ($98) || ($97) || ($96) || ($9Xs) || ($87) || ($86) || ($85) || ($8Xs) || ($76) || ($75) || ($74s) || ($73s) || ($65) || ($64s) || ($63s) || ($54) || ($5Xs) || ($4Xs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc165  &&  [ (f$OpenPPL_StackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($J) || ($T9) || ($T8) || ($T7) || ($T6) || ($TXs) || ($98) || ($97) || ($96) || ($95s) || ($87) || ($86s) || ($85s) || ($76s) || ($75s) || ($65s) || ($64s) || ($54s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize >= 12 AND PairInHand AND Raises = 1)
//
f$myfunc166  &&  [ (f$OpenPPL_StackSize >= 21 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (StackSize <= 13)
//
f$myfunc167  &&  [ ([($AK) || ($AQ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// ((BotsLastAction = Call OR BotsLastAction = Raise))
//
f$myfunc168  &&  [ (f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_StackSize >= 23 && [f$OpenPPL_PairInHand || ($AXs) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || ($JTs) || ($T9s) || ($98s) || ($87s)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Raises = 1 AND Calls = 0)
//
f$myfunc169  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_StackSize && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJs) || ($QJs) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc169  &&  [ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_StackSize && [($AK) || ($AQ) || ($AJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc169  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_AmountToCall <= 65 * 0.01 * f$OpenPPL_StackSize && [($AT) || ($KQ) || ($KJs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc169  &&  [ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_StackSize && [($AT) || ($KQ) || ($KJs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc169  &&  [ (f$OpenPPL_StackSize <= 8 && [($AK) || ($AQ) || ($AJs) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc169  &&  [ (f$OpenPPL_StackSize <= 10 && [($AK) || ($AQ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc169  &&  [ (f$OpenPPL_StackSize <= 5 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJs) || ($QJs) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc169  &&  [ (f$OpenPPL_StackSize <= 7 && [($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize >= 9 AND User_SmallBlind_Position AND Raises = 0 AND Calls >= 1)
//
f$myfunc170  &&  [ ([($AXs) || ($KQs) || ($KJs) || ($QJs) || ($QTs) || ($JTs) || ($T9s)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (BotsLastAction = RAISE AND Raises = 1)
//
f$myfunc171  &&  [ (f$OpenPPL_AmountToCall <= 25 * 0.01 * f$OpenPPL_PotSize && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc171  &&  [ (f$OpenPPL_AmountToCall <= 10 * 0.01 * f$OpenPPL_StackSize && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_Call :
f$myfunc171  &&  [ (f$OpenPPL_AmountToCall <= 3 && [($QQ) || ($JJ) || ($AK)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (User_BigBlind_Position AND Raises = 1 AND LastRaiserPosition = 1 AND StackSize <= 10)
//
f$myfunc172  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc172  &&  [ ([($AXs) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Early_Position AND Raises = 0 AND Calls = 0)
//
f$myfunc173  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($AK) || ($AQs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc173  &&  [ (f$OpenPPL_StackSize <= 9 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc173  &&  [ (f$OpenPPL_StackSize <= 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc173  &&  [ (f$OpenPPL_StackSize <= 7 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($AK) || ($AQ) || ($AJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc173  &&  [ (f$OpenPPL_StackSize <= 6 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($ATs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc173  &&  [ (f$OpenPPL_StackSize <= 5 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($KQs) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc173  &&  [ (f$OpenPPL_StackSize <= 4 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8s) || ($A7s) || ($A6s) || ($A5s) || ($KQ) || ($KJ) || ($KTs) || ($QJs) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc173  &&  [ (f$OpenPPL_StackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs) || ($J9s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc173  &&  [ (f$OpenPPL_StackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QT) || ($Q9s) || ($JTs) || ($J9s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 6 AND Raises = 0 AND Calls = 0)
//
f$myfunc174  &&  [ ([($AXs) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (BotsLastAction = Call AND Raises = 1)
//
f$myfunc175  &&  [ (f$OpenPPL_BetSize <= 2 && f$OpenPPL_Calls >= 1 && f$OpenPPL_StackSize > 12) ] ? f$OpenPPL_Call :
f$myfunc175  &&  [ (f$OpenPPL_BetSize <= 1 && f$OpenPPL_StackSize > 12) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (BotsLastAction = RAISE AND Raises = 1)
//
f$myfunc176  &&  [ (f$OpenPPL_AmountToCall <= 2) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// ((User_SmallBlind_Position OR User_BigBlind_Position) AND Raises = 1)
//
f$myfunc177  &&  [ (f$OpenPPL_BetSize <= 2 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_OpponentsWithLowerStack == 0 && f$OpenPPL_StackSize > 15 && [($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? 95 * f$RaiseByPercentagedPotsize :
f$myfunc177  &&  [ (f$OpenPPL_BetSize <= 2 && f$OpenPPL_LastRaiserPosition <= 2 && [nopponentsseated > 3 || nopponentsseated < 3] && f$OpenPPL_StackSize > 15 && [($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? 95 * f$RaiseByPercentagedPotsize :
f$myfunc177  &&  [ (f$OpenPPL_BetSize <= 2 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_StackSize > 15 && [($AK) || ($AA) || ($KK) || ($QQ)]) ] ? 95 * f$RaiseByPercentagedPotsize :
f$myfunc177  &&  [ (f$OpenPPL_BetSize <= 3 && f$OpenPPL_LastRaiserPosition <= 2 && f$OpenPPL_OpponentsWithLowerStack == 0 && [($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc177  &&  [ (f$OpenPPL_BetSize <= 3 && f$OpenPPL_LastRaiserPosition <= 2 && [nopponentsseated > 3 || nopponentsseated < 3] && [($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc177  &&  [ (f$OpenPPL_BetSize <= 3 && f$OpenPPL_LastRaiserPosition <= 2 && [($AK) || ($AA) || ($KK) || ($QQ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StillToAct <= 5 AND StackSize < 10 AND Raises = 0 AND Calls = 0)
//
f$myfunc178  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($A8s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_Button_Position AND Raises = 0 AND Calls = 0 AND BigBlindSize >= 80 AND StackSize >= 12)
//
f$myfunc179  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KT) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (StackSize <= 5)
//
f$myfunc180  &&  [ (f$OpenPPL_Raises <= 1 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StillToAct <= 2 AND StackSize <= 7)
//
f$myfunc181  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($KQ) || ($KJ) || ($K9s) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($A)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize < 10 AND StillToAct <= 4 AND Raises = 0 AND Calls = 0)
//
f$myfunc182  &&  [ (f$OpenPPL_StillToAct <= 4 && [($AK) || ($AQ) || ($AJ) || ($ATs) || ($KQ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc182  &&  [ (f$OpenPPL_StillToAct <= 3 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($KQ) || ($KJs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc182  &&  [ (f$OpenPPL_StillToAct <= 2 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7s) || ($A6s) || ($A5s) || ($KQ) || ($KJ) || ($KTs) || ($QJs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StillToAct <= 3 AND Raises = 0 AND Calls = 0)
//
f$myfunc183  &&  [ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_MaxStillToActStackSize <= 20 &&  ![(me_re_usergoodcashposition)] && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($AXs) || ($KQ) || ($KJ) || ($KTs) || ($QJ) || ($QTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc183  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_MaxStillToActStackSize <= 20 &&  ![(me_re_usergoodcashposition)] && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7) || ($KXs) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc183  &&  [ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_MaxStillToActStackSize <= 20 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc183  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_MaxStillToActStackSize <= 20 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KTs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 10 AND MaxStillToActStackSize <= 15 AND StillToAct <= 2)
//
f$myfunc184  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc184  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [(nopponentsseated != 3 || f$OpenPPL_OpponentsWithLowerStack <= 1)] && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc184  &&  [ (f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($QXs) || ($JT) || ($J9) || ($J8) || ($J7) || ($JXs) || ($T9s) || ($98s)] && ![(f$mybubblesafety)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 6 AND Raises = 1 AND Calls = 0)
//
f$myfunc185  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc185  &&  [ ((f$OpenPPL_OpponentsWithLowerStack == 0 || nopponentsseated != 3) && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 10 AND StillToAct <= 3 AND Raises = 0 AND Calls = 0)
//
f$myfunc186  &&  [ (f$OpenPPL_StackSize <= 6 && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($K8s) || ($K7s) || ($K6s) || ($QJ) || ($QTs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc186  &&  [ ([f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($KQ) || ($KJ) || ($KTs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 5 AND Raises = 0)
//
f$myfunc187  &&  [ (f$OpenPPL_Calls == 0 && [($A) || f$OpenPPL_PairInHand || ($KQ) || ($KJ) || ($QJs) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc187  &&  [ ([($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($A8s) || f$OpenPPL_PairInHand || ($KQ) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 6 AND Raises = 0 AND Calls = 0 AND OpponentsAtTable <= 6)
//
f$myfunc188  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KTs) || ($QJs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_BigBlind_Position AND AmountToCall <= 1 AND Raises = 1 AND Calls = 0 AND CallsSinceLastRaise = 0 AND (LastRaiserPosition = 1 OR LastRaiserPosition = 2) AND StackSize >= 6)
//
f$myfunc189  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (StackSize <= 10 AND (User_BigBlind_Position OR User_SmallBlind_Position) AND Raises = 1 AND Calls = 0)
//
f$myfunc190  &&  [ ([($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AT) || ($AK) || ($AQ) || ($AJ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 6 AND Raises = 1 AND BotsLastAction = None AND CallsSinceLastRaise = 0)
//
f$myfunc191  &&  [ ([f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind] && f$OpenPPL_AmountToCall >= 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($A8s) || ($KQs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc191  &&  [ ([f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind] && f$OpenPPL_AmountToCall < 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (Raises >= 0)
//
f$myfunc192  &&  [ ([($AA) || ($KK)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (Raises = 0 AND User_SmallBlind_Position AND User_Heads_Up AND (StackSize <= 10 OR MaxStillToActStackSize <= 10))
//
f$myfunc193  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($K) || ($QJ) || ($QT) || ($Q9) || ($Q8) || ($Q7) || ($JT) || ($J9) || ($J8) || ($J7) || ($T9) || ($T8) || ($T7) || ($98) || ($97) || ($96) || ($87) || ($86) || ($76) || ($75)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize <= 10 AND StillToAct <= 3 AND Raises = 0 AND Calls = 0)
//
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 10 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($KQs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 9 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9s) || ($KQs) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 8 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7s) || ($A6s) || ($A5s) || ($A4s) || ($KQ) || ($KJ) || ($KTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 7 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 6 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($QJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 5 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($66) || ($55) || ($44) || ($33) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($A7) || ($A6) || ($A5) || ($AXs) || ($KQ) || ($KJ) || ($KT) || ($K9s) || ($K8s) || ($QJs) || ($QTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 4 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8s) || ($K7s) || ($QJ) || ($QTs) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 3 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($K5s) || ($QJ) || ($QT) || ($Q9s) || ($JTs) || ($J9s) || ($T9s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 2 && [f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($K8) || ($K7s) || ($K6s) || ($K5s) || ($K4s) || ($QJ) || ($QT) || ($Q9s) || ($Q8s) || ($JT) || ($J9s) || ($J8s) || ($T9s) || ($T8s) || ($98s) || ($87s) || ($76s)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc194  &&  [ (f$OpenPPL_StackSize <= 1 && [f$OpenPPL_PairInHand || ($A) || ($K) || ($Q) || ($J) || ($T9) || ($T8) || ($T7) || ($T6) || ($T5) || ($TXs) || ($98) || ($97) || ($96) || ($95) || ($9Xs) || ($87) || ($86) || ($85) || ($8Xs) || ($76) || ($75) || ($74) || ($7Xs) || ($65) || ($64) || ($6Xs) || ($54) || ($53) || ($5Xs) || ($4Xs) || ($3Xs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (StackSize >= 13 AND Raises = 0 AND User_Late_Position AND BotsLastAction = None)
//
f$myfunc195  &&  [ (f$OpenPPL_StillToAct <= 3 && [($AK) || ($AQ) || ($AJ)]) ] ? 2 * f$RaiseByBigBlinds :
//
// Starting open-ended when-condition
// (BigBlindSize >= 200 AND StackSize >= 8 AND Raises = 0 AND Calls = 0)
//
f$myfunc196  &&  [ (nopponentsseated <= 3 && f$OpenPPL_StackSize <= 12 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc196  &&  [ (f$OpenPPL_StillToAct <= 4 && [($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) || ($88) || ($77) || ($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8) || ($KQ) || ($KJ)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc196  &&  [ (f$OpenPPL_StillToAct <= 3 && [f$OpenPPL_PairInHand || ($A) || ($KTs) || ($QJ)]) ] ? f$OpenPPL_RaiseMin :
f$myfunc196  &&  [ (f$OpenPPL_StillToAct <= 2 && [($KT) || ($QT)]) ] ? f$OpenPPL_RaiseMin :
//
// Starting open-ended when-condition
// (StillToAct <= 3 AND StackSize <= 9 AND OpponentsAtTable >= 5 AND Raises = 0 AND Calls = 0)
//
f$myfunc197  &&  [ ([f$OpenPPL_PairInHand || ($A) || ($KQ) || ($KJ) || ($KT) || ($K9s)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (User_BB_Is_Smaller_Than_Bot_Stack AND In SmallBlind AND Raises = 0 AND Calls = 0 AND User_Bubble)
//
f$myfunc198  &&  [ (f$OpenPPL_StackSize <= 10) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (OpponentsWithLowerStack = 0 AND StackSize <= 5 AND Raises <= 1)
//
f$myfunc199  &&  [ ([($A) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (In SmallBlind AND Raises = 0 AND Calls >= 1 AND StackSize >= 8)
//
f$myfunc200  &&  [ ([($A) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (StackSize <= 10 AND NOT (User_Bubble) AND Raises = 0 AND Calls = 0)
//
f$myfunc201  &&  [ (f$OpenPPL_StillToAct <= 6 && [($AK) || ($AQ) || ($AJ) || ($AT) || ($A9) || ($A8s) || ($KQ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc201  &&  [ (f$OpenPPL_StillToAct <= 5 && [($A8) || ($A7s) || ($KJs)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc201  &&  [ (f$OpenPPL_StillToAct <= 4 && [($A) || ($KJ)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (In SmallBlind AND Raises = 0 AND Calls = 0 AND NOT (User_Bubble OR User_Heads_Up OR User_Chip_Leader))
//
f$myfunc202  &&  [ (f$OpenPPL_StackSize <= 10) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (In BigBlind AND LastRaiserPosition = 1 AND Raises = 1 AND Calls = 0)
//
f$myfunc203  &&  [ (f$OpenPPL_StackSize <= 5 && [($A) || f$OpenPPL_PairInHand || ($KQ) || ($KJ) || ($KT) || ($K9) || ($QJ) || ($QT) || ($Q9s) || ($JTs)]) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (Others)
//
f$myfunc204  &&  [ (f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$LastCaller_VPIP >= 0.20 && f$LastCaller_PFR <= 0.15 && f$OpenPPL_StackSize >= 14 && [($AX) || ($KQ) || ($KJ) || ($KT) && ($QJ) || ($QT) || ($JT) || f$OpenPPL_PairInHand]) ] ? 2.5 * f$RaiseByBigBlinds :
f$myfunc204  &&  [ (f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$LastCaller_VPIP >= 0.20 && f$LastCaller_PFR <= 0.15 && f$OpenPPL_StackSize < 14 && [($AX) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$BigBlind_Hands >= 50 && f$OpenPPL_InSmallBlind && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$BigBlind_VPIP <= 0.15 && f$OpenPPL_StackSize <= 13) && [($AX) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || f$OpenPPL_PairInHand] ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$BigBlind_Hands >= 50 && f$OpenPPL_InSmallBlind && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$BigBlind_VPIP <= 0.15 && f$OpenPPL_StackSize <= 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$BigBlind_Hands >= 50 && f$SmallBlind_Hands >= 50 && f$OpenPPL_InButton && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$BigBlind_VPIP <= 0.15 && f$SmallBlind_VPIP <= 0.15 && f$OpenPPL_StackSize <= 13) && [($AX) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand] ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$BigBlind_Hands >= 50 && f$SmallBlind_Hands >= 50 && f$OpenPPL_InButton && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$BigBlind_VPIP <= 0.15 && f$SmallBlind_VPIP <= 0.15 && f$OpenPPL_StackSize <= 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize < 7 && f$OpenPPL_StillToActPreflop <= 4 && [($AX) || ($KQ) || ($KJs) || ($QJs) || f$OpenPPL_PairInHand] && f$OpenPPL_BigBlindSize >= 800) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$OpenPPL_InBigBlind && f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_BotsActionsOnThisRound == 0) ] ? f$OpenPPL_Call :
f$myfunc204  &&  [ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall < 5 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 1 && [($AK) || ($AQ) || ($AJ) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT) || ($99) ||($88) || ($77)]) ] ? f$OpenPPL_Call :
f$myfunc204  &&  [ (nopponentsseated <= 2 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize <= 11 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AX) || ($KQ) || ($KJ) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (nopponentsseated <= 2 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 10 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AX) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || ($JT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_Call :
f$myfunc204  &&  [ (f$OpenPPL_StackSize <= 11 && nopponentsseated >= 3 && f$OpenPPL_Opponents <= 2 && f$OpenPPL_BetSize <= 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Button && f$PushOnButton) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$OpenPPL_StackSize >= 10 && f$OpenPPL_StillToActPreflop <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_BigBlindSize >= 100 && [($AX) || ($KQ) || ($KJ) || ($KT) || ($QJ) || ($QT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMin :
f$myfunc204  &&  [ (f$OpenPPL_StackSize <= 8 && f$OpenPPL_StillToActPreflop <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AX) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (nopponentsseated == 1 && f$OpenPPL_AmountToCall <= 5 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 1 && f$OpenPPL_OpponentIsAllin && [($AX) || ($KX) || ($QJ) || ($QT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (nopponentsseated == 1 && f$OpenPPL_AmountToCall <= 2 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 1 && f$OpenPPL_OpponentIsAllin) ] ? f$OpenPPL_Call :
f$myfunc204  &&  [ (nopponentsseated >= 4 && f$OpenPPL_AmountToCall < 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_SmallBlind && f$OpenPPL_Opponents == 1 && f$BigBlind_StackSize <= 20 && f$BigBlind_StackSize >= 6 && f$OpenPPL_StackSize >= 5 && f$OpenPPL_StackSize <= 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (nopponentsseated <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_BotsActionsOnThisRound == 0 && [($AX) || ($KQ) || ($KJ) || ($KTs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (nopponentsseated == 3 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall < 10 && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_StackSize && [($AK) || ($AQ) || ($AA) || ($KK) || ($QQ) || ($JJ)]) ] ? f$OpenPPL_Call :
f$myfunc204  &&  [ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToActPreflop <= 3 && [(nopponentsseated != 3 || f$OpenPPL_OpponentsWithLowerStack == 0)] && [($AX) || ($KQ) || ($KJ) || ($KT) || ($K9) || ($KXs) || ($QJ) || ($QT) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_BetSize <= 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_Button && [($AK) || ($AQ) || ($AJ) || ($AT) || ($KQ) || ($KJs) || f$OpenPPL_PairInHand]) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$OpenPPL_StackSize <= 12 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_BetSize <= 2 && f$OpenPPL_AmountToCall <= 2 && [($AK) || ($AQ) || ($AJs) || ($AA) || ($KK) || ($QQ) || ($JJ) || ($TT)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$OpenPPL_OpponentsWithLowerStack == 0 && f$OpenPPL_SmallBlind && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_StackSize <= 11 && f$OpenPPL_Opponents == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ (f$OpenPPL_BotsActionsOnThisRound == 0 && f$callcommittedallin) ] ? f$OpenPPL_Call :
f$myfunc204  &&  [ (f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_Opponents == 1 && [f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind] && f$OpenPPL_StackSize <= 10 && (f$OpenPPL_OpponentsWithLowerStack == 0 || nopponentsseated != 3)) ] ? f$OpenPPL_RaiseMax :

[ (f$OpenPPL_Raises >= 0) ] ? f$OpenPPL_Fold :
//
// When Others Fold Force
// Automatically added, just to be safe
//
f$OpenPPL_Fold 

##f$flop##
[ [ (f$OpenPPL_Raises >= 0) ] ? me_st_usernormalflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNuts) ] ? me_st_userflopnuts_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveQuads) ] ? me_st_userflopquads_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? me_st_userflopfullhouse_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveStraightFlush) ] ? me_st_userflopstraightflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutFlush) ] ? me_st_userflopnutflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_HaveNutFlush)]) ] ? me_st_userflopflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutStraight) ] ? me_st_userflopnutstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveUnderStraight) ] ? me_st_userflopunderstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_HaveNutStraight)]) ] ? me_st_userflopstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveSet) ] ? me_st_userflopset_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTrips) ] ? me_st_userfloptrips_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTopTwoPair) ] ? me_st_userfloptoptwopair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_HaveTopTwoPair)]) ] ? me_st_userfloptwopair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveOverPair) ] ? me_st_userflopoverpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTopPair) ] ? me_st_userfloptoppair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTopNonBoardPairedPair) ] ? me_st_userfloptopnonboardpairedpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have2ndOverPair) ] ? me_st_userflop2ndoverpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have2ndTopPair) ] ? me_st_userflop2ndtoppair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HavePair &&  ![(f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair || f$OpenPPL_Have2ndTopPair || f$OpenPPL_Have2ndOverPair)]) ] ? me_st_userfloppair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutFlushDraw &&  ![(f$OpenPPL_HaveNutFlush)]) ] ? me_st_userflopnutflushdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_HaveFlush)] &&  ![(f$OpenPPL_HaveNutFlushDraw)]) ] ? me_st_userflopflushdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_HaveNutStraight)]) ] ? me_st_userflopnutstraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_HaveStraight)] &&  ![(f$OpenPPL_HaveNutStraightDraw)]) ] ? me_st_userflopstraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveInsideNutStraightDraw &&  ![(f$OpenPPL_HaveStraight)]) ] ? me_st_userflopnutinsidestraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveInsideStraightDraw &&  ![(f$OpenPPL_HaveStraight)] &&  ![(f$OpenPPL_HaveStraightDraw)]) ] ? me_st_userflopinsidestraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_HavePair)]) ] ? me_st_userflop2overcards_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Overcards == 1 &&  ![(f$OpenPPL_HavePair)] && f$OpenPPL_Overcards < 2) ] ? me_st_userflop1overcard_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveBestKicker) ] ? me_st_userflopbestkicker_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have2ndBestKicker &&  ![(f$OpenPPL_HaveBestKicker)]) ] ? me_st_userflop2ndbestkicker_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have3rdBestKicker &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker || f$OpenPPL_Have3rdBestKicker)]) ] ? me_st_userflop3rdbestkicker_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNothing) ] ? me_st_userflopnothing_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TripsOnBoard) ] ? me_st_userflopboardtrips_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_TripsOnBoard)]) ] ? me_st_userflopboardpaired_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_FlushPossible) ] ? me_st_userflopboardpossibleflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StraightPossible) ] ? me_st_userflopboardpossiblestraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OnlyOneStraightPossible) ] ? me_st_userflopboardonlyonepossiblestraight_1 : 0] && 0 ? 0 :
[ [ ( ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_K) == 0)])] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_Q) == 0)])] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_J) == 0)])]) ] ? me_st_userboardflopnopaint_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastPreflopAction == f$OpenPPL_Raise) ] ? me_st_useraggressorpreflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastPreflopAction == f$OpenPPL_Call && f$OpenPPL_Raises >= 1) ] ? me_st_usernonaggressorpreflop_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_RaisesBeforeFlop)] &&  ![me_re_useraggressorpreflop]) ] ? me_st_usernoraisespreflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 1) ] ? me_st_useroppminraiseflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 2) ] ? me_st_useroppraise2bbflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 3) ] ? me_st_useroppraise3bbflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 4) ] ? me_st_useroppraise4bbflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize >= 5) ] ? me_st_useroppraisegreaterthan5bbflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto25percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 26 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto35percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 26 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto50percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 33 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 43 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto75percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 43 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto100percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiseoverraiseflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 25 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto25percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 25 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto35percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 35 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto50percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto75percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto100percpotflop_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 100 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocallgreaterthanorequalto50percpotflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_TotalInvested < 200 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_usertotalinvestedhalfofstackflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TotalInvested >= 200 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_usertotalinvestedtwothirdsofstackflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_PotSize >= 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_userpotcommitted_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionflopraise_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_None && f$OpenPPL_BotsActionsOnThisRound == 0) ] ? me_st_userlastactionflopnone_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionflopcall_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionflopbet_1 : 0] && 0 ? 0 :
[ [ ( ![(me_re_userlastactionflopraise)] &&  ![(me_re_userlastactionflopnone)] &&  ![(me_re_userlastactionflopcall)] &&  ![(me_re_userlastactionflopbet)] && f$OpenPPL_BotsActionsOnThisRound > 0) ] ? me_st_userlastactionflopcheck_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin) ] ? me_st_useropponentisallin_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents == 1) ] ? me_st_useropponents1_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents == 2) ] ? me_st_useropponents2_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents > 2) ] ? me_st_useropponentsmultiway_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 0) ] ? me_st_useratc0flop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 1) ] ? me_st_useratc1flop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 2) ] ? me_st_useratc2flop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 3) ] ? me_st_useratc3flop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 4) ] ? me_st_useratc4flop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall >= 5) ] ? me_st_useratcgreaterthanorequalto5flop_1 : 0] && 0 ? 0 :
[ (f$OpenPPL_RaisesBeforeFlop && f$OpenPPL_StackSize <= 1) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_StackSize <= 6 && [($AA) || ($KK)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] && f$OpenPPL_UncoordinatedFlop && [f$OpenPPL_BotsLastAction == f$OpenPPL_Check]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_StackSize <= 6 && [($AA) || ($KK)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] && f$OpenPPL_UncoordinatedFlop && f$OpenPPL_Position == f$OpenPPL_First && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_StackSize <= 6 && [($AA) || ($KK)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)]) ] ? f$OpenPPL_RaiseMax :
[ ([f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_Opponents == 1 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 1 && f$OpenPPL_BetSize == 1 && f$OpenPPL_StackSize > 10) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize <= 50 && me_re_usernonaggressorpreflop && [($AA)] && f$OpenPPL_Position == f$OpenPPL_First && f$OpenPPL_BotsLastAction == f$OpenPPL_Check) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BigBlindSize <= 50 && me_re_usernonaggressorpreflop && [($AA)] && f$OpenPPL_Position == f$OpenPPL_First && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize <= 50 && me_re_usernonaggressorpreflop && [($KK)] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_Position == f$OpenPPL_First && f$OpenPPL_BotsLastAction == f$OpenPPL_Check) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BigBlindSize <= 50 && me_re_usernonaggressorpreflop && [($KK)] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_Position == f$OpenPPL_First && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_Overcards == 1 &&  ![(f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_RaisesBeforeFlop)] && f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_RaisesBeforeFlop)] && f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && me_re_useropponentisallin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HavePair || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveQuads || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards >= 1]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize <= 50 && [($KQs) || ($QJs)] && f$OpenPPL_HaveTopPair && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 70 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BigBlindSize <= 50 && [($KQs) || ($QJs)] && f$OpenPPL_HaveTopPair && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize <= 50 && [f$OpenPPL_HaveFlushDraw && f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize <= 50 &&  ![(f$OpenPPL_FlushPossible || f$OpenPPL_StraightPossible || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BotsLastPreflopAction == f$OpenPPL_Raise && f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BigBlindSize <= 50 &&  ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$TT] || [$AK] || [$AQ] || [$AJ] || [$AT] || [$KQ] || [$KJ] || [$KT] || [$QJ])] &&  ![(f$OpenPPL_HaveSet || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveFlush || f$OpenPPL_HaveTrips || f$OpenPPL_HaveStraight || f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize > 50 && me_re_userbuttonposition && me_re_useraggressorpreflop && f$OpenPPL_Opponents == 1 && f$OpenPPL_Position == f$OpenPPL_Last && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BigBlindSize > 50 && me_re_userbigblindposition && me_re_useraggressorpreflop && f$OpenPPL_Opponents == 1 && f$OpenPPL_Position == f$OpenPPL_Last && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 && [f$OpenPPL_HaveStraightDraw || f$OpenPPL_HaveFlushDraw] &&  ![(f$OpenPPL_StraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_StackSize > 10) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 &&  ![([$AA] || [$KK] || [$QQ] || [$JJ] || [$TT] || [$99] || [$AK] || [$AQ] || [$AJ] || [$AT] || [$KQ] || [$KJ] || [$KT] || [$QJ])] &&  ![(f$OpenPPL_HaveSet || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveFlush || f$OpenPPL_HaveTrips || f$OpenPPL_HaveStraight || f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 && [($KQs) || ($QJs)] && f$OpenPPL_HaveTopPair && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 70 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 && [($KQs) || ($QJs)] && f$OpenPPL_HaveTopPair && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 && [f$OpenPPL_HaveFlushDraw && f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)]) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_RaisesBeforeFlop] && f$OpenPPL_TotalInvested >= 75 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_StackSize <= 10 && [f$OpenPPL_Overcards == 2 || f$OpenPPL_HaveStraightDraw || f$OpenPPL_HavePair || f$OpenPPL_HaveFlushDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_RaiseMax :
[ (me_re_useraggressorpreflop && f$OpenPPL_Opponents == 1 && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_Q * f$PrimeCode_J) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_Q * f$PrimeCode_T) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_J * f$PrimeCode_T) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_J) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_Q) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_T * f$PrimeCode_9) == 0)])] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
[ (me_re_useraggressorpreflop && f$OpenPPL_Opponents == 1 && [f$OpenPPL_Have2ndTopPair || f$OpenPPL_Have2ndOverPair] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
[ (me_re_useraggressorpreflop && f$OpenPPL_Opponents == 1 && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
[ (me_re_useraggressorpreflop && f$OpenPPL_Opponents == 1 && f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
[ (me_re_useraggressorpreflop && f$OpenPPL_Opponents == 1 && f$OpenPPL_Overcards >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_FlushPossible)] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_Q * f$PrimeCode_J) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_Q * f$PrimeCode_T) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_J * f$PrimeCode_T) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_J) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_Q) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_T * f$PrimeCode_9) == 0)])]) ] ? 50 * f$RaiseByPercentagedPotsize :
[ ([f$OpenPPL_BotRaisedBeforeFlop] &&  ![(f$OpenPPL_HavePair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFlush || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveTwoPair)] && f$OpenPPL_Opponents > 2) ] ? f$OpenPPL_Fold :
[ (me_re_useraggressorpreflop && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Check && [f$OpenPPL_RaisesBeforeFlop] && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_StackSize < 14 && f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises == 1) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_HaveTopPair && f$OpenPPL_StackSize <= 6) ] ? f$OpenPPL_RaiseMax :
[ ([f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_StackSize < 10 && [f$OpenPPL_HaveOverPair || f$OpenPPL_Have2ndOverPair] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_RaiseMax :
[ ([f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize < 10 && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_RaiseMax :
[ (me_re_useraggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Opponents == 1 && f$OpenPPL_HaveNothing) ] ? 60 * f$RaiseByPercentagedPotsize :
[ (me_re_useraggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Opponents == 2 && f$OpenPPL_Position == f$OpenPPL_Last &&  ![(f$OpenPPL_FlushPossible)]) ] ? 65 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_StackSize < 1 && f$OpenPPL_StackSize > 0) ] ? f$OpenPPL_RaiseMax :
[ (me_re_useropponentisallin && f$OpenPPL_BetSize >= 50 * 0.01 * f$OpenPPL_StackSize &&  ![([f$OpenPPL_HaveTopPair && f$OpenPPL_HaveBestKicker] || ([f$OpenPPL_HaveStraightDraw || f$OpenPPL_HaveFlushDraw] && ![(f$OpenPPL_FlushPossible)] && [(f$OpenPPL_TotalInvested >= f$OpenPPL_AmountToCall) || ((f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise) && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_AmountToCall <= 25 * 0.01 * f$OpenPPL_PotSize)]) || [f$OpenPPL_HaveTopPair && f$OpenPPL_Have2ndBestKicker] || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFlush || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveOverPair)]) ] ? f$OpenPPL_Fold :
[ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFlush || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveOverPair]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [(f$OpenPPL_HaveTopPair && f$OpenPPL_HaveBestKicker) || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFlush || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveOverPair]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_Raises >= 1 && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_Raises >= 1 && me_re_useropponentisallin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BigBlindSize >= 120 && f$OpenPPL_StackSize < 10 && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_BetSize <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BigBlindSize >= 120 && f$OpenPPL_StackSize < 10 && f$OpenPPL_HaveFlushDraw && f$OpenPPL_Bets == 1 && f$OpenPPL_BetSize > 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
[ (f$OpenPPL_BigBlindSize >= 120 && f$OpenPPL_StackSize < 10 && f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_BetSize <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BigBlindSize >= 120 && f$OpenPPL_StackSize < 10 && f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_BetSize > 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
[ (f$OpenPPL_StackSize <= 10 && [f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_HaveTopPair && f$OpenPPL_HaveBestKicker && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
[ (nopponentsseated == 1 && f$OpenPPL_Bets == 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 80 * f$RaiseByPercentagedPotsize :
[ (nopponentsseated == 1 && f$OpenPPL_Bets == 1 && [(f$OpenPPL_HavePair &&  ![(f$OpenPPL_HaveTopPair)]) || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (BotRaisedBeforeFlop AND BotsLastAction = RAISE AND Opponents <= 3 AND BotsActionsOnThisRound = 0)
//
f$myfunc205  &&  [ ([f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair || f$OpenPPL_HaveSet || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveTrips] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc205  &&  [ ([f$OpenPPL_HaveNutFlushDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc205  &&  [ ([f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (HaveSet)
//
f$myfunc206  &&  [ ( ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_UncoordinatedFlop)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 0 AND Raises = 0 AND Position = First AND User_Game_Early)
//
f$myfunc207  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlush && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlush) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 8) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 9) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 10) ] ? 8 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 8 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 7) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 8) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 9) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 10) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 8) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 9) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 8 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 8 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 8) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 9) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 10) ] ? 8 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 7) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 8) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 9) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 10) ] ? 7 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_StackSize > 10 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 6) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 7) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 8) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 9) ] ? 5 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 10) ] ? 6 * f$RaiseByBigBlinds :
f$myfunc207  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc207  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc207  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 1 AND Raises = 0 AND Position = First AND User_Game_Early)
//
f$myfunc208  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc208  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc208  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc208  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaisePot :
f$myfunc208  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_Have2ndNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc208  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc208  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc208  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_BigBlindSize <= 300 && f$OpenPPL_StackSize > 10 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc208  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc208  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc208  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc208  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_AmountToCall <= 32 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? f$OpenPPL_RaisePot :
f$myfunc208  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_RaisePot :
f$myfunc208  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc208  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 70 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets <= 1 AND Raises >= 1 AND Position = First AND User_Game_Early)
//
f$myfunc209  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc209  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc209  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc209  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc209  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents >= 2 AND Bets = 0 AND Raises = 0 AND Position = First AND User_Game_Early)
//
f$myfunc210  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveFlush && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveFlush) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && [(nsuitedcommon == 2 && nstraightfillcommon == 2) || nstraightfillcommon == 3 || nsuitedcommon == 3]) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 80) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))] && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 80) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc210  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc210  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents >= 2 AND Bets = 1 AND Raises = 0 AND Position = First AND User_Game_Early)
//
f$myfunc211  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc211  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc211  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc211  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc211  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_Have2ndNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc211  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc211  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc211  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc211  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc211  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc211  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 40 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc211  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc211  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents >= 2 AND Bets <= 1 AND Raises >= 1 AND Position = First AND User_Game_Early)
//
f$myfunc212  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc212  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc212  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc212  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc212  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc212  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc212  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc212  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc212  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc212  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc212  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 0 AND Raises = 0 AND Position = Middle AND User_Game_Early)
//
f$myfunc213  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaisePot :
f$myfunc213  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))] && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc213  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc213  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 1 AND Raises = 0 AND Position = Middle AND User_Game_Early)
//
f$myfunc214  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc214  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc214  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc214  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc214  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc214  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc214  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc214  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc214  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc214  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc214  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc214  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc214  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc214  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc214  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets <= 1 AND Raises >= 1 AND Position = Middle AND User_Game_Early)
//
f$myfunc215  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc215  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc215  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc215  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc215  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc215  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc215  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc215  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc215  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc215  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc215  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents >= 2 AND Bets = 0 AND Raises = 0 AND Position = Middle AND User_Game_Early)
//
f$myfunc216  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaisePot :
f$myfunc216  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && [(nsuitedcommon == 2 && nstraightfillcommon == 2) || nstraightfillcommon == 3 || nsuitedcommon == 3]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc216  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc216  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents >= 2 AND Bets = 1 AND Raises = 0 AND Position = Middle AND User_Game_Early)
//
f$myfunc217  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc217  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc217  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc217  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc217  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc217  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc217  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc217  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc217  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc217  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc217  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc217  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc217  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc217  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents >= 2 AND Bets <= 1 AND Raises >= 1 AND Position = Middle AND User_Game_Early)
//
f$myfunc218  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc218  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc218  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc218  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc218  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc218  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc218  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc218  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc218  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc218  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc218  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 0 AND Raises = 0 AND Position = Last AND User_Game_Early)
//
f$myfunc219  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaisePot :
f$myfunc219  &&  [ (f$OpenPPL_HaveFlush) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![([$23] || [$24] || [$25] || [$26] || [$27] || [$28] || [$29] || [$2T] || [$34] || [$35] || [$36] || [$37] || [$38] || [$39] || [$3T])]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))] && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc219  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (me_re_useraggressorpreflop && [f$OpenPPL_Overcards == 2 || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_HavePair] && f$OpenPPL_StackSize <= 9) ] ? f$OpenPPL_RaiseMax :
f$myfunc219  &&  [ (me_re_useraggressorpreflop && [f$OpenPPL_Overcards == 2 || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_HavePair] && f$OpenPPL_StackSize > 9) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc219  &&  [ (me_re_useraggressorpreflop && f$OpenPPL_OvercardsOnBoard <= 1 && f$OpenPPL_StackSize > 9) ] ? 50 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 1 AND Raises = 0 AND Position = Last AND User_Game_Early)
//
f$myfunc220  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc220  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc220  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc220  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaisePot :
f$myfunc220  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc220  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc220  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc220  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc220  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc220  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 66 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc220  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc220  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets <= 1 AND Raises >= 1 AND Position = Last AND User_Game_Early)
//
f$myfunc221  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc221  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc221  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc221  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc221  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents >= 2 AND Bets = 0 AND Raises = 0 AND Position = Last AND User_Game_Early)
//
f$myfunc222  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc222  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc222  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc222  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaisePot :
f$myfunc222  &&  [ (f$OpenPPL_HaveFlush) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Call :
f$myfunc222  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc222  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc222  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc222  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc222  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw) ] ? 75 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (Opponents >= 2 AND Bets = 1 AND Raises = 0 AND Position = Last AND User_Game_Early)
//
f$myfunc223  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc223  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc223  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc223  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc223  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc223  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc223  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc223  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc223  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc223  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc223  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc223  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc223  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc223  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents >= 2 AND Bets <= 1 AND Raises >= 1 AND Position = Last AND User_Game_Early)
//
f$myfunc224  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc224  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc224  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc224  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc224  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc224  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc224  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc224  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc224  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc224  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc224  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 0 AND Raises = 0 AND Position = First AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc225  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlush && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlush) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_StackSize > 10 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 6) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 7) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 8) ] ? 3 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 9) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_PotSize == 10) ] ? 4 * f$RaiseByBigBlinds :
f$myfunc225  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc225  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc225  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 1 AND Raises = 0 AND Position = First AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc226  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc226  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc226  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc226  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaisePot :
f$myfunc226  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_Have2ndNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc226  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc226  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc226  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_BigBlindSize <= 300 && f$OpenPPL_StackSize > 10 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc226  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc226  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc226  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc226  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_AmountToCall <= 32 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? f$OpenPPL_RaisePot :
f$myfunc226  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_RaisePot :
f$myfunc226  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc226  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 70 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets <= 1 AND Raises >= 1 AND Position = First AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc227  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc227  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc227  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc227  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc227  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 2 AND Bets = 0 AND Raises = 0 AND Position = First AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc228  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveFlush && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveFlush) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 80) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))] && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 80) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc228  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc228  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 2 AND Bets = 1 AND Raises = 0 AND Position = First AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc229  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc229  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc229  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc229  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc229  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_Have2ndNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc229  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc229  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc229  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc229  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc229  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc229  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 40 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc229  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc229  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 2 AND Bets <= 1 AND Raises >= 1 AND Position = First AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc230  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc230  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc230  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc230  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc230  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc230  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc230  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc230  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc230  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc230  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc230  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents > 2 AND Bets = 0 AND Raises = 0 AND Position = First AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc231  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveFlush && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveFlush) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw || f$OpenPPL_Have2ndNutFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc231  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents > 2 AND Bets = 1 AND Raises = 0 AND Position = First AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc232  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc232  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc232  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc232  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaisePot :
f$myfunc232  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaisePot :
f$myfunc232  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaisePot :
f$myfunc232  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_Have2ndNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc232  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc232  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc232  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc232  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc232  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc232  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc232  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc232  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc232  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents > 2 AND Bets <= 1 AND Raises >= 1 AND Position = First AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc233  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc233  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc233  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc233  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc233  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc233  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc233  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc233  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc233  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 0 AND Raises = 0 AND Position = Middle AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc234  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))] && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc234  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc234  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 1 AND Raises = 0 AND Position = Middle AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc235  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc235  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc235  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc235  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc235  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc235  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc235  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc235  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc235  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc235  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc235  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc235  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc235  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc235  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc235  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets <= 1 AND Raises >= 1 AND Position = Middle AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc236  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc236  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc236  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc236  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc236  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc236  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc236  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc236  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc236  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc236  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc236  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 2 AND Bets = 0 AND Raises = 0 AND Position = Middle AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc237  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc237  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc237  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 2 AND Bets = 1 AND Raises = 0 AND Position = Middle AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc238  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc238  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc238  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc238  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc238  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc238  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc238  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc238  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc238  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc238  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc238  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc238  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc238  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc238  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 2 AND Bets <= 1 AND Raises >= 1 AND Position = Middle AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc239  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc239  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc239  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc239  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc239  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc239  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc239  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc239  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc239  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc239  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc239  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents > 2 AND Bets = 0 AND Raises = 0 AND Position = Middle AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc240  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveFlush) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc240  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents > 2 AND Bets = 1 AND Raises = 0 AND Position = Middle AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc241  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc241  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc241  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc241  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaisePot :
f$myfunc241  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaisePot :
f$myfunc241  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaisePot :
f$myfunc241  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc241  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc241  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc241  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc241  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc241  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc241  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc241  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc241  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc241  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents > 2 AND Bets <= 1 AND Raises >= 1 AND Position = Middle AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc242  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc242  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc242  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc242  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc242  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc242  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_useropponentisallin && f$OpenPPL_Opponents <= 2 && f$OpenPPL_RaisesBeforeFlop && f$OpenPPL_Raises <= 1) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_useropponentisallin && f$OpenPPL_Opponents <= 2 && f$OpenPPL_RaisesBeforeFlop && f$OpenPPL_Raises <= 2 && me_re_useropponentisallin) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc242  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc242  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc242  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 0 AND Raises = 0 AND Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc243  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaisePot :
f$myfunc243  &&  [ (f$OpenPPL_HaveFlush) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![([$23] || [$24] || [$25] || [$26] || [$27] || [$28] || [$29] || [$2T] || [$34] || [$35] || [$36] || [$37] || [$38] || [$39] || [$3T])]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))] && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc243  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (me_re_useraggressorpreflop && [f$OpenPPL_Overcards == 2 || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_HavePair] && f$OpenPPL_StackSize <= 9) ] ? f$OpenPPL_RaiseMax :
f$myfunc243  &&  [ (me_re_useraggressorpreflop && [f$OpenPPL_Overcards == 2 || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_HavePair] && f$OpenPPL_StackSize > 9) ] ? 50 * f$RaiseByPercentagedPotsize :
f$myfunc243  &&  [ (me_re_useraggressorpreflop && f$OpenPPL_OvercardsOnBoard <= 1 && f$OpenPPL_StackSize > 9) ] ? 50 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets = 1 AND Raises = 0 AND Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc244  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc244  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc244  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc244  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaisePot :
f$myfunc244  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 90 * f$RaiseByPercentagedPotsize :
f$myfunc244  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_useraggressorpreflop) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc244  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc244  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc244  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc244  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc244  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 66 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc244  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc244  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 1 AND Bets <= 1 AND Raises >= 1 AND Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc245  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc245  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc245  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc245  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc245  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 2 AND Bets = 0 AND Raises = 0 AND Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc246  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc246  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc246  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc246  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveFlush) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_SuitsOnBoard >= 2 && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Call :
f$myfunc246  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc246  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc246  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc246  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc246  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (Opponents = 2 AND Bets = 1 AND Raises = 0 AND Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc247  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc247  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc247  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc247  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc247  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc247  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc247  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_StackSize > 10 && f$OpenPPL_BigBlindSize <= 300 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc247  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc247  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc247  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc247  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc247  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc247  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc247  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents = 2 AND Bets <= 1 AND Raises >= 1 AND Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc248  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveTopTwoPair]) ] ? f$OpenPPL_RaiseMax :
f$myfunc248  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc248  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc248  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc248  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc248  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc248  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc248  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc248  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc248  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc248  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents > 2 AND Bets = 0 AND Raises = 0 AND Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc249  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc249  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc249  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc249  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveFlush) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && me_re_usernonaggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc249  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Call :
f$myfunc249  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [ !([f$OpenPPL_RaisesBeforeFlop]) || f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_StackSize > 10) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc249  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Have2ndNutFlushDraw || f$OpenPPL_Have3rdNutFlushDraw]) ] ? f$OpenPPL_Call :
f$myfunc249  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc249  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc249  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc249  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw) ] ? 45 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (Opponents > 2 AND Bets = 1 AND Raises = 0 AND Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc250  &&  [ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc250  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc250  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? 80 * f$RaiseByPercentagedPotsize :
f$myfunc250  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaisePot :
f$myfunc250  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaisePot :
f$myfunc250  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc250  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaisePot :
f$myfunc250  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc250  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc250  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc250  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_RaiseMax :
f$myfunc250  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc250  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc250  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc250  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc250  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc250  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Opponents > 2 AND Bets <= 1 AND Raises >= 1 AND Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc251  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_HaveQuads)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards == 2] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_StackSize < 10) ] ? f$OpenPPL_RaiseMax :
f$myfunc251  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveNutFlush) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc251  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveFlush) ] ? f$OpenPPL_RaiseMax :
f$myfunc251  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc251  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_RaiseMax :
f$myfunc251  &&  [ (f$OpenPPL_HaveTwoPair && f$fold2pair2scaryboard) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 3) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 2) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_SuitsOnBoard == 1) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_HaveFlushDraw)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard && f$OpenPPL_FlushPossible) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_Have2ndOverPair && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0))]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Fold :
f$myfunc251  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Have2ndNutFlushDraw && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_SuitsOnBoard >= 2 && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HavePair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveBackdoorFlushDraw && f$OpenPPL_SuitsOnBoard == 3 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_BetSize <= 1) ] ? f$OpenPPL_Call :
f$myfunc251  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc251  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (User_Aggressor_Preflop AND Bets = 1 AND Raises = 0)
//
f$myfunc252  &&  [ (me_re_useropponentisallin && f$OpenPPL_Opponents == 1 && f$OpenPPL_Have2ndOverPair &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_K) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_Q) == 0)] || [(f$prime_coded_board_ranks % (1 * f$PrimeCode_J) == 0)])] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (User_Aggressor_Preflop AND Bets = 0 AND Raises = 0 AND Opponents <= 2)
//
f$myfunc253  &&  [ (f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_TripsOnBoard)]) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc253  &&  [ (f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_FlushPossible)]) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc253  &&  [ (f$OpenPPL_Overcards == 1 && f$OpenPPL_HaveInsideStraightDraw) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc253  &&  [ (f$OpenPPL_HaveNutFlushDraw) ] ? 65 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (User_Heads_Up AND Bets = 0 AND Raises = 0)
//
f$myfunc254  &&  [ ( ![(f$OpenPPL_RaisesBeforeFlop)] && f$OpenPPL_HavePair) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc254  &&  [ (f$OpenPPL_BotRaisedBeforeFlop && f$OpenPPL_HavePair) ] ? 75 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (User_Heads_Up AND RaisesBeforeFlop AND BotsLastPreflopAction = Call)
//
f$myfunc255  &&  [ (f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && [f$OpenPPL_Position == f$OpenPPL_First || f$OpenPPL_Position == f$OpenPPL_Middle]) ] ? f$OpenPPL_Call :
f$myfunc255  &&  [ (f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc255  &&  [ (f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (Opponents <= 2 AND NOT (RaisesBeforeFlop) AND NOT (FlushPossible) AND PairOnBoard)
//
f$myfunc256  &&  [ (f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Random <= 25) ] ? 55 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (NOT (RaisesBeforeFlop) AND Opponents = 1 AND StackSize <= 7 AND HavePair AND NOT (PairOnBoard))
//
f$myfunc257  &&  [ (f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_RaiseMax :
//
// Starting open-ended when-condition
// (Others)
//
f$myfunc204  &&  [ (f$OpenPPL_BotsLastPreflopAction == f$OpenPPL_Raise && f$OpenPPL_StackSize <= 1) ] ? f$OpenPPL_RaiseMax :
f$myfunc204  &&  [ ([f$OpenPPL_Have2ndTopPair || f$OpenPPL_Have2ndOverPair || f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair] && f$OpenPPL_StillToActPostflop <= 1 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && ![(f$OpenPPL_RaisesBeforeFlop)]) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc204  &&  [ (f$OpenPPL_AmountToCall <= 15 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 5 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HaveInsideStraightDraw || f$OpenPPL_Overcards >= 1 || (f$OpenPPL_HavePair && ![(f$OpenPPL_PairOnBoard)])] && ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_Raises >= 0) ] ? f$OpenPPL_Fold :
//
// When Others Fold Force
// Automatically added, just to be safe
//
f$OpenPPL_Fold 

##f$turn##
[ [ (f$OpenPPL_Raises >= 0) ] ? me_st_usernormalturn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNuts) ] ? me_st_userturnnuts_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveQuads) ] ? me_st_userturnquads_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? me_st_userturnfullhouse_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveStraightFlush) ] ? me_st_userturnstraightflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutFlush) ] ? me_st_userturnnutflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_HaveNutFlush)]) ] ? me_st_userturnflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutStraight) ] ? me_st_userturnnutstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveUnderStraight) ] ? me_st_userturnunderstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_HaveNutStraight)]) ] ? me_st_userturnstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveSet) ] ? me_st_userturnset_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTrips) ] ? me_st_userturntrips_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTopTwoPair) ] ? me_st_userturntoptwopair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_HaveTopTwoPair)]) ] ? me_st_userturntwopair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveOverPair) ] ? me_st_userturnoverpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTopPair) ] ? me_st_userturntoppair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTopNonBoardPairedPair && f$OpenPPL_PairOnBoard) ] ? me_st_userturntopnonboardpairedpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have2ndOverPair) ] ? me_st_userturn2ndoverpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have2ndTopPair) ] ? me_st_userturn2ndtoppair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HavePair &&  ![(f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair || f$OpenPPL_Have2ndTopPair || f$OpenPPL_Have2ndOverPair)]) ] ? me_st_userturnpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutFlushDraw &&  ![(f$OpenPPL_HaveNutFlush)]) ] ? me_st_userturnnutflushdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_HaveFlush)] &&  ![(f$OpenPPL_HaveNutFlushDraw)]) ] ? me_st_userturnflushdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_HaveNutStraight)]) ] ? me_st_userturnnutstraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_HaveStraight)] &&  ![(f$OpenPPL_HaveNutStraightDraw)]) ] ? me_st_userturnstraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveInsideNutStraightDraw &&  ![(f$OpenPPL_HaveStraight)]) ] ? me_st_userturnnutinsidestraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveInsideStraightDraw &&  ![(f$OpenPPL_HaveStraight)] &&  ![(f$OpenPPL_HaveStraightDraw)]) ] ? me_st_userturninsidestraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_HavePair)]) ] ? me_st_userturn2overcards_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Overcards == 1 &&  ![(f$OpenPPL_HavePair)] && f$OpenPPL_Overcards < 2) ] ? me_st_userturn1overcard_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveBestKicker) ] ? me_st_userturnbestkicker_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have2ndBestKicker &&  ![(f$OpenPPL_HaveBestKicker)]) ] ? me_st_userturn2ndbestkicker_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have3rdBestKicker &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker || f$OpenPPL_Have3rdBestKicker)]) ] ? me_st_userturn3rdbestkicker_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNothing) ] ? me_st_userturnnothing_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_QuadsOnBoard) ] ? me_st_userturnboardquads_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_QuadsOnBoard)]) ] ? me_st_userturnboardtrips_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TwoPairOnBoard &&  ![(f$OpenPPL_TripsOnBoard)]) ] ? me_st_userturnboardtwopair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_TripsOnBoard)] &&  ![(f$OpenPPL_TwoPairOnBoard)]) ] ? me_st_userturnboardpaired_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OneCardFlushPossible) ] ? me_st_userturnboardonecardpossibleflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)]) ] ? me_st_userturnboardpossibleflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OneCardStraightPossible) ] ? me_st_userturnboardonecardpossiblestraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StraightPossible &&  ![(f$OpenPPL_OneCardStraightPossible)]) ] ? me_st_userturnboardpossiblestraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Only1OneCardStraightPossible) ] ? me_st_userturnboardonlyonecardpossiblestraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OnlyOneStraightPossible &&  ![(f$OpenPPL_Only1OneCardStraightPossible)]) ] ? me_st_userturnboardonlyonepossiblestraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TurnCardisOvercardToBoard) ] ? me_st_userturnboardnextcardisovercard_1 : 0] && 0 ? 0 :
[ [ ( ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_K) == 0)])] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_Q) == 0)])] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_J) == 0)])]) ] ? me_st_userboardturnnopaint_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_NoBettingOnFlop) ] ? me_st_usernobetsonflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_CalledOnFlop &&  ![(f$OpenPPL_NoBettingOnFlop)]) ] ? me_st_usernonaggressorflop_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_NoBettingOnFlop)] &&  ![(f$OpenPPL_CalledOnFlop)]) ] ? me_st_useraggressorflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin) ] ? me_st_useropponentisallin_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents == 1) ] ? me_st_useropponents1_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents == 2) ] ? me_st_useropponents2_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents > 2) ] ? me_st_useropponentsmultiway_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 0) ] ? me_st_useratc0turn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 1) ] ? me_st_useratc1turn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 2) ] ? me_st_useratc2turn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 3) ] ? me_st_useratc3turn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 4) ] ? me_st_useratc4turn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall >= 5) ] ? me_st_useratcgreaterthanorequalto5turn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents == 1 && f$OpenPPL_RaisesBeforeFlop && f$OpenPPL_BotsLastPreflopAction == f$OpenPPL_Call &&  ![(f$OpenPPL_NoBettingOnFlop)] && f$OpenPPL_CalledOnFlop) ] ? me_st_userfloatedonflop_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents == 1 &&  ![(f$OpenPPL_NoBettingOnFlop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_Position == f$OpenPPL_Last && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? me_st_usershowingweaknessonturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 1) ] ? me_st_useroppminraiseturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 2) ] ? me_st_useroppraise2bbturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 3) ] ? me_st_useroppraise3bbturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 4) ] ? me_st_useroppraise4bbturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 5) ] ? me_st_useroppraise5bbturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto25percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 26 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto35percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 26 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto50percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 33 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 43 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto75percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 43 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto100percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiseoverraiseturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 25 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto25percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 25 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto35percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 35 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto50percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto75percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto100percpotturn_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 100 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocallgreaterthanorequalto50percpotturn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_PotSize >= 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_userpotcommitted_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TotalInvested >= 200 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_usertotalinvestedtwothirdsofstackturn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_usertotalinvestedhalfofstackturn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionturnraise_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_None && f$OpenPPL_BotsActionsOnThisRound == 0) ] ? me_st_userlastactionturnnone_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionturncall_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionturnbet_1 : 0] && 0 ? 0 :
[ [ ( ![(me_re_userlastactionturnraise)] &&  ![(me_re_userlastactionturnnone)] &&  ![(me_re_userlastactionturncall)] &&  ![(me_re_userlastactionturnbet)] && f$OpenPPL_BotsActionsOnThisRound > 0) ] ? me_st_userlastactionturncheck_1 : 0] && 0 ? 0 :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && me_re_useropponentisallin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HavePair || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveQuads || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw || f$OpenPPL_Overcards >= 1]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_QuadsOnBoard)] && [(f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveNuts)] && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_OpponentIsAllin && [(f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet)] && f$OpenPPL_AmountToCall <= 3)] ? f$OpenPPL_Call :
[ (f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_NutFullHouseOrFourOfAKind == 1 || f$OpenPPL_NutFullHouseOrFourOfAKind == 2 || f$OpenPPL_HaveQuads || f$OpenPPL_HaveStraightFlush)] && f$OpenPPL_BetSize > 6) ] ? f$OpenPPL_Fold :
[ (f$OpenPPL_TwoPairOnBoard &&  ![(f$OpenPPL_NutFullHouseOrFourOfAKind == 1 || f$OpenPPL_NutFullHouseOrFourOfAKind == 2 || f$OpenPPL_NutFullHouseOrFourOfAKind == 3 || f$OpenPPL_HaveQuads || f$OpenPPL_HaveStraightFlush)] && f$OpenPPL_BetSize > 6) ] ? f$OpenPPL_Fold :
[ ( ![(f$OpenPPL_NoBettingOnFlop)] &&  ![(f$OpenPPL_CalledOnFlop)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && [f$OpenPPL_Position == f$OpenPPL_First || f$OpenPPL_Position == f$OpenPPL_Middle]) ] ? 65 * f$RaiseByPercentagedPotsize :
[ ( ![(f$OpenPPL_NoBettingOnFlop)] &&  ![(f$OpenPPL_CalledOnFlop)] && f$DrawFlop && f$OpenPPL_Bets == 0 && f$OpenPPL_Opponents == 1  && f$OpenPPL_Raises == 0 && f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)]) ] ? 65 * f$RaiseByPercentagedPotsize :
[ ( ![(f$OpenPPL_NoBettingOnFlop)] &&  ![(f$OpenPPL_CalledOnFlop)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_HaveTopPair && f$OpenPPL_StackSize < 10 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_Raises >= 1) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_Raises >= 1 && me_re_useropponentisallin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_StackSize <= 10 && [f$OpenPPL_BotIsLastRaiser || f$OpenPPL_NoBettingOnFlop] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveTopPair || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_HaveInsideStraightDraw)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? f$OpenPPL_RaiseMax :
[ (f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveStraight || f$OpenPPL_HaveFlush]) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_Bets == 1 && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
[ (nopponentsseated == 1 && f$OpenPPL_HaveTopPair) ] ? f$OpenPPL_RaiseMax :
[ (nopponentsseated == 1 && [f$OpenPPL_Have2ndTopPair || f$OpenPPL_HaveStraightDraw || f$OpenPPL_HaveFlushDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
[ (nopponentsseated == 1 && [f$OpenPPL_Have2ndTopPair || f$OpenPPL_HaveStraightDraw || f$OpenPPL_HaveFlushDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
[ (nopponentsseated == 1 && f$OpenPPL_NoBettingOnFlop && f$OpenPPL_Position == f$OpenPPL_Last && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
[ ([f$OpenPPL_BotRaisedBeforeFlop] && f$OpenPPL_NoBettingOnFlop && f$OpenPPL_Position == f$OpenPPL_Last &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveStraightFlush || f$OpenPPL_HaveNutFlush] && f$OpenPPL_NoBettingOnFlop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// ((Position = First OR Position = Middle) AND User_Game_Early)
//
f$myfunc259  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1] && f$OpenPPL_Raises >= 1 && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1] && f$OpenPPL_HaveOverPair && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_OneCardFlushPossible] && f$OpenPPL_AmountToCall >= 40 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ ([f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveFullHouse]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_OneCardStraightPossible && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_OneCardStraightPossible && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_AmountToCall <= 25 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_OpponentsOnFlop >= 2 && f$OpenPPL_Opponents >= 2) ] ? f$OpenPPL_RaisePot :
f$myfunc259  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_OpponentsOnFlop >= 2 && f$OpenPPL_Opponents >= 2 &&  ![(me_re_usernobetsonflop)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc259  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard <= 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard <= 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopTwoPair &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopTwoPair &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_HadTopPairOnFlop &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(me_re_usernobetsonflop)] &&  ![(f$OpenPPL_CalledOnFlop)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 1 && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && [f$OpenPPL_FlushPossible || f$OpenPPL_OneCardStraightPossible] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall > 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_HadTopPairOnFlop &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_BetSize <= 2 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BigBlindSize <= 300) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair &&  ![([$A] || [$K])] && [([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)]) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_K) == 0))] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair &&  ![([$A] || [$K])] && [([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)]) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_K) == 0))] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 2) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && [($AA) || ($KK) || ($QQ) || ($JJ)]) ] ? 70 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 && f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 && f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && [f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_HadOverPairOnFlop &&  ![(f$OpenPPL_OneCardStraightPossible)] && me_re_useraggressorflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_HadOverPairOnFlop &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)] && me_re_usernobetsonflop) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && [f$OpenPPL_BetSize <= 4 || f$OpenPPL_TotalInvested >= 50 * 0.01 * f$OpenPPL_PotSize]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HavePair && me_re_usernoraisespreflop && me_re_usernobetsonflop &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc259  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 10 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_AmountToCall <= 37 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise]) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall > 37 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc259  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 28 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc259  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_HaveInsideStraightDraw &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 28 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Position = Last AND User_Game_Early)
//
f$myfunc260  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1] && f$OpenPPL_Raises >= 1 && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1] && f$OpenPPL_HaveOverPair && [f$OpenPPL_PairOnBoard || f$OpenPPL_FlushPossible] && f$OpenPPL_BetSize >= 70 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc260  &&  [ (f$OpenPPL_HaveQuads) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ ([f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveFullHouse]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_OneCardStraightPossible && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_OneCardStraightPossible && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_OneCardFlushPossible] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
f$myfunc260  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard <= 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard <= 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopTwoPair &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopTwoPair &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_HadTopPairOnFlop &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && me_re_useraggressorflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 1 && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
f$myfunc260  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && [f$OpenPPL_FlushPossible || f$OpenPPL_OneCardStraightPossible] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall > 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc260  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_HadTopPairOnFlop &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_BetSize <= 2 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BigBlindSize <= 300) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 && f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 && f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_FlushPossible || f$OpenPPL_OneCardStraightPossible] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_FlushPossible || f$OpenPPL_OneCardStraightPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 50 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_HadOverPairOnFlop &&  ![(f$OpenPPL_OneCardStraightPossible)] && me_re_useraggressorflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_HadOverPairOnFlop &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && me_re_usernobetsonflop) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])]) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && [f$OpenPPL_BetSize <= 4 || f$OpenPPL_TotalInvested >= 50 * 0.01 * f$OpenPPL_PotSize]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernobetsonflop) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveNutFlushDraw && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 33 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Opponents <= 2) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Overcards == 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Overcards == 2 && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HavePair && me_re_usernoraisespreflop && me_re_usernobetsonflop &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 10 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_AmountToCall <= 37 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall > 37 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc260  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 28 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_HaveInsideStraightDraw &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 28 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_AmountToCall <= 16 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_Bets == 1 && [f$OpenPPL_HavePair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_Bets == 1 && [f$OpenPPL_HavePair && (f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw)]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Bets == 1 && [f$OpenPPL_HavePair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc260  &&  [ (f$OpenPPL_RaisesBeforeFlop &&  ![(f$OpenPPL_BotIsLastRaiser)] && me_re_usernobetsonflop && f$OpenPPL_Opponents == 1 && f$OpenPPL_Position == f$OpenPPL_Last && f$OpenPPL_HavePair && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc260  &&  [ (me_re_userturntoppair && me_re_userturnbestkicker && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaisePot :
//
// Starting open-ended when-condition
// ((Position = First OR Position = Middle) AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc261  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1] && f$OpenPPL_Raises >= 1 && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1] && f$OpenPPL_HaveOverPair && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_OneCardFlushPossible] && f$OpenPPL_AmountToCall >= 40 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveStraightFlush]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ ([f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveFullHouse]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_OneCardStraightPossible && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_OneCardStraightPossible && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_AmountToCall <= 25 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_OpponentsOnFlop >= 2 && f$OpenPPL_Opponents >= 2) ] ? f$OpenPPL_RaisePot :
f$myfunc261  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_OpponentsOnFlop >= 2 && f$OpenPPL_Opponents >= 2 &&  ![(me_re_usernobetsonflop)]) ] ? f$OpenPPL_RaiseMax :
f$myfunc261  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard <= 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard <= 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopTwoPair &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopTwoPair &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_HadTopPairOnFlop &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(me_re_usernobetsonflop)] &&  ![(f$OpenPPL_CalledOnFlop)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 1 && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && [f$OpenPPL_FlushPossible || f$OpenPPL_OneCardStraightPossible] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall > 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_HadTopPairOnFlop &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_BetSize <= 2 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BigBlindSize <= 300) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair &&  ![([$A] || [$K])] && [([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)]) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_K) == 0))] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair &&  ![([$A] || [$K])] && [([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)]) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_K) == 0))] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 2) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && [($AA) || ($KK) || ($QQ) || ($JJ)]) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 && f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 && f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && [f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_HadOverPairOnFlop &&  ![(f$OpenPPL_OneCardStraightPossible)] && me_re_useraggressorflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_HadOverPairOnFlop &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)] && me_re_usernobetsonflop) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && [f$OpenPPL_BetSize <= 4 || f$OpenPPL_TotalInvested >= 50 * 0.01 * f$OpenPPL_PotSize]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_Overcards == 2 && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_BotRaisedBeforeFlop)] &&  ![(me_re_usernobetsonflop)] && f$OpenPPL_CalledOnFlop && f$OpenPPL_StillToAct >= 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HavePair && me_re_usernoraisespreflop && me_re_usernobetsonflop &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc261  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 10 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_AmountToCall <= 37 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise]) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall > 37 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc261  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 28 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc261  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_HaveInsideStraightDraw &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 28 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Position = Last AND (User_Game_Middle OR User_Game_Late))
//
f$myfunc262  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1] && f$OpenPPL_Raises >= 1 && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1] && f$OpenPPL_HaveOverPair && [f$OpenPPL_PairOnBoard || f$OpenPPL_FlushPossible] && f$OpenPPL_BetSize >= 70 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc262  &&  [ (f$OpenPPL_HaveQuads) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ ([f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveFullHouse]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_OneCardStraightPossible && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_OneCardStraightPossible && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_OneCardFlushPossible] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_FlushPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
f$myfunc262  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ ([f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard <= 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopTwoPair && f$OpenPPL_SuitsOnBoard <= 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopTwoPair &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopTwoPair &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_HadTopPairOnFlop &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && me_re_useraggressorflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 1 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 1 && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
f$myfunc262  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_SuitsOnBoard >= 3 &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair && f$OpenPPL_HaveNutFlushDraw && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] && [f$OpenPPL_FlushPossible || f$OpenPPL_OneCardStraightPossible] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_AcePresentOnFlop) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_AcePresentOnFlop)]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall > 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc262  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndTopPair && f$OpenPPL_HadTopPairOnFlop &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_StraightPossible)] && f$OpenPPL_BetSize <= 2 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BigBlindSize <= 300) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 && f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 && f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 40 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair && f$OpenPPL_FlushPossible && f$OpenPPL_HaveNutFlushDraw && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_FlushPossible || f$OpenPPL_OneCardStraightPossible] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_FlushPossible || f$OpenPPL_OneCardStraightPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 50 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveOverPair && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_HadOverPairOnFlop &&  ![(f$OpenPPL_OneCardStraightPossible)] && me_re_useraggressorflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_HadOverPairOnFlop &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && me_re_usernobetsonflop) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndOverPair && f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])]) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && f$OpenPPL_BetSize <= 2) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_Have2ndOverPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] && [f$OpenPPL_BetSize <= 4 || f$OpenPPL_TotalInvested >= 50 * 0.01 * f$OpenPPL_PotSize]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveNutFlushDraw && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_PairOnBoard)] && me_re_usernobetsonflop) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveNutFlushDraw && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 33 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveFlushDraw && f$OpenPPL_FlushPossible && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Opponents <= 2) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Overcards == 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Overcards == 2 && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 45 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveStraightDraw && f$OpenPPL_OneCardStraightPossible && f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HavePair && me_re_usernoraisespreflop && me_re_usernobetsonflop &&  ![(f$OpenPPL_PairOnBoard)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 45 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_BetSize <= 10 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && [f$OpenPPL_AmountToCall <= 37 * 0.01 * f$OpenPPL_PotSize || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_SuitsOnBoard == 2 &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall > 37 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Fold :
f$myfunc262  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 28 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_HavePair && f$OpenPPL_HaveInsideStraightDraw &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_AmountToCall <= 28 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_AmountToCall <= 16 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_Bets == 1 && [f$OpenPPL_HavePair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_Bets == 1 && [f$OpenPPL_HavePair && (f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw)]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Bets == 1 && [f$OpenPPL_HavePair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw]) ] ? f$OpenPPL_Call :
f$myfunc262  &&  [ (f$OpenPPL_RaisesBeforeFlop &&  ![(f$OpenPPL_BotIsLastRaiser)] && me_re_usernobetsonflop && f$OpenPPL_Opponents == 1 && f$OpenPPL_Position == f$OpenPPL_Last && f$OpenPPL_HavePair && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc262  &&  [ (me_re_userturntoppair && me_re_userturnbestkicker && [f$OpenPPL_HaveNutFlushDraw || f$OpenPPL_Have2ndNutFlushDraw] &&  ![(f$OpenPPL_PairOnBoard)]) ] ? f$OpenPPL_RaisePot :
//
// Starting open-ended when-condition
// (BotRaisedBeforeFlop AND NoBettingOnFlop AND Position = Last AND Bets = 0 AND Raises = 0 AND NOT (OneCardFlushPossible) AND NOT (OneCardStraightPossible))
//
f$myfunc263  &&  [ (f$OpenPPL_Bets == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (NOT (NoBettingOnFlop) AND NOT (CalledOnFlop) AND Bets = 0 AND Raises = 0 AND User_Heads_Up)
//
f$myfunc264  &&  [ ([f$OpenPPL_HavePair || f$OpenPPL_HaveFlushDraw || f$OpenPPL_HaveStraightDraw] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_FlushPossible)]) ] ? 65 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (NoBettingOnFlop AND NotRaisesBeforeFlop AND NOT (FlushPossible) AND NOT (OneCardStraightPossible))
//
f$myfunc265  &&  [ (f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Opponents == 1 && f$OpenPPL_Position == f$OpenPPL_Last) ] ? 65 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (NoBettingOnFlop AND NOT (RaisesBeforeFlop) AND User_ITM AND NOT (OneCardStraightPossible) AND NOT (OneCardFlushPossible) AND NOT (TripsOnBoard) AND NOT (TwoPairOnBoard))
//
f$myfunc266  &&  [ (f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Opponents == 1 && f$OpenPPL_Position == f$OpenPPL_Last) ] ? 65 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (NoBettingOnFlop AND HadTopPairOnFlop AND HaveTopPair AND NOT (FlushPossible) AND NOT (TwoPairOnBoard) AND NOT (TripsOnBoard) AND NOT (OneCardStraightPossible))
//
f$myfunc267  &&  [ (f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Opponents <= 2) ] ? 65 * f$RaiseByPercentagedPotsize :
//
// Starting open-ended when-condition
// (Others)
//
[ (f$OpenPPL_Raises >= 0) ] ? f$OpenPPL_Fold :
//
// When Others Fold Force
// Automatically added, just to be safe
//
f$OpenPPL_Fold 

##f$river##
[ [ (f$OpenPPL_Raises >= 0) ] ? me_st_usernormalriver_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNuts) ] ? me_st_userrivernuts_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveQuads) ] ? me_st_userriverquads_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_HaveQuads)]) ] ? me_st_userriverfullhouse_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveStraightFlush) ] ? me_st_userriverstraightflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutFlush) ] ? me_st_userrivernutflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_HaveNutFlush)]) ] ? me_st_userriverflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutStraight) ] ? me_st_userrivernutstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveUnderStraight) ] ? me_st_userriverunderstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_HaveNutStraight)]) ] ? me_st_userriverstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveSet) ] ? me_st_userriverset_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTrips) ] ? me_st_userrivertrips_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTopTwoPair) ] ? me_st_userrivertoptwopair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_HaveTopTwoPair)]) ] ? me_st_userrivertwopair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveOverPair) ] ? me_st_userriveroverpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTopPair) ] ? me_st_userrivertoppair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveTopNonBoardPairedPair && f$OpenPPL_PairOnBoard) ] ? me_st_userrivertopnonboardpairedpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have2ndOverPair) ] ? me_st_userriver2ndoverpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have2ndTopPair) ] ? me_st_userriver2ndtoppair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HavePair &&  ![(f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair || f$OpenPPL_Have2ndTopPair || f$OpenPPL_Have2ndOverPair)]) ] ? me_st_userriverpair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutFlushDraw &&  ![(f$OpenPPL_HaveNutFlush)]) ] ? me_st_userrivernutflushdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveFlushDraw &&  ![(f$OpenPPL_HaveFlush)] &&  ![(f$OpenPPL_HaveNutFlushDraw)]) ] ? me_st_userriverflushdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNutStraightDraw &&  ![(f$OpenPPL_HaveNutStraight)]) ] ? me_st_userrivernutstraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveStraightDraw &&  ![(f$OpenPPL_HaveStraight)] &&  ![(f$OpenPPL_HaveNutStraightDraw)]) ] ? me_st_userriverstraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveInsideNutStraightDraw &&  ![(f$OpenPPL_HaveStraight)]) ] ? me_st_userrivernutinsidestraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveInsideStraightDraw &&  ![(f$OpenPPL_HaveStraight)] &&  ![(f$OpenPPL_HaveStraightDraw)]) ] ? me_st_userriverinsidestraightdraw_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Overcards == 2 &&  ![(f$OpenPPL_HavePair)]) ] ? me_st_userriver2overcards_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Overcards == 1 &&  ![(f$OpenPPL_HavePair)] && f$OpenPPL_Overcards < 2) ] ? me_st_userriver1overcard_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveBestKicker) ] ? me_st_userriverbestkicker_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have2ndBestKicker &&  ![(f$OpenPPL_HaveBestKicker)]) ] ? me_st_userriver2ndbestkicker_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Have3rdBestKicker &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker || f$OpenPPL_Have3rdBestKicker)]) ] ? me_st_userriver3rdbestkicker_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_HaveNothing) ] ? me_st_userrivernothing_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_QuadsOnBoard) ] ? me_st_userriverboardquads_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_FullHouseOnBoard &&  ![(f$OpenPPL_QuadsOnBoard)]) ] ? me_st_userriverboardfullhouse_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StraightOnBoard) ] ? me_st_userriverboardstraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_FlushOnBoard) ] ? me_st_userriverboardflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_QuadsOnBoard)]) ] ? me_st_userriverboardtrips_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TwoPairOnBoard &&  ![(f$OpenPPL_TripsOnBoard)]) ] ? me_st_userriverboardtwopair_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_PairOnBoard &&  ![(f$OpenPPL_TripsOnBoard)] &&  ![(f$OpenPPL_TwoPairOnBoard)]) ] ? me_st_userriverboardpaired_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OneCardFlushPossible) ] ? me_st_userriverboardonecardpossibleflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)]) ] ? me_st_userriverboardpossibleflush_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OneCardStraightPossible) ] ? me_st_userriverboardonecardpossiblestraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_StraightPossible &&  ![(f$OpenPPL_OneCardStraightPossible)]) ] ? me_st_userriverboardpossiblestraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Only1OneCardStraightPossible) ] ? me_st_userriverboardonlyonecardpossiblestraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OnlyOneStraightPossible &&  ![(f$OpenPPL_Only1OneCardStraightPossible)]) ] ? me_st_userriverboardonlyonepossiblestraight_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_RiverCardisOvercardToBoard) ] ? me_st_userriverboardnextcardisovercard_1 : 0] && 0 ? 0 :
[ [ ( ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_A) == 0)])] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_K) == 0)])] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_Q) == 0)])] &&  ![([(f$prime_coded_board_ranks % (1 * f$PrimeCode_J) == 0)])]) ] ? me_st_userboardrivernopaint_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_NoBettingOnTurn) ] ? me_st_usernobetsonturn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_CalledOnTurn &&  ![(f$OpenPPL_NoBettingOnTurn)]) ] ? me_st_usernonaggressorturn_1 : 0] && 0 ? 0 :
[ [ ( ![(f$OpenPPL_NoBettingOnTurn)] &&  ![(f$OpenPPL_CalledOnTurn)]) ] ? me_st_useraggressorturn_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentIsAllin) ] ? me_st_useropponentisallin_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents == 1) ] ? me_st_useropponents1_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents == 2) ] ? me_st_useropponents2_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents > 2) ] ? me_st_useropponentsmultiway_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_Opponents == 1 &&  ![(f$OpenPPL_NoBettingOnTurn)] && f$OpenPPL_Position == f$OpenPPL_Last && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? me_st_usershowingweaknessonriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 1) ] ? me_st_useroppminraiseriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 2) ] ? me_st_useroppraise2bbriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 3) ] ? me_st_useroppraise3bbriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 4) ] ? me_st_useroppraise4bbriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize == 5) ] ? me_st_useroppraise5bbriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto25percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 26 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto35percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 26 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 33 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto50percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 33 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 43 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto75percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 43 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_BetSize <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiselessthanorequalto100percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize > 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useroppraiseoverraiseriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 25 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto25percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 25 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto35percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 35 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto50percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 50 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 75 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto75percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 75 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocalllessthanorequalto100percpotriver_1 : 0] && 0 ? 0 :
[ [ ([f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall > 100 * 0.01 * f$OpenPPL_PotSize) ] ? me_st_useramounttocallgreaterthanorequalto50percpotriver_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_PotSize >= 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_userpotcommitted_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TotalInvested >= 200 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_usertotalinvestedtwothirdsofstackriver_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize) ] ? me_st_usertotalinvestedhalfofstackriver_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionriverraise_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_None && f$OpenPPL_BotsActionsOnThisRound == 0) ] ? me_st_userlastactionrivernone_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionrivercall_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_BotsActionsOnThisRound >= 1) ] ? me_st_userlastactionriverbet_1 : 0] && 0 ? 0 :
[ [ ( ![(me_re_userlastactionriverraise)] &&  ![(me_re_userlastactionrivernone)] &&  ![(me_re_userlastactionrivercall)] &&  ![(me_re_userlastactionriverbet)] && f$OpenPPL_BotsActionsOnThisRound > 0) ] ? me_st_userlastactionrivercheck_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsAtTable == 5) ] ? me_st_user6handed_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsAtTable == 4) ] ? me_st_user5handed_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsAtTable == 3) ] ? me_st_user4handed_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsAtTable == 2) ] ? me_st_user3handed_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_OpponentsAtTable == 1) ] ? me_st_userheadsup_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 0) ] ? me_st_useratc0river_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 1) ] ? me_st_useratc1river_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 2) ] ? me_st_useratc2river_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 3) ] ? me_st_useratc3river_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall == 4) ] ? me_st_useratc4river_1 : 0] && 0 ? 0 :
[ [ (f$OpenPPL_AmountToCall >= 5) ] ? me_st_useratcgreaterthanorequalto5river_1 : 0] && 0 ? 0 :
[ (f$OpenPPL_HaveNuts) ] ? 75 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 && me_re_useropponentisallin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 20 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_AmountToCall <= 35 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HavePair || f$OpenPPL_HaveFlush || f$OpenPPL_HaveStraight || f$OpenPPL_HaveSet || f$OpenPPL_HaveTrips || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveTwoPair || f$OpenPPL_HaveQuads]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_QuadsOnBoard &&  ![([$A] || [$K])]) ] ? f$OpenPPL_Fold :
[ (f$OpenPPL_QuadsOnBoard && [($A)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_QuadsOnBoard && [($A)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 90 * f$RaiseByPercentagedPotsize :
[ (f$OpenPPL_QuadsOnBoard && [$K] && f$OpenPPL_AmountToCall <= 25 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_StraightOnBoard && [((f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_Q * f$PrimeCode_J * f$PrimeCode_T * f$PrimeCode_9) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_2 * f$PrimeCode_3 * f$PrimeCode_4 * f$PrimeCode_5 * f$PrimeCode_6) == 0))] &&  ![([$A])] &&  ![(f$OpenPPL_HaveNutStraight || f$OpenPPL_Have2ndNutStraight)]) ] ? f$OpenPPL_Fold :
[ (f$OpenPPL_StraightOnBoard &&  ![(f$OpenPPL_HaveNutStraight || f$OpenPPL_Have2ndNutStraight)] && f$OpenPPL_AmountToCall >= 25 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
[ (f$OpenPPL_HaveFullHouse &&  ![(f$OpenPPL_NutFullHouseOrFourOfAKind == 1 || f$OpenPPL_NutFullHouseOrFourOfAKind == 2)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_TripsOnBoard && f$OpenPPL_HaveOverPair) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_QuadsOnBoard)] && [(f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveQuads || f$OpenPPL_HaveNuts)] && f$OpenPPL_BotsActionsOnThisRound >= 1 && f$OpenPPL_OpponentIsAllin && [(f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet)] && f$OpenPPL_AmountToCall <= 3)] ? f$OpenPPL_Call :
[ (f$OpenPPL_TripsOnBoard &&  ![(f$OpenPPL_NutFullHouseOrFourOfAKind == 1 || f$OpenPPL_NutFullHouseOrFourOfAKind == 2 || f$OpenPPL_HaveQuads || f$OpenPPL_HaveStraightFlush)] && f$OpenPPL_BetSize > 6) ] ? f$OpenPPL_Fold :
[ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_Raises >= 1 && me_re_useropponentisallin && f$OpenPPL_Opponents == 1 && f$OpenPPL_AmountToCall <= 30 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Raise || f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1] && f$OpenPPL_Raises >= 1 && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair]) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_HaveNutFlush)] && f$OpenPPL_Raises >= 1) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_HaveFlush && [f$OpenPPL_PairOnBoard || f$OpenPPL_TripsOnBoard] && f$OpenPPL_Raises >= 1) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_PotSize && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1] &&  ![(f$OpenPPL_NoBettingOnFlop)] &&  ![(f$OpenPPL_NoBettingOnTurn)] && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_TwoPairOnBoard &&  ![(f$OpenPPL_NutFullHouseOrFourOfAKind == 1 || f$OpenPPL_NutFullHouseOrFourOfAKind == 2 || f$OpenPPL_NutFullHouseOrFourOfAKind == 3 || f$OpenPPL_HaveQuads || f$OpenPPL_HaveStraightFlush)] && f$OpenPPL_BetSize > 6) ] ? f$OpenPPL_Fold :
[ ( ![(f$OpenPPL_NoBettingOnFlop)] &&  ![(f$OpenPPL_NoBettingOnTurn)] && f$OpenPPL_Raises >= 1 && f$OpenPPL_BetSize <= 10 * 0.01 * f$OpenPPL_PotSize && f$OpenPPL_HavePair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_TotalInvested >= 50 * 0.01 * f$OpenPPL_PotSize && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair]) ] ? f$OpenPPL_Call :
[ (f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && [f$OpenPPL_HaveTopPair || f$OpenPPL_HaveOverPair]) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_TotalInvested >= 50 * 0.01 * f$OpenPPL_StackSize || f$OpenPPL_TotalInvested >= 30 * 0.01 * f$OpenPPL_PotSize] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && [f$OpenPPL_Have2ndTopPair || f$OpenPPL_Have2ndOverPair]) ] ? f$OpenPPL_Call :
[ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Bet && f$OpenPPL_BotsActionsOnThisRound >= 1 || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise] && f$OpenPPL_Bets == 1 && f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_Q * f$PrimeCode_J * f$PrimeCode_T) == 0) && ![(f$OpenPPL_HaveNutStraight || f$OpenPPL_HaveFullHouse || f$OpenPPL_HaveFlush || f$OpenPPL_HaveQuads)] && f$OpenPPL_AmountToCall >= 40 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Fold :
//
// Starting open-ended when-condition
// (Position = First)
//
f$myfunc269  &&  [ (f$OpenPPL_HaveFullHouse && f$OpenPPL_FullHouseOnBoard) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveStraightFlush || f$OpenPPL_HaveFullHouse] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveStraightFlush || f$OpenPPL_HaveFullHouse] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc269  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_HaveFlush)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_HaveFlush)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc269  &&  [ (f$OpenPPL_HaveNutStraight && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_HaveFlush)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveNutStraight && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_HaveFlush)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 40 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveNutFlush && [f$OpenPPL_OneCardFlushPossible || f$OpenPPL_OneCardStraightPossible] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveNutFlush && [f$OpenPPL_OneCardFlushPossible || f$OpenPPL_OneCardStraightPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible && f$OpenPPL_CalledOnFlop && f$OpenPPL_CalledOnTurn && f$OpenPPL_BetSize <= 8) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Have2ndNutStraight && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_HaveFlush)]) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Have2ndNutStraight) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_Have2ndNutStraight)] &&  ![(f$OpenPPL_HaveFlush)] && f$OpenPPL_BetSize <= 8) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_HaveNutFlush || f$OpenPPL_Have2ndNutFlush)] && f$OpenPPL_BetSize <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveTrips &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveTrips &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc269  &&  [ (f$OpenPPL_HaveSet &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveSet &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc269  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_BetSize <= 7) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveTwoPair && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc269  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_AmountToCall <= 60 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc269  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_BetSize <= 40 * 0.01 * f$OpenPPL_StackSize || f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize]) ] ? f$OpenPPL_Call :
f$myfunc269  &&  [ (me_re_userheadsup && f$OpenPPL_HavePair && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Position = Middle)
//
f$myfunc270  &&  [ (f$OpenPPL_HaveFullHouse && f$OpenPPL_FullHouseOnBoard) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveStraightFlush || f$OpenPPL_HaveFullHouse] && f$OpenPPL_TripsOnBoard && f$OpenPPL_PairOnBoard && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveStraightFlush || f$OpenPPL_HaveFullHouse] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveStraightFlush || f$OpenPPL_HaveFullHouse] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc270  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_HaveFlush)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_HaveFlush)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc270  &&  [ (f$OpenPPL_HaveNutStraight && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_HaveFlush)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveNutStraight && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_HaveFlush)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 40 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveNutFlush && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_OneCardStraightPossible] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveNutFlush && [f$OpenPPL_OneCardStraightPossible || f$OpenPPL_OneCardStraightPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible && f$OpenPPL_CalledOnFlop && f$OpenPPL_CalledOnTurn && f$OpenPPL_BetSize <= 8) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Have2ndNutStraight && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_HaveFlush)]) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Have2ndNutStraight) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_Have2ndNutStraight)] &&  ![(f$OpenPPL_HaveFlush)] && f$OpenPPL_BetSize <= 8) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_HaveNutFlush || f$OpenPPL_Have2ndNutFlush)] && f$OpenPPL_BetSize <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveTrips &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveTrips &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc270  &&  [ (f$OpenPPL_HaveSet &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveSet &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc270  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_BetSize <= 7) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc270  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc270  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_BetSize <= 40 * 0.01 * f$OpenPPL_StackSize || f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize]) ] ? f$OpenPPL_Call :
f$myfunc270  &&  [ (me_re_userheadsup && f$OpenPPL_HavePair && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Position = Last)
//
f$myfunc271  &&  [ (f$OpenPPL_HaveFullHouse && f$OpenPPL_FullHouseOnBoard) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveStraightFlush || f$OpenPPL_HaveFullHouse] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ ([f$OpenPPL_HaveQuads || f$OpenPPL_HaveNutFlush || f$OpenPPL_HaveStraightFlush || f$OpenPPL_HaveFullHouse] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc271  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_HaveFlush)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveNutStraight &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_HaveFlush)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc271  &&  [ (f$OpenPPL_HaveNutStraight && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_HaveFlush)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveNutStraight && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_HaveFlush)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_BetSize <= 40 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveStraight &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveFlush &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveNutFlush && [f$OpenPPL_OneCardFlushPossible || f$OpenPPL_OneCardStraightPossible] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveNutFlush && [f$OpenPPL_OneCardFlushPossible || f$OpenPPL_OneCardStraightPossible] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_Have2ndNutFlush && f$OpenPPL_OneCardFlushPossible && f$OpenPPL_CalledOnFlop && f$OpenPPL_CalledOnTurn && f$OpenPPL_BetSize <= 8) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Have2ndNutStraight && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Have2ndNutStraight &&  ![(f$OpenPPL_HaveFlush)]) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_Have2ndNutStraight) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveStraight && f$OpenPPL_OneCardStraightPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_Have2ndNutStraight)] &&  ![(f$OpenPPL_HaveFlush)] && f$OpenPPL_BetSize <= 8) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveFlush && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_HaveNutFlush || f$OpenPPL_Have2ndNutFlush)] && f$OpenPPL_BetSize <= 50 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveTrips &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveTrips && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1] && f$OpenPPL_AmountToCall <= 100 * 0.01 * f$OpenPPL_PotSize) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveTrips &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc271  &&  [ (f$OpenPPL_HaveSet &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_FlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveSet &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_RaiseMax :
f$myfunc271  &&  [ (f$OpenPPL_HaveSet && f$OpenPPL_OneCardFlushPossible &&  ![(f$OpenPPL_OneCardFlushPossible)] && f$OpenPPL_BetSize <= 7) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveTwoPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises == 1]) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveTopPair && [f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Raises >= 2) ] ? f$OpenPPL_Fold :
f$myfunc271  &&  [ (f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_HaveBestKicker || f$OpenPPL_Have2ndBestKicker)] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && f$OpenPPL_BetSize <= 20 * 0.01 * f$OpenPPL_StackSize) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ] ? 65 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_PairOnBoard)] && [f$OpenPPL_Bets == 1 || f$OpenPPL_Raises >= 1]) ] ? 85 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_HaveOverPair &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)] && [f$OpenPPL_BetSize <= 40 * 0.01 * f$OpenPPL_StackSize || f$OpenPPL_TotalInvested >= 100 * 0.01 * f$OpenPPL_StackSize]) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (me_re_userheadsup && f$OpenPPL_HavePair && f$OpenPPL_BetSize <= 3) ] ? f$OpenPPL_Call :
f$myfunc271  &&  [ (f$OpenPPL_Position == f$OpenPPL_Last && f$OpenPPL_NoBettingOnFlop && f$OpenPPL_NoBettingOnTurn && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 30 && f$OpenPPL_Opponents <= 2) ] ? 75 * f$RaiseByPercentagedPotsize :
f$myfunc271  &&  [ (f$OpenPPL_AmountToCall <= 13 * 0.01 * f$OpenPPL_PotSize && me_re_useropponentisallin && f$OpenPPL_HavePair && f$OpenPPL_Raises == 0) ] ? f$OpenPPL_Call :
//
// Starting open-ended when-condition
// (Others)
//
[ (f$OpenPPL_Raises >= 0) ] ? f$OpenPPL_Fold :
//
// When Others Fold Force
// Automatically added, just to be safe
//
f$OpenPPL_Fold 


//************************************************************************
//
// Resetting all User-Defined Variables.
//
// To be called at the very beginning of a hand.
//
//************************************************************************

##f$OpenPPL_ResetUserVariables##
0
+  me_st_user1callerpreflop_0
+  me_st_user1coldcalledpot_0
+  me_st_user1largestackleft_0
+  me_st_user1mid1largestackleft_0
+  me_st_user1midstackleft_0
+  me_st_user1small1largestackleft_0
+  me_st_user1small1midstackleft_0
+  me_st_user1smallstackleft_0
+  me_st_user2largestacksleft_0
+  me_st_user2midstacksleft_0
+  me_st_user2ndshortstackattable_0
+  me_st_user2oppstackssmallerthanbot_0
+  me_st_user2smallstacksleft_0
+  me_st_user3handed_0
+  me_st_user3oppstackssmallerthanbot_0
+  me_st_user4handed_0
+  me_st_user4oppstackssmallerthanbot_0
+  me_st_user5handed_0
+  me_st_user5oppstackssmallerthanbot_0
+  me_st_user6handed_0
+  me_st_user6oppstackssmallerthanbot_0
+  me_st_user7oppstackssmallerthanbot_0
+  me_st_useraggressorflop_0
+  me_st_useraggressorpreflop_0
+  me_st_useraggressorturn_0
+  me_st_useramounttocallgreaterthanorequalto50percpotflop_0
+  me_st_useramounttocallgreaterthanorequalto50percpotriver_0
+  me_st_useramounttocallgreaterthanorequalto50percpotturn_0
+  me_st_useramounttocalllessthanorequalto100percpotflop_0
+  me_st_useramounttocalllessthanorequalto100percpotriver_0
+  me_st_useramounttocalllessthanorequalto100percpotturn_0
+  me_st_useramounttocalllessthanorequalto25percpotflop_0
+  me_st_useramounttocalllessthanorequalto25percpotriver_0
+  me_st_useramounttocalllessthanorequalto25percpotturn_0
+  me_st_useramounttocalllessthanorequalto35percpotflop_0
+  me_st_useramounttocalllessthanorequalto35percpotriver_0
+  me_st_useramounttocalllessthanorequalto35percpotturn_0
+  me_st_useramounttocalllessthanorequalto50percpotflop_0
+  me_st_useramounttocalllessthanorequalto50percpotriver_0
+  me_st_useramounttocalllessthanorequalto50percpotturn_0
+  me_st_useramounttocalllessthanorequalto75percpotflop_0
+  me_st_useramounttocalllessthanorequalto75percpotriver_0
+  me_st_useramounttocalllessthanorequalto75percpotturn_0
+  me_st_useratc0flop_0
+  me_st_useratc0preflop_0
+  me_st_useratc0river_0
+  me_st_useratc0turn_0
+  me_st_useratc10preflop_0
+  me_st_useratc1flop_0
+  me_st_useratc1preflop_0
+  me_st_useratc1river_0
+  me_st_useratc1turn_0
+  me_st_useratc2flop_0
+  me_st_useratc2preflop_0
+  me_st_useratc2river_0
+  me_st_useratc2turn_0
+  me_st_useratc3flop_0
+  me_st_useratc3preflop_0
+  me_st_useratc3river_0
+  me_st_useratc3turn_0
+  me_st_useratc4flop_0
+  me_st_useratc4preflop_0
+  me_st_useratc4river_0
+  me_st_useratc4turn_0
+  me_st_useratc5preflop_0
+  me_st_useratc6preflop_0
+  me_st_useratc7preflop_0
+  me_st_useratc8preflop_0
+  me_st_useratc9preflop_0
+  me_st_useratcgreaterthan10preflop_0
+  me_st_useratcgreaterthanorequalto100percpot_0
+  me_st_useratcgreaterthanorequalto100percstack_0
+  me_st_useratcgreaterthanorequalto5flop_0
+  me_st_useratcgreaterthanorequalto5preflop_0
+  me_st_useratcgreaterthanorequalto5river_0
+  me_st_useratcgreaterthanorequalto5turn_0
+  me_st_useratcgreaterthanorequalto75percpot_0
+  me_st_useratcgreaterthanorequalto75percstack_0
+  me_st_useratclessthanorequalto20percpot_0
+  me_st_useratclessthanorequalto20percstack_0
+  me_st_useratclessthanorequalto30percpot_0
+  me_st_useratclessthanorequalto30percstack_0
+  me_st_useratclessthanorequalto40percpot_0
+  me_st_useratclessthanorequalto40percstack_0
+  me_st_useratclessthanorequalto50percpot_0
+  me_st_useratclessthanorequalto50percstack_0
+  me_st_useratclessthanorequalto75percpot_0
+  me_st_useratclessthanorequalto75percstack_0
+  me_st_userbetlessthan20xstack_0
+  me_st_userbigblindposition_0
+  me_st_userbigpocketpair_0
+  me_st_userboardflopnopaint_0
+  me_st_userboardrivernopaint_0
+  me_st_userboardturnnopaint_0
+  me_st_userbubble_0
+  me_st_userbubbleoppallinandcalled_0
+  me_st_userbubblesafetyfold_0
+  me_st_userbuttonposition_0
+  me_st_userchipleader_0
+  me_st_usercutoffposition_0
+  me_st_userdoubledupstack_0
+  me_st_userearlyposition_0
+  me_st_usereffectivestacksize1_0
+  me_st_usereffectivestacksize10_0
+  me_st_usereffectivestacksize11_0
+  me_st_usereffectivestacksize12_0
+  me_st_usereffectivestacksize13_0
+  me_st_usereffectivestacksize14_0
+  me_st_usereffectivestacksize15_0
+  me_st_usereffectivestacksize16_0
+  me_st_usereffectivestacksize17_0
+  me_st_usereffectivestacksize18_0
+  me_st_usereffectivestacksize19_0
+  me_st_usereffectivestacksize2_0
+  me_st_usereffectivestacksize20_0
+  me_st_usereffectivestacksize3_0
+  me_st_usereffectivestacksize4_0
+  me_st_usereffectivestacksize5_0
+  me_st_usereffectivestacksize6_0
+  me_st_usereffectivestacksize7_0
+  me_st_usereffectivestacksize8_0
+  me_st_usereffectivestacksize9_0
+  me_st_userevenstacks_0
+  me_st_userfloatedonflop_0
+  me_st_userflop1overcard_0
+  me_st_userflop2ndbestkicker_0
+  me_st_userflop2ndoverpair_0
+  me_st_userflop2ndtoppair_0
+  me_st_userflop2overcards_0
+  me_st_userflop3rdbestkicker_0
+  me_st_userflopbestkicker_0
+  me_st_userflopboardonlyonepossiblestraight_0
+  me_st_userflopboardpaired_0
+  me_st_userflopboardpossibleflush_0
+  me_st_userflopboardpossiblestraight_0
+  me_st_userflopboardtrips_0
+  me_st_userflopflush_0
+  me_st_userflopflushdraw_0
+  me_st_userflopfullhouse_0
+  me_st_userflopinsidestraightdraw_0
+  me_st_userflopnothing_0
+  me_st_userflopnutflush_0
+  me_st_userflopnutflushdraw_0
+  me_st_userflopnutinsidestraightdraw_0
+  me_st_userflopnuts_0
+  me_st_userflopnutstraight_0
+  me_st_userflopnutstraightdraw_0
+  me_st_userflopoverpair_0
+  me_st_userfloppair_0
+  me_st_userflopquads_0
+  me_st_userflopset_0
+  me_st_userflopstraight_0
+  me_st_userflopstraightdraw_0
+  me_st_userflopstraightflush_0
+  me_st_userfloptopnonboardpairedpair_0
+  me_st_userfloptoppair_0
+  me_st_userfloptoptwopair_0
+  me_st_userfloptrips_0
+  me_st_userfloptwopair_0
+  me_st_userflopunderstraight_0
+  me_st_usergameearly_0
+  me_st_usergamelate_0
+  me_st_usergamemiddle_0
+  me_st_usergoodcashposition_0
+  me_st_usergoodstacklatelvl_0
+  me_st_usergoodstackmidlvl_0
+  me_st_userheadsup_0
+  me_st_userhijackposition_0
+  me_st_useritm_0
+  me_st_userlastactionflopbet_0
+  me_st_userlastactionflopcall_0
+  me_st_userlastactionflopcheck_0
+  me_st_userlastactionflopnone_0
+  me_st_userlastactionflopraise_0
+  me_st_userlastactionpreflopcall_0
+  me_st_userlastactionpreflopnone_0
+  me_st_userlastactionpreflopraise_0
+  me_st_userlastactionriverbet_0
+  me_st_userlastactionrivercall_0
+  me_st_userlastactionrivercheck_0
+  me_st_userlastactionrivernone_0
+  me_st_userlastactionriverraise_0
+  me_st_userlastactionturnbet_0
+  me_st_userlastactionturncall_0
+  me_st_userlastactionturncheck_0
+  me_st_userlastactionturnnone_0
+  me_st_userlastactionturnraise_0
+  me_st_userlateposition_0
+  me_st_userlimpedpot_0
+  me_st_userlowstackmidlvl_0
+  me_st_usermaxlargestacktoblindratio_0
+  me_st_usermaxmidstacktoblindratio_0
+  me_st_usermaxsmallstacktoblindratio_0
+  me_st_usermaxstilltoactstackgreaterthan20_0
+  me_st_usermaxstilltoactstacklessthan10_0
+  me_st_usermaxstilltoactstacklessthan20_0
+  me_st_usermaxstilltoactstacklessthan5_0
+  me_st_usermiddlepocketpair_0
+  me_st_usermiddleposition_0
+  me_st_userminlargestacktoblindratio_0
+  me_st_userminmidstacktoblindratio_0
+  me_st_userminoppstacksize1_0
+  me_st_userminoppstacksize2_0
+  me_st_userminoppstacksize3_0
+  me_st_userminoppstacksize4_0
+  me_st_userminoppstacksize5_0
+  me_st_userminoppstacksize6_0
+  me_st_userminoppstacksize7_0
+  me_st_userminoppstacksize8_0
+  me_st_userminoppstacksize9_0
+  me_st_userminoppstacksizegreaterthanorequalto10_0
+  me_st_userminsmallstacktoblindratio_0
+  me_st_usermulticoldcalledpot_0
+  me_st_usermultiplecallerspreflop_0
+  me_st_usernobetsonflop_0
+  me_st_usernobetsonturn_0
+  me_st_usernonaggressorflop_0
+  me_st_usernonaggressorpreflop_0
+  me_st_usernonaggressorturn_0
+  me_st_usernoraisespreflop_0
+  me_st_usernormalbubble_0
+  me_st_usernormalflop_0
+  me_st_usernormalitm_0
+  me_st_usernormalriver_0
+  me_st_usernormalshortstackstrategy_0
+  me_st_usernormalturn_0
+  me_st_useronelessthanshortstack_0
+  me_st_useroppallin10bb_0
+  me_st_useroppallin11bb_0
+  me_st_useroppallin12bb_0
+  me_st_useroppallin1bb_0
+  me_st_useroppallin2bb_0
+  me_st_useroppallin3bb_0
+  me_st_useroppallin4bb_0
+  me_st_useroppallin5bb_0
+  me_st_useroppallin6bb_0
+  me_st_useroppallin7bb_0
+  me_st_useroppallin8bb_0
+  me_st_useroppallin9bb_0
+  me_st_useroppallingreaterthan12bb_0
+  me_st_useroppallingreaterthanorequalto100percstack_0
+  me_st_useroppallingreaterthanorequalto75percstack_0
+  me_st_useroppallinlessthanorequalto10percpot_0
+  me_st_useroppallinlessthanorequalto10percstack_0
+  me_st_useroppallinlessthanorequalto20percstack_0
+  me_st_useroppallinlessthanorequalto30percstack_0
+  me_st_useroppallinlessthanorequalto40percstack_0
+  me_st_useroppallinlessthanorequalto50percstack_0
+  me_st_useroppallinlessthanorequalto75percstack_0
+  me_st_useroppbbstackgreaterthanorequalto15xbotstacksize_0
+  me_st_useroppbbstackgreaterthanorequalto1xbotstacksize_0
+  me_st_useroppbbstackgreaterthanorequalto2xbotstacksize_0
+  me_st_useroppbbstackgreaterthanorequaltohalfbotstacksize_0
+  me_st_useroppbbstacklessthanhalfbotstacksize_0
+  me_st_useroppminraiseflop_0
+  me_st_useroppminraiseriver_0
+  me_st_useroppminraiseturn_0
+  me_st_useropponentisallin_0
+  me_st_useropponents0_0
+  me_st_useropponents1_0
+  me_st_useropponents2_0
+  me_st_useropponentsmultiway_0
+  me_st_useroppraise2bbflop_0
+  me_st_useroppraise2bbriver_0
+  me_st_useroppraise2bbturn_0
+  me_st_useroppraise3bbflop_0
+  me_st_useroppraise3bbriver_0
+  me_st_useroppraise3bbturn_0
+  me_st_useroppraise4bbflop_0
+  me_st_useroppraise4bbriver_0
+  me_st_useroppraise4bbturn_0
+  me_st_useroppraise5bbriver_0
+  me_st_useroppraise5bbturn_0
+  me_st_useroppraisegreaterthan5bbflop_0
+  me_st_useroppraiselessthanorequalto100percpotflop_0
+  me_st_useroppraiselessthanorequalto100percpotriver_0
+  me_st_useroppraiselessthanorequalto100percpotturn_0
+  me_st_useroppraiselessthanorequalto25percpotflop_0
+  me_st_useroppraiselessthanorequalto25percpotriver_0
+  me_st_useroppraiselessthanorequalto25percpotturn_0
+  me_st_useroppraiselessthanorequalto35percpotflop_0
+  me_st_useroppraiselessthanorequalto35percpotriver_0
+  me_st_useroppraiselessthanorequalto35percpotturn_0
+  me_st_useroppraiselessthanorequalto50percpotflop_0
+  me_st_useroppraiselessthanorequalto50percpotriver_0
+  me_st_useroppraiselessthanorequalto50percpotturn_0
+  me_st_useroppraiselessthanorequalto75percpotflop_0
+  me_st_useroppraiselessthanorequalto75percpotriver_0
+  me_st_useroppraiselessthanorequalto75percpotturn_0
+  me_st_useroppraiseoverraiseflop_0
+  me_st_useroppraiseoverraiseriver_0
+  me_st_useroppraiseoverraiseturn_0
+  me_st_userpotcommitted_0
+  me_st_userraisedpot_0
+  me_st_userraiserpositionbutton_0
+  me_st_userraiserpositioncutoff_0
+  me_st_userraiserpositionearly_0
+  me_st_userraiserpositionhijack_0
+  me_st_userraiserpositionmiddle_0
+  me_st_userraiserpositionsmallblind_0
+  me_st_userriver1overcard_0
+  me_st_userriver2ndbestkicker_0
+  me_st_userriver2ndoverpair_0
+  me_st_userriver2ndtoppair_0
+  me_st_userriver2overcards_0
+  me_st_userriver3rdbestkicker_0
+  me_st_userriverbestkicker_0
+  me_st_userriverboardflush_0
+  me_st_userriverboardfullhouse_0
+  me_st_userriverboardnextcardisovercard_0
+  me_st_userriverboardonecardpossibleflush_0
+  me_st_userriverboardonecardpossiblestraight_0
+  me_st_userriverboardonlyonecardpossiblestraight_0
+  me_st_userriverboardonlyonepossiblestraight_0
+  me_st_userriverboardpaired_0
+  me_st_userriverboardpossibleflush_0
+  me_st_userriverboardpossiblestraight_0
+  me_st_userriverboardquads_0
+  me_st_userriverboardstraight_0
+  me_st_userriverboardtrips_0
+  me_st_userriverboardtwopair_0
+  me_st_userriverflush_0
+  me_st_userriverflushdraw_0
+  me_st_userriverfullhouse_0
+  me_st_userriverinsidestraightdraw_0
+  me_st_userrivernothing_0
+  me_st_userrivernutflush_0
+  me_st_userrivernutflushdraw_0
+  me_st_userrivernutinsidestraightdraw_0
+  me_st_userrivernuts_0
+  me_st_userrivernutstraight_0
+  me_st_userrivernutstraightdraw_0
+  me_st_userriveroverpair_0
+  me_st_userriverpair_0
+  me_st_userriverquads_0
+  me_st_userriverset_0
+  me_st_userriverstraight_0
+  me_st_userriverstraightdraw_0
+  me_st_userriverstraightflush_0
+  me_st_userrivertopnonboardpairedpair_0
+  me_st_userrivertoppair_0
+  me_st_userrivertoptwopair_0
+  me_st_userrivertrips_0
+  me_st_userrivertwopair_0
+  me_st_userriverunderstraight_0
+  me_st_usersafepush_0
+  me_st_usershortstackattable_0
+  me_st_usershowingweaknessonriver_0
+  me_st_usershowingweaknessonturn_0
+  me_st_usersmallblindposition_0
+  me_st_usersmallpocketpair_0
+  me_st_userstacksize0_0
+  me_st_userstacksize1_0
+  me_st_userstacksize10_0
+  me_st_userstacksize11_0
+  me_st_userstacksize12_0
+  me_st_userstacksize13_0
+  me_st_userstacksize14_0
+  me_st_userstacksize15_0
+  me_st_userstacksize16_0
+  me_st_userstacksize17_0
+  me_st_userstacksize18_0
+  me_st_userstacksize19_0
+  me_st_userstacksize2_0
+  me_st_userstacksize20orgreater_0
+  me_st_userstacksize3_0
+  me_st_userstacksize30orgreater_0
+  me_st_userstacksize4_0
+  me_st_userstacksize40orgreater_0
+  me_st_userstacksize5_0
+  me_st_userstacksize50orgreater_0
+  me_st_userstacksize6_0
+  me_st_userstacksize7_0
+  me_st_userstacksize8_0
+  me_st_userstacksize9_0
+  me_st_usertightpreflop_0
+  me_st_usertotalinvestedhalfofstackflop_0
+  me_st_usertotalinvestedhalfofstackriver_0
+  me_st_usertotalinvestedhalfofstackturn_0
+  me_st_usertotalinvestedtwothirdsofstackflop_0
+  me_st_usertotalinvestedtwothirdsofstackriver_0
+  me_st_usertotalinvestedtwothirdsofstackturn_0
+  me_st_userturn1overcard_0
+  me_st_userturn2ndbestkicker_0
+  me_st_userturn2ndoverpair_0
+  me_st_userturn2ndtoppair_0
+  me_st_userturn2overcards_0
+  me_st_userturn3rdbestkicker_0
+  me_st_userturnbestkicker_0
+  me_st_userturnboardnextcardisovercard_0
+  me_st_userturnboardonecardpossibleflush_0
+  me_st_userturnboardonecardpossiblestraight_0
+  me_st_userturnboardonlyonecardpossiblestraight_0
+  me_st_userturnboardonlyonepossiblestraight_0
+  me_st_userturnboardpaired_0
+  me_st_userturnboardpossibleflush_0
+  me_st_userturnboardpossiblestraight_0
+  me_st_userturnboardquads_0
+  me_st_userturnboardtrips_0
+  me_st_userturnboardtwopair_0
+  me_st_userturnflush_0
+  me_st_userturnflushdraw_0
+  me_st_userturnfullhouse_0
+  me_st_userturninsidestraightdraw_0
+  me_st_userturnnothing_0
+  me_st_userturnnutflush_0
+  me_st_userturnnutflushdraw_0
+  me_st_userturnnutinsidestraightdraw_0
+  me_st_userturnnuts_0
+  me_st_userturnnutstraight_0
+  me_st_userturnnutstraightdraw_0
+  me_st_userturnoverpair_0
+  me_st_userturnpair_0
+  me_st_userturnquads_0
+  me_st_userturnset_0
+  me_st_userturnstraight_0
+  me_st_userturnstraightdraw_0
+  me_st_userturnstraightflush_0
+  me_st_userturntopnonboardpairedpair_0
+  me_st_userturntoppair_0
+  me_st_userturntoptwopair_0
+  me_st_userturntrips_0
+  me_st_userturntwopair_0
+  me_st_userturnunderstraight_0
+  me_st_userunopenedpot_0
+  me_st_userversion110_0
+  me_st_userwebturbosng_0


//*****************************************************************************
//
// OpenPPL Library
//   Supporting functions for the OpenPPL converter
//
// OpenPPL is part of the OpenHoldem project
//   Download page:         http://code.google.com/p/openholdembot/
//   Forums:                http://www.maxinmontreal.com/forums/index.php
//   Licensed under GPL v3: http://www.gnu.org/licenses/gpl.html
//
// The original PPL (Poker Programming Language) got invented by
//   Shanky Bonusbots:      http://bonusbots.com/support/index.php
//
// Required OpenHoldem version: 2.2.0 or later
//   Symbols not working with 2.1.x:
//     * isfinaltable
//
// Contributors:
//   Bob3456
//   CoolBotMe123
//   CrumbleSunday
//   Dr.Kaktuz
//   Efu
//   Fn101
//   Gecko
//   JConner
//   JokeDoke
//   KaeKruse
//   Kyo
//   Lavezzi
//   MerzkiyTipon
//   Morello
//   MrRuder
//   Nik0
//   NPNG
//   Poker_Dog
//   Postenjak
//   Rambam
//   Satanikut
//   Stangelnator
//   SteveG1963
//   Strikles
//   SuperBlak
//   TheHighFish
//   ThemAndMe
//   Want2Learn
//   Zolp
//
//*****************************************************************************

//*****************************************************************************
//
//  Predefined action constants
//  ===========================
//
//  Positive values mean:  betsizes (in big-blinds)
//  Small negative values: percentaged potsized bets
//  Large negative values: action constants
//
//  Note: Beep is not supported.
//
//*****************************************************************************

##f$OpenPPL_Fold##
-1000000

##f$OpenPPL_Check##
-1000001

##f$OpenPPL_Undefined_BetSize_Probably_Due_To_Misscraped_Pot_Defaulting_To_Minraise##
-1000002

##f$OpenPPL_RaiseMin##
f$OpenPPL_Raise

##f$OpenPPL_RaiseHalfPot##
-1000003

##f$OpenPPL_RaisePot##
-1000004

##f$OpenPPL_RaiseMax##
-1000005

##f$OpenPPL_Call##
-1000006

##f$OpenPPL_Play##
f$OpenPPL_Call

##f$OpenPPL_Bet##
f$OpenPPL_Raise

##f$OpenPPL_BetMin##
f$OpenPPL_Bet

##f$OpenPPL_BetHalfPot##
f$OpenPPL_RaiseHalfPot

##f$OpenPPL_BetPot##
f$OpenPPL_RaisePot

##f$OpenPPL_BetMax##
f$OpenPPL_RaiseMax

##f$OpenPPL_Allin##
f$OpenPPL_RaiseMax

##f$OpenPPL_None##
-1000007

##f$OpenPPL_SitOut##
-1000008

##f$OpenPPL_Raise##
-1000009

##f$OpenPPL_UndefinedReturnValue##
// Every user-defined function ends with this return-value
// mainly to ensure syntactical correctness
// and to avoid undefined return values.
// OpenHoldem would return 0, when a return-value was not specified,
// but this might be meaningful in most contexts.
//
// To always be on the save site we use...
// f$OpenPPL_UndefinedReturnValue = f$OpenPPL_Fold = -1
f$OpenPPL_Fold

//*****************************************************************************
//
//  OpenPPL - Card Constants
//  ===========================
//  
//  Both ranks and suits accordint to the OpenHoldem docu
//
//*****************************************************************************

##f$OpenPPL_ConstCardAce##
14

##f$OpenPPL_ConstCardKing##
13

##f$OpenPPL_ConstCardQueen##
12

##f$OpenPPL_ConstCardJack##
11

##f$OpenPPL_ConstCardTen##
10

##f$OpenPPL_ConstCardNine##
9

##f$OpenPPL_ConstCardEight##
8

##f$OpenPPL_ConstCardSeven##
7

##f$OpenPPL_ConstCardSix##
6

##f$OpenPPL_ConstCardFive##
5

##f$OpenPPL_ConstCardFour##
4

##f$OpenPPL_ConstCardThree##
3

##f$OpenPPL_ConstCardTwo##
2

##f$OpenPPL_ConstSuitClubs##
1

##f$OpenPPL_ConstSuitDiamonds##
2

##f$OpenPPL_ConstSuitHearts##
3

##f$OpenPPL_ConstSuitSpades##
4

//*****************************************************************************
//
// OpenPPL - Betting Round Constants
//
//*****************************************************************************

##f$OpenPPL_ConstBetRoundPreflop##
1

##f$OpenPPL_ConstBetRoundFlop##
2

##f$OpenPPL_ConstBetRoundTurn##
3

##f$OpenPPL_ConstBetRoundRiver##
4

//*****************************************************************************
//
// OpenPPL - Other Constants
//
//*****************************************************************************

##f$OpenPPL_True##
1

##f$OpenPPL_False##
0

//*****************************************************************************
//
// OpenPPL - verbose errors and warning
//
// Instead of returning just -1 we define constants like
// "f$OpenPPL_HINT_EarlyPosition1_Does_Not_Exist"
// This way we get a verbose explanation in the log-file.
//
//*****************************************************************************

##f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY##
-1

##f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_Raises_Is_Negative__Trying_To_Adapt_In_A_Reasonable_Way##
0

##f$OpenPPL_ERROR_Suit_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap##
// Treating this error as PLUS 1 to not mix the primecoding of board-cards up.
 1
 

##f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap##
// Treating this error as PLUS 1 to not mix the primecoding of board-cards up.
 1

##f$OpenPPL_ERROR_Betround_Out_Of_Range##
-1

##f$OpenPPL_ERROR_BotsActionsOnThisRound_Out_Of_Range##
-1

##f$OpenPPL_ERROR_ButtonChair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_CutOffChair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_MiddlePosition3Chair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_MiddlePosition2Chair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_MiddlePosition1Chair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_EarlyPosition3Chair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_EarlyPosition2Chair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_EarlyPosition1Chair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_BigBlindChair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_SmallBlindChair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_DealPosition1Chair_Not_Recognized__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_We_Dont_Have_Any_Straight__No_Not_Call_This_Function##
-1

##f$OpenPPL_ERROR_Dealposition_Out_Of_Range__Check_Your_TableMap##
-1

##f$OpenPPL_ERROR_We_Dont_Have_Any_Straight__Do_Not_Call_This_Function##
-1

##f$OpenPPL_ERROR_No_Opponents_Detected__Check_Your_TableMap##
// Returning -bblind, because we divide by bblind to -1.
(0 - bblind)

##f$OpenPPL_HINT_We_Dont_Have_A_FullHouse_At_All##
// Docu says: this case is 0; and this special case needs extra care.
// However returning a high number instead of 0 seems better to uz,
// as it indicates the weakness and avoids any pitfalls.
999

##f$OpenPPL_HINT_There_Are_No_True_Raisers##
-1

##f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist##
-1

##f$OpenPPL_HINT_Something_Is_Wrong__It_Seems_You_Are_Not_Even_Seated##
-1

##f$OpenPPL_HINT_EarlyPosition1_Does_Not_Exist##
-1

##f$OpenPPL_HINT_EarlyPosition2_Does_Not_Exist##
-1

##f$OpenPPL_HINT_EarlyPosition3_Does_Not_Exist##
-1

##f$OpenPPL_HINT_MiddlePosition1_Does_Not_Exist##
-1

##f$OpenPPL_HINT_MiddlePosition2_Does_Not_Exist##
-1

##f$OpenPPL_HINT_MiddlePosition3_Does_Not_Exist##
-1

##f$OpenPPL_HINT_CutOff_Does_Not_Exist##
-1

##f$OpenPPL_HINT_There_Is_No_SmallNlind_In_This_Game##
-1 

##f$OpenPPL_HINT_There_Is_No_Raiser_Therefore_No_CurrentBet##
0

##f$OpenPPL_HINT_There_Is_No_Pair_On_The_Board##
-1

##f$OpenPPL_HINT_Nothing_To_Do_But_All_OK##
0

##f$OpenPPL_HINT_SuitsOnBoard_Undefined_For_This_Betting_Round##
0

##f$OpenPPL_HINT_StillToAct_Is_Only_Valid_On_First_Orbit##
0

##f$OpenPPL_HINT_There_Are_No_Common_Cards_Preflop##
// To use this function together with prime-coded board ranks
// a division has to be possible. 1 doesn't interfer with any cards (primes).
1

//*****************************************************************************
//
// OpenPPL - Verbosity
//
// Some OpenHoldem-symbols are awfully illnamed,
// thanks to Ray E. Bornert who invented WinHoldem.
// rais, swag, $$pr0, etc.
// We provide meaningful names here to make this library more readable.
//
//*****************************************************************************

##f$OpenPPL_RankOfFirstHoleCard##
$$pr0

##f$OpenPPL_RankOfSecondHoleCard##
$$pr1

##f$OpenPPL_FirstFlopCard##
$$cr0

##f$OpenPPL_SecondFlopCard##
$$cr1

##f$OpenPPL_ThirdFlopCard##
$$cr2

##f$OpenPPL_TurnCard##
$$cr3

##f$OpenPPL_RiverCard##
$$cr4

//*****************************************************************************
//                                                                 
//  Prime-coded board ranks                                        
//  =======================                                        
//                                                                 
//  "Board = XYZ"-expressions are difficult to translate           
//  to OH-script.                                                  
//  Cards may appear more than once, e.g. 'board = ATT',	        
//  therefore we can't work with rankbits here,  	                
//  but do some prime-coding, so that we can easily check for      
//  multiple cards.                                                
//                                                                 
//  Card:      2   3   4   5   6   7   8   9   T   J   Q   K   A   
//  Coding:    2   3   5   7  11  13  17  19  23  29  31  37  41   
//                                                                 
//  Example: prime-coding for ATT = 41 * 23 * 23 = 21689           
//  Therefore a board contains ATT, exactly if its prime-coding    
//  can be divided by 21689 without a reminder.                    
//
// Note: this code gets generated by the converter and looks like:
//   ((f$prime_coded_board_ranks % (1 * f$PrimeCode_A * f$PrimeCode_K) == 0))
//                                                                 
//*****************************************************************

##f$prime_coded_board_ranks_first_flop_card##
  [($$cr0 ==  2) ? f$PrimeCode_2 : ($$cr0 ==  3) ? f$PrimeCode_3 : 
   ($$cr0 ==  4) ? f$PrimeCode_4 : ($$cr0 ==  5) ? f$PrimeCode_5 : 
   ($$cr0 ==  6) ? f$PrimeCode_6 : ($$cr0 ==  7) ? f$PrimeCode_7 : 
   ($$cr0 ==  8) ? f$PrimeCode_8 : ($$cr0 ==  9) ? f$PrimeCode_9 : 
   ($$cr0 == 10) ? f$PrimeCode_T : ($$cr0 == 11) ? f$PrimeCode_J : 
   ($$cr0 == 12) ? f$PrimeCode_Q : ($$cr0 == 13) ? f$PrimeCode_K : 
   ($$cr0 == 14) ? f$PrimeCode_A : 
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] 
   

##f$prime_coded_board_ranks_second_flop_card##
  [($$cr1 ==  2) ? f$PrimeCode_2 : ($$cr1 ==  3) ? f$PrimeCode_3 : 
   ($$cr1 ==  4) ? f$PrimeCode_4 : ($$cr1 ==  5) ? f$PrimeCode_5 : 
   ($$cr1 ==  6) ? f$PrimeCode_6 : ($$cr1 ==  7) ? f$PrimeCode_7 : 
   ($$cr1 ==  8) ? f$PrimeCode_8 : ($$cr1 ==  9) ? f$PrimeCode_9 : 
   ($$cr1 == 10) ? f$PrimeCode_T : ($$cr1 == 11) ? f$PrimeCode_J : 
   ($$cr1 == 12) ? f$PrimeCode_Q : ($$cr1 == 13) ? f$PrimeCode_K : 
   ($$cr1 == 14) ? f$PrimeCode_A : 
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] 
   

##f$prime_coded_board_ranks_third_flop_card##
  [($$cr2 ==  2) ? f$PrimeCode_2 : ($$cr2 ==  3) ? f$PrimeCode_3 : 
   ($$cr2 ==  4) ? f$PrimeCode_4 : ($$cr2 ==  5) ? f$PrimeCode_5 : 
   ($$cr2 ==  6) ? f$PrimeCode_6 : ($$cr2 ==  7) ? f$PrimeCode_7 : 
   ($$cr2 ==  8) ? f$PrimeCode_8 : ($$cr2 ==  9) ? f$PrimeCode_9 : 
   ($$cr2 == 10) ? f$PrimeCode_T : ($$cr2 == 11) ? f$PrimeCode_J : 
   ($$cr2 == 12) ? f$PrimeCode_Q : ($$cr2 == 13) ? f$PrimeCode_K : 
   ($$cr2 == 14) ? f$PrimeCode_A : 
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] 
   

##f$prime_coded_board_ranks_turn_card##
  [($$cr3 ==  2) ? f$PrimeCode_2 : ($$cr3 ==  3) ? f$PrimeCode_3 : 
   ($$cr3 ==  4) ? f$PrimeCode_4 : ($$cr3 ==  5) ? f$PrimeCode_5 : 
   ($$cr3 ==  6) ? f$PrimeCode_6 : ($$cr3 ==  7) ? f$PrimeCode_7 : 
   ($$cr3 ==  8) ? f$PrimeCode_8 : ($$cr3 ==  9) ? f$PrimeCode_9 : 
   ($$cr3 == 10) ? f$PrimeCode_T : ($$cr3 == 11) ? f$PrimeCode_J : 
   ($$cr3 == 12) ? f$PrimeCode_Q : ($$cr3 == 13) ? f$PrimeCode_K : 
   ($$cr3 == 14) ? f$PrimeCode_A : 
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] 
   

##f$prime_coded_board_ranks_river_card##
  [($$cr4 ==  2) ? f$PrimeCode_2 : ($$cr4 ==  3) ? f$PrimeCode_3 : 
   ($$cr4 ==  4) ? f$PrimeCode_4 : ($$cr4 ==  5) ? f$PrimeCode_5 : 
   ($$cr4 ==  6) ? f$PrimeCode_6 : ($$cr4 ==  7) ? f$PrimeCode_7 : 
   ($$cr4 ==  8) ? f$PrimeCode_8 : ($$cr4 ==  9) ? f$PrimeCode_9 : 
   ($$cr4 == 10) ? f$PrimeCode_T : ($$cr4 == 11) ? f$PrimeCode_J : 
   ($$cr4 == 12) ? f$PrimeCode_Q : ($$cr4 == 13) ? f$PrimeCode_K : 
   ($$cr4 == 14) ? f$PrimeCode_A : 
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] 

##f$prime_coded_board_ranks##
[betround == f$OpenPPL_ConstBetRoundPreflop] ? f$OpenPPL_HINT_There_Are_No_Common_Cards_Preflop :
[betround == f$OpenPPL_ConstBetRoundFlop] ?
  (f$prime_coded_board_ranks_first_flop_card 
    * f$prime_coded_board_ranks_second_flop_card
    * f$prime_coded_board_ranks_third_flop_card) :
[betround == f$OpenPPL_ConstBetRoundTurn] ?
  (f$prime_coded_board_ranks_first_flop_card 
    * f$prime_coded_board_ranks_second_flop_card
    * f$prime_coded_board_ranks_third_flop_card 
	* f$prime_coded_board_ranks_turn_card) :
[betround == f$OpenPPL_ConstBetRoundRiver] ?
  (f$prime_coded_board_ranks_first_flop_card 
    * f$prime_coded_board_ranks_second_flop_card
    * f$prime_coded_board_ranks_third_flop_card 
	* f$prime_coded_board_ranks_turn_card
	* f$prime_coded_board_ranks_river_card) :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY
	

##f$PrimeCode_2##
  2

##f$PrimeCode_3##
  3

##f$PrimeCode_4##
  5

##f$PrimeCode_5##
  7

##f$PrimeCode_6##
  11

##f$PrimeCode_7##
  13

##f$PrimeCode_8##
  17

##f$PrimeCode_9##
  19

##f$PrimeCode_T##
  23

##f$PrimeCode_J##
  29

##f$PrimeCode_Q##
  31

##f$PrimeCode_K##
  37

##f$PrimeCode_A##
  41
  
//*****************************************************************************
//                                                                 
//  Prime-coded hole-cards
//  ======================                                        
//    
//  Similar to prime-coded board-ranks.
//  With OH we can't check for specific suits like AhKd easiliy.
//  We have to check 2 ranks * 2 suits * 2 permuations explicitly.
//  As this is really awfule and generates long and unreadable code
//  we also use the prome-coding technique here.
//             
//*****************************************************************************
//
//  Prime numbers: http://www.miniwebtool.com/list-of-prime-numbers/?to=1000
//
//  2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 
//  71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 
//  151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 
//  233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293
//
//*****************************************************************************

##f$prime_coded_hole_cards##
[f$prime_code_first_hole_card * f$prime_code_second_hole_card]

##f$prime_code_first_hole_card##
[
($$ps0 == f$OpenPPL_ConstSuitClubs)   ?
  [$$pr0 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2c :
   $$pr0 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3c :
   $$pr0 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4c :
   $$pr0 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5c :
   $$pr0 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6c :
   $$pr0 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7c :
   $$pr0 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8c :
   $$pr0 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9c :
   $$pr0 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Tc :
   $$pr0 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jc :
   $$pr0 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qc :
   $$pr0 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kc :
   $$pr0 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ac :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
($$ps0 == f$OpenPPL_ConstSuitDiamonds) ?
  [$$pr0 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2d :
   $$pr0 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3d :
   $$pr0 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4d :
   $$pr0 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5d :
   $$pr0 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6d :
   $$pr0 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7d :
   $$pr0 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8d :
   $$pr0 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9d :
   $$pr0 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Td :
   $$pr0 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jd :
   $$pr0 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qd :
   $$pr0 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kd :
   $$pr0 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ad :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$ps0 == f$OpenPPL_ConstSuitHearts)  ?
  [$$pr0 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2h :
   $$pr0 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3h :
   $$pr0 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4h :
   $$pr0 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5h :
   $$pr0 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6h :
   $$pr0 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7h :
   $$pr0 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8h :
   $$pr0 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9h :
   $$pr0 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Th :
   $$pr0 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jh :
   $$pr0 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qh :
   $$pr0 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kh :
   $$pr0 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ah :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$ps0 == f$OpenPPL_ConstSuitSpades)  ?
  [$$pr0 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2s :
   $$pr0 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3s :
   $$pr0 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4s :
   $$pr0 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5s :
   $$pr0 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6s :
   $$pr0 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7s :
   $$pr0 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8s :
   $$pr0 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9s :
   $$pr0 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Ts :
   $$pr0 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Js :
   $$pr0 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qs :
   $$pr0 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Ks :
   $$pr0 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_As :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
f$OpenPPL_ERROR_Suit_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap     
] 
 

##f$prime_code_second_hole_card##
[
($$ps1 == f$OpenPPL_ConstSuitClubs)   ?
  [$$pr1 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2c :
   $$pr1 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3c :
   $$pr1 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4c :
   $$pr1 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5c :
   $$pr1 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6c :
   $$pr1 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7c :
   $$pr1 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8c :
   $$pr1 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9c :
   $$pr1 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Tc :
   $$pr1 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jc :
   $$pr1 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qc :
   $$pr1 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kc :
   $$pr1 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ac :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
($$ps1 == f$OpenPPL_ConstSuitDiamonds) ?
  [$$pr1 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2d :
   $$pr1 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3d :
   $$pr1 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4d :
   $$pr1 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5d :
   $$pr1 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6d :
   $$pr1 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7d :
   $$pr1 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8d :
   $$pr1 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9d :
   $$pr1 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Td :
   $$pr1 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jd :
   $$pr1 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qd :
   $$pr1 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kd :
   $$pr1 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ad :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$ps1 == f$OpenPPL_ConstSuitHearts)  ?
  [$$pr1 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2h :
   $$pr1 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3h :
   $$pr1 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4h :
   $$pr1 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5h :
   $$pr1 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6h :
   $$pr1 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7h :
   $$pr1 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8h :
   $$pr1 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9h :
   $$pr1 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Th :
   $$pr1 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jh :
   $$pr1 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qh :
   $$pr1 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kh :
   $$pr1 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ah :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$ps1 == f$OpenPPL_ConstSuitSpades)  ?
  [$$pr1 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2s :
   $$pr1 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3s :
   $$pr1 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4s :
   $$pr1 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5s :
   $$pr1 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6s :
   $$pr1 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7s :
   $$pr1 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8s :
   $$pr1 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9s :
   $$pr1 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Ts :
   $$pr1 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Js :
   $$pr1 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qs :
   $$pr1 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Ks :
   $$pr1 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_As :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
f$OpenPPL_ERROR_Suit_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap   
]

//
// Clubs
//

##f$PrimeCode_2c##
  2

##f$PrimeCode_3c##
  3

##f$PrimeCode_4c##
  5

##f$PrimeCode_5c##
  7

##f$PrimeCode_6c##
  11

##f$PrimeCode_7c##
  13

##f$PrimeCode_8c##
  17

##f$PrimeCode_9c##
  19

##f$PrimeCode_Tc##
  23

##f$PrimeCode_Jc##
  29

##f$PrimeCode_Qc##
  31

##f$PrimeCode_Kc##
  37

##f$PrimeCode_Ac##
  41

//
// Diamonds
//  

##f$PrimeCode_2d##
  43

##f$PrimeCode_3d##
  47

##f$PrimeCode_4d##
  53

##f$PrimeCode_5d##
  59

##f$PrimeCode_6d##
  61

##f$PrimeCode_7d##
  67

##f$PrimeCode_8d##
  71

##f$PrimeCode_9d##
  73

##f$PrimeCode_Td##
  79

##f$PrimeCode_Jd##
  83

##f$PrimeCode_Qd##
  89

##f$PrimeCode_Kd##
  97

##f$PrimeCode_Ad##
  101

//
// Spades  
//

##f$PrimeCode_2h##
  103

##f$PrimeCode_3h##
  107

##f$PrimeCode_4h##
  109

##f$PrimeCode_5h##
  113

##f$PrimeCode_6h##
  127

##f$PrimeCode_7h##
  131

##f$PrimeCode_8h##
  137

##f$PrimeCode_9h##
  139

##f$PrimeCode_Th##
  149

##f$PrimeCode_Jh##
  151

##f$PrimeCode_Qh##
  157
  

##f$PrimeCode_Kh##
  163

##f$PrimeCode_Ah##
  167

//  
// Spades
//  

##f$PrimeCode_2s##
  173

##f$PrimeCode_3s##
  179

##f$PrimeCode_4s##
  181

##f$PrimeCode_5s##
  191

##f$PrimeCode_6s##
  193

##f$PrimeCode_7s##
  197

##f$PrimeCode_8s##
  199

##f$PrimeCode_9s##
  211

##f$PrimeCode_Ts##
  223

##f$PrimeCode_Js##
  227

##f$PrimeCode_Qs##
  229

##f$PrimeCode_Ks##
  233

##f$PrimeCode_As##
  239
  
//*****************************************************************************
//                                                                 
//  Prime-coded board ranks                                        
//  =======================   
//  For expressions like "board = AsTh".
//
//*****************************************************************************

##f$prime_coded_board_cards##
[ f$prime_code_first_board_card
* f$prime_code_second_board_card
* f$prime_code_third_board_card
* f$prime_code_fourth_board_card
* f$prime_code_fifth_board_card ]

##f$prime_code_first_board_card##
[
($$cs0 == f$OpenPPL_ConstSuitClubs)   ?
  [$$cr0 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2c :
   $$cr0 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3c :
   $$cr0 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4c :
   $$cr0 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5c :
   $$cr0 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6c :
   $$cr0 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7c :
   $$cr0 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8c :
   $$cr0 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9c :
   $$cr0 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Tc :
   $$cr0 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jc :
   $$cr0 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qc :
   $$cr0 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kc :
   $$cr0 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ac :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
($$cs0 == f$OpenPPL_ConstSuitDiamonds) ?
  [$$cr0 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2d :
   $$cr0 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3d :
   $$cr0 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4d :
   $$cr0 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5d :
   $$cr0 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6d :
   $$cr0 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7d :
   $$cr0 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8d :
   $$cr0 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9d :
   $$cr0 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Td :
   $$cr0 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jd :
   $$cr0 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qd :
   $$cr0 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kd :
   $$cr0 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ad :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs0 == f$OpenPPL_ConstSuitHearts)  ?
  [$$cr0 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2h :
   $$cr0 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3h :
   $$cr0 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4h :
   $$cr0 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5h :
   $$cr0 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6h :
   $$cr0 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7h :
   $$cr0 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8h :
   $$cr0 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9h :
   $$cr0 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Th :
   $$cr0 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jh :
   $$cr0 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qh :
   $$cr0 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kh :
   $$cr0 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ah :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs0 == f$OpenPPL_ConstSuitSpades)  ?
  [$$cr0 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2s :
   $$cr0 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3s :
   $$cr0 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4s :
   $$cr0 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5s :
   $$cr0 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6s :
   $$cr0 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7s :
   $$cr0 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8s :
   $$cr0 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9s :
   $$cr0 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Ts :
   $$cr0 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Js :
   $$cr0 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qs :
   $$cr0 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Ks :
   $$cr0 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_As :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
f$OpenPPL_ERROR_Suit_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap     
]

##f$prime_code_second_board_card##
[
($$cs1 == f$OpenPPL_ConstSuitClubs)   ?
  [$$cr1 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2c :
   $$cr1 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3c :
   $$cr1 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4c :
   $$cr1 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5c :
   $$cr1 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6c :
   $$cr1 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7c :
   $$cr1 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8c :
   $$cr1 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9c :
   $$cr1 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Tc :
   $$cr1 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jc :
   $$cr1 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qc :
   $$cr1 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kc :
   $$cr1 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ac :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
($$cs1 == f$OpenPPL_ConstSuitDiamonds) ?
  [$$cr1 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2d :
   $$cr1 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3d :
   $$cr1 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4d :
   $$cr1 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5d :
   $$cr1 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6d :
   $$cr1 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7d :
   $$cr1 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8d :
   $$cr1 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9d :
   $$cr1 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Td :
   $$cr1 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jd :
   $$cr1 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qd :
   $$cr1 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kd :
   $$cr1 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ad :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs1 == f$OpenPPL_ConstSuitHearts)  ?
  [$$cr1 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2h :
   $$cr1 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3h :
   $$cr1 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4h :
   $$cr1 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5h :
   $$cr1 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6h :
   $$cr1 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7h :
   $$cr1 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8h :
   $$cr1 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9h :
   $$cr1 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Th :
   $$cr1 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jh :
   $$cr1 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qh :
   $$cr1 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kh :
   $$cr1 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ah :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs1 == f$OpenPPL_ConstSuitSpades)  ?
  [$$cr1 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2s :
   $$cr1 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3s :
   $$cr1 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4s :
   $$cr1 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5s :
   $$cr1 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6s :
   $$cr1 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7s :
   $$cr1 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8s :
   $$cr1 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9s :
   $$cr1 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Ts :
   $$cr1 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Js :
   $$cr1 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qs :
   $$cr1 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Ks :
   $$cr1 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_As :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
f$OpenPPL_ERROR_Suit_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap     
]

##f$prime_code_third_board_card##
[
($$cs2 == f$OpenPPL_ConstSuitClubs)   ?
  [$$cr2 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2c :
   $$cr2 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3c :
   $$cr2 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4c :
   $$cr2 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5c :
   $$cr2 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6c :
   $$cr2 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7c :
   $$cr2 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8c :
   $$cr2 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9c :
   $$cr2 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Tc :
   $$cr2 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jc :
   $$cr2 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qc :
   $$cr2 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kc :
   $$cr2 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ac :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
($$cs2 == f$OpenPPL_ConstSuitDiamonds) ?
  [$$cr2 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2d :
   $$cr2 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3d :
   $$cr2 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4d :
   $$cr2 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5d :
   $$cr2 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6d :
   $$cr2 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7d :
   $$cr2 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8d :
   $$cr2 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9d :
   $$cr2 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Td :
   $$cr2 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jd :
   $$cr2 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qd :
   $$cr2 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kd :
   $$cr2 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ad :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs2 == f$OpenPPL_ConstSuitHearts)  ?
  [$$cr2 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2h :
   $$cr2 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3h :
   $$cr2 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4h :
   $$cr2 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5h :
   $$cr2 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6h :
   $$cr2 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7h :
   $$cr2 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8h :
   $$cr2 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9h :
   $$cr2 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Th :
   $$cr2 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jh :
   $$cr2 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qh :
   $$cr2 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kh :
   $$cr2 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ah :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs2 == f$OpenPPL_ConstSuitSpades)  ?
  [$$cr2 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2s :
   $$cr2 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3s :
   $$cr2 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4s :
   $$cr2 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5s :
   $$cr2 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6s :
   $$cr2 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7s :
   $$cr2 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8s :
   $$cr2 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9s :
   $$cr2 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Ts :
   $$cr2 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Js :
   $$cr2 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qs :
   $$cr2 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Ks :
   $$cr2 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_As :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
f$OpenPPL_ERROR_Suit_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap     
]  

##f$prime_code_fourth_board_card##
[
($$cs3 == f$OpenPPL_ConstSuitClubs)   ?
  [$$cr3 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2c :
   $$cr3 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3c :
   $$cr3 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4c :
   $$cr3 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5c :
   $$cr3 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6c :
   $$cr3 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7c :
   $$cr3 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8c :
   $$cr3 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9c :
   $$cr3 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Tc :
   $$cr3 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jc :
   $$cr3 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qc :
   $$cr3 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kc :
   $$cr3 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ac :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
($$cs3 == f$OpenPPL_ConstSuitDiamonds) ?
  [$$cr3 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2d :
   $$cr3 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3d :
   $$cr3 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4d :
   $$cr3 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5d :
   $$cr3 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6d :
   $$cr3 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7d :
   $$cr3 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8d :
   $$cr3 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9d :
   $$cr3 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Td :
   $$cr3 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jd :
   $$cr3 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qd :
   $$cr3 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kd :
   $$cr3 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ad :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs3 == f$OpenPPL_ConstSuitHearts)  ?
  [$$cr3 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2h :
   $$cr3 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3h :
   $$cr3 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4h :
   $$cr3 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5h :
   $$cr3 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6h :
   $$cr3 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7h :
   $$cr3 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8h :
   $$cr3 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9h :
   $$cr3 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Th :
   $$cr3 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jh :
   $$cr3 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qh :
   $$cr3 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kh :
   $$cr3 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ah :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs3 == f$OpenPPL_ConstSuitSpades)  ?
  [$$cr3 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2s :
   $$cr3 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3s :
   $$cr3 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4s :
   $$cr3 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5s :
   $$cr3 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6s :
   $$cr3 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7s :
   $$cr3 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8s :
   $$cr3 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9s :
   $$cr3 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Ts :
   $$cr3 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Js :
   $$cr3 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qs :
   $$cr3 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Ks :
   $$cr3 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_As :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
f$OpenPPL_ERROR_Suit_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap     
]

##f$prime_code_fifth_board_card##
[
($$cs4 == f$OpenPPL_ConstSuitClubs)   ?
  [$$cr4 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2c :
   $$cr4 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3c :
   $$cr4 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4c :
   $$cr4 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5c :
   $$cr4 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6c :
   $$cr4 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7c :
   $$cr4 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8c :
   $$cr4 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9c :
   $$cr4 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Tc :
   $$cr4 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jc :
   $$cr4 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qc :
   $$cr4 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kc :
   $$cr4 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ac :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
($$cs4 == f$OpenPPL_ConstSuitDiamonds) ?
  [$$cr4 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2d :
   $$cr4 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3d :
   $$cr4 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4d :
   $$cr4 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5d :
   $$cr4 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6d :
   $$cr4 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7d :
   $$cr4 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8d :
   $$cr4 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9d :
   $$cr4 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Td :
   $$cr4 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jd :
   $$cr4 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qd :
   $$cr4 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kd :
   $$cr4 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ad :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs4 == f$OpenPPL_ConstSuitHearts)  ?
  [$$cr4 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2h :
   $$cr4 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3h :
   $$cr4 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4h :
   $$cr4 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5h :
   $$cr4 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6h :
   $$cr4 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7h :
   $$cr4 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8h :
   $$cr4 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9h :
   $$cr4 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Th :
   $$cr4 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Jh :
   $$cr4 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qh :
   $$cr4 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Kh :
   $$cr4 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_Ah :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] : 
($$cs4 == f$OpenPPL_ConstSuitSpades)  ?
  [$$cr4 == f$OpenPPL_ConstCardTwo    ? f$PrimeCode_2s :
   $$cr4 == f$OpenPPL_ConstCardThree  ? f$PrimeCode_3s :
   $$cr4 == f$OpenPPL_ConstCardFour   ? f$PrimeCode_4s :
   $$cr4 == f$OpenPPL_ConstCardFive   ? f$PrimeCode_5s :
   $$cr4 == f$OpenPPL_ConstCardSix    ? f$PrimeCode_6s :
   $$cr4 == f$OpenPPL_ConstCardSeven  ? f$PrimeCode_7s :
   $$cr4 == f$OpenPPL_ConstCardEight  ? f$PrimeCode_8s :
   $$cr4 == f$OpenPPL_ConstCardNine   ? f$PrimeCode_9s :
   $$cr4 == f$OpenPPL_ConstCardTen    ? f$PrimeCode_Ts :
   $$cr4 == f$OpenPPL_ConstCardJack   ? f$PrimeCode_Js :
   $$cr4 == f$OpenPPL_ConstCardQueen  ? f$PrimeCode_Qs :
   $$cr4 == f$OpenPPL_ConstCardKing   ? f$PrimeCode_Ks :
   $$cr4 == f$OpenPPL_ConstCardAce    ? f$PrimeCode_As :
   f$OpenPPL_ERROR_Rank_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap] :
f$OpenPPL_ERROR_Suit_Of_Card_Not_Recognized_Correctly__Check_Your_TableMap     
]

//***********************************************************
//                                                           
//  Technical functions                                      
//  ===================                                      
//                                                           
//  Functions needed for integration into OpenHoldem.        
//  They translate the f$Decision-function to standard       
//  autoplayer-functions like f$alli, f$rais and f$call.     
//
//  The OpenPPL-logic must be able to handle several
//  different kinds of actions, that must be distinguishable.
//  Therefore we use 3 different ranges for these actions: 
//  * positive values: betsize in big-blinds,
//    using Shankys RaiseBy-semantics.
//    "RAISE 3 FORCE" will be translated to
//    "3 * f$RaiseByBigBlinds"
//    where f$RaiseByBigBlinds simply is 1.
//  * small negative values: percentaged potsized bets
//    "RAISE 70% FORCE" will be translated to 
//    "70 * f$RaiseByPercentagedPotsize"
//    where f$RaiseByPercentagedPotsize is -1.
//    f$betsize will then translate this to the correct bet-amount.
//  * large negative values (< 1.000.000): 
//    fixed action constants for check, call, raise, etc. 
//                                                           
//***********************************************************

##f$OpenPPL_Decision##
// f$preflop, f$flop, f$turn and f$river will be added by the translator.
[betround == 1] ? f$preflop :
[betround == 2] ? f$flop :
[betround == 3] ? f$turn :
[betround == 4] ? f$river :
f$OpenPPL_ERROR_Betround_Out_Of_Range

##f$RaiseByBigBlinds##
// Positive amounts are betsizes in big-blinds
1

##f$RaiseByPercentagedPotsize##
// Small negative values are used for percentaged potsized bets.
// We also do the multiplication with 0.01 here.
// Don't use " / 100 *" because that can lead to an integer-division,
// and 70/100 will unexpectedly get evaluated as 0.
-0.01

##f$OpenPPL_DecisionIsPercentagedPotsizedBet##
   (f$OpenPPL_Decision <= 0) 
&& (f$OpenPPL_Decision >= -1000)

##f$OpenPPL_DecisionIsFixedBetInBigBlinds##
(f$OpenPPL_Decision > 0) 

##f$OpenPPL_DecisionIsBetPotOrBetHalfPotOrBetMax##
// Used for sanity checks in f$swag
   (f$OpenPPL_Decision == f$OpenPPL_BetHalfPot)
|| (f$OpenPPL_Decision == f$OpenPPL_BetPot)
|| (f$OpenPPL_Decision == f$OpenPPL_BetMax)

##f$OpenPPL_DecisionIsFixedAction##
(f$OpenPPL_Decision < -1000000) 

##f$OpenPPL_RememberToSitoutIfNecessary##
// OpenHoldem handles autoplayer actions when it is heros turn,
// but f$sitin, f$sitout and f$leave once every N heartbeats,
// contrary to OpenPPL were both can happen only at heros turn.
// Therefore we have to remember a decision to SitOut somehow
// and recall it later.
[f$OpenPPL_Decision == f$OpenPPL_SitOut] ? me_st_GoBuddyTakeABreakAndABeer_1 : 0

##f$OpenPPL_MaximumBetsizeInDollars##
f$OpenPPL_MaximumPossibleBetsizeIndollars

##f$OpenPPL_BetSizeForBetHalfPot##
// Calculated in dollars and with raise-to-semantics
// First we call, then we add half of the pot (after we called)
// pot already includes currentbet, so we must not consider this twice.
[currentbet + call + 0.5 * (pot + call)]

##f$OpenPPL_BetSizeForBetPot##
// Calculated in dollars and with raise-to-semantics
// pot includes currentbet, call is the amount we need to call.
[currentbet + call + (pot + call)]

##f$OpenPPL_BetSizeForPercentagedPotsizeBet##
// f$Decision is negative, -0.70 means: 70% potsize
[currentbet + call + (-1 * f$OpenPPL_Decision) * (pot + call)]

##f$OpenPPL_BetSizeForFixedBetInBigBlinds##
// Calculated in dollars and with raise-to-semantics
[(f$OpenPPL_Decision + ncallbets) * bblind]

##f$OpenPPL_BetSizeForAllin##
// Calculated in dollars and with raise-to-semantics
[balance + currentbet]

##f$betsize##
// f$betsize gets counted in Dollars.
// OpenHoldems semantics is "raise-to".
f$alli ? f$OpenPPL_BetSizeForAllin :
[f$OpenPPL_Decision == f$OpenPPL_BetPot] ? f$OpenPPL_BetSizeForBetPot : 
[f$OpenPPL_Decision == f$OpenPPL_BetHalfPot] ? f$OpenPPL_BetSizeForBetHalfPot :
// Finally caring about about absolute betsizes.
// Shankys semantics is "raise-by" and in big blinds,
// so we have to translate it.
f$OpenPPL_DecisionIsFixedBetInBigBlinds ?  f$OpenPPL_BetSizeForFixedBetInBigBlinds :
f$OpenPPL_DecisionIsPercentagedPotsizedBet ? f$OpenPPL_BetSizeForPercentagedPotsizeBet :
0

##f$sitout##
me_re_GoBuddyTakeABreakAndABeer

//*****************************************************************************
//
// OpenPPL - BettingAction Symbols
//
//*****************************************************************************

##f$OpenPPL_InitBets##
// No bet in front of us to call
((currentbet == 0) && (f$OpenPPL_AmountToCall == 0)) ? me_st_MemBets_0 :
// A bet to call and we din't act before or we checked
((currentbet == 0) && (f$OpenPPL_AmountToCall > 0)) ? me_st_MemBets_1 :
// Otherwise: we did already bet ourself or call a bet.
// So don't change anything
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_Bets##
me_re_MemBets

##f$OpenPPL_BotCalledBeforeFlop##
didcallround1

##f$OpenPPL_AggressorChair##
// ac_aggressor alone is somewhat unreliable, as it gets scraped (by bets).
// But if we raise and there are super-fast calls behind us (e.g. at PokerAcademy),
// then we don't have stable frames and soon we will switch to the next betting round.
// (There are however no problems, if somebody else raises,
// because we always get stable frames at out turn.)
// So we also check for our last action and the amount to call.
// (-1 = fold 0 = check 1 = call 2 = raise e3 = swag 4 = allin)
(((prevaction ==  2) || (prevaction == 3)) && (f$OpenPPL_AmountToCall == 0)) ? userchair :
ac_aggressor

##f$OpenPPL_BotIsLastRaiser##
(f$OpenPPL_AggressorChair==userchair)

##f$OpenPPL_BotRaisedBeforeFlop##
(didraisround1 || didswaground1)

##f$OpenPPL_BotRaisedOnFlop##
(didraisround2 || didswaground2)

##f$OpenPPL_BotRaisedOnTurn##
(didraisround3 || didswaground3)

##f$OpenPPL_BotsActionsOnFlop##
// Checks are not counted
(didcallround2 + didraisround2 + didswaground2)

##f$OpenPPL_BotsActionsOnThisRound##
// Checks are not counted
(didcall + didrais + didswag)

##f$OpenPPL_BotsActionsOnThisRoundIncludingChecks##
// Folds and allins are not relevant, as then the hand is over for us.
(didchec + didcall + didswag + didrais)

##f$OpenPPL_BotsActionsPreflop##
// Checks are not counted per definition
// and we can't check preflop without posting a blind out of order (first hand only).
(didcallround1 + didraisround1 + didswaground1)

##f$OpenPPL_InitBotsLastAction##
// Initialization on first action preflop
// This has to be done *before* we call the Decision-function,
// InitBotsLastAction has to be the last init-function to be called
// (inside f$OpenPPL_InitMemorySymbols)
// because it will call the final f$Decision routine.
//
([(betround == f$OpenPPL_ConstBetRoundPreflop) && (f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0)] ? me_st_MemBotsLastAction_f$OpenPPL_None :
//
// "Initialize" first action on other rounds to last value of last round,
// i.e. do nothing and keep the old value.
//
[[(betround == f$OpenPPL_ConstBetRoundPreflop) && (f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0)] ? 0 : 0])
//
// Then we call f$OpenPPL_Decision and store BotsLastAction for the next time...
//
|| 
// Call = Play
[  (f$OpenPPL_Decision == f$OpenPPL_Call)
|| (f$OpenPPL_Decision == f$OpenPPL_Play)] ? me_st_MemBotsLastAction_f$OpenPPL_Call :
// Fold
(f$OpenPPL_Decision == f$OpenPPL_Fold) ? me_st_MemBotsLastAction_f$OpenPPL_Fold :
// Check
(f$OpenPPL_Decision == f$OpenPPL_Check) ? me_st_MemBotsLastAction_f$OpenPPL_Check :
// Bet, Raise, BetHalfPot, BetPot, etc.
// Also handling fixed betsizes and peercentaged potsized bets.
[  (f$OpenPPL_Decision == f$OpenPPL_Raise)
|| (f$OpenPPL_Decision == f$OpenPPL_RaiseMin)
|| (f$OpenPPL_Decision == f$OpenPPL_RaiseHalfPot)
|| (f$OpenPPL_Decision == f$OpenPPL_RaiseMax)
|| (f$OpenPPL_Decision == f$OpenPPL_Bet)
|| (f$OpenPPL_Decision == f$OpenPPL_BetMin)
|| (f$OpenPPL_Decision == f$OpenPPL_BetHalfPot)
|| (f$OpenPPL_Decision == f$OpenPPL_BetMax)
|| (f$OpenPPL_DecisionIsPercentagedPotsizedBet || f$OpenPPL_DecisionIsFixedBetInBigBlinds)] ?
[(ncallbets == 0) ? me_st_MemBotsLastAction_f$OpenPPL_Bet : me_st_MemBotsLastAction_f$OpenPPL_Raise] :
// Other cases: this should not happen
// Handling them as "None"
me_st_MemBotsLastAction_f$OpenPPL_None

##f$OpenPPL_BotsLastAction##
me_re_MemBotsLastAction

##f$OpenPPL_InitBotsLastPreflopAction##
// Don't use BotsLastAction on the first orbit,
// because that variable has to be the last one to be initialized
// and is therefore undefined.
[(betround == f$OpenPPL_ConstBetRoundPreflop) && (f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0)] ? 
    me_st_MemBotsLastPreflopAction_f$OpenPPL_None :
[(betround == f$OpenPPL_ConstBetRoundPreflop) && (f$OpenPPL_BotsActionsOnThisRoundIncludingChecks > 0)] ? 
    me_st_MemBotsLastPreflopAction_f$OpenPPL_BotsLastAction : 
[(betround == f$OpenPPL_ConstBetRoundFlop) && (f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0)] ?
    me_st_MemBotsLastPreflopAction_f$OpenPPL_BotsLastAction : 0  

##f$OpenPPL_BotsLastPreflopAction##
me_re_MemBotsLastPreflopAction

##f$OpenPPL_CalledOnFlop##
didcallround2

##f$OpenPPL_CalledOnTurn##
didcallround3

##f$OpenPPL_AddNopponentscalling##
f$OpenPPL_Calls + nopponentscalling

##f$OpenPPL_InitCalls##
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0) ?
  me_st_MemCalls_nopponentscalling :
  me_st_MemCalls_f$OpenPPL_AddNopponentscalling

##f$OpenPPL_Calls##
me_re_MemCalls

##f$OpenPPL_LastRaiserCurrentBet##
raischair == 0 ? currentbet0 :
raischair == 1 ? currentbet1 :
raischair == 2 ? currentbet2 :
raischair == 3 ? currentbet3 :
raischair == 4 ? currentbet4 :
raischair == 5 ? currentbet5 :
raischair == 6 ? currentbet6 :
raischair == 7 ? currentbet7 :
raischair == 8 ? currentbet8 :
raischair == 9 ? currentbet9 :
f$OpenPPL_HINT_There_Is_No_Raiser_Therefore_No_CurrentBet

##f$OpenPPL_PlayersRaisingOrColdCallingTheLastRaise##
  (currentbet0 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)
+ (currentbet1 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)
+ (currentbet2 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)
+ (currentbet3 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)
+ (currentbet4 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)
+ (currentbet5 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)
+ (currentbet6 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)
+ (currentbet7 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)
+ (currentbet8 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)
+ (currentbet9 == f$OpenPPL_LastRaiserCurrentBet ? 1 : 0)

##f$OpenPPL_CallsSinceLastRaise##
(f$OpenPPL_PlayersRaisingOrColdCallingTheLastRaise - 1)

##f$OpenPPL_Folds##
(betround == f$OpenPPL_ConstBetRoundPreflop) ? (nplayersdealt  - nopponentsplaying - 1) :
(betround == f$OpenPPL_ConstBetRoundFlop)    ? (nplayersround2 - nopponentsplaying - 1) :
(betround == f$OpenPPL_ConstBetRoundTurn)    ? (nplayersround3 - nopponentsplaying - 1) :
(betround == f$OpenPPL_ConstBetRoundRiver)   ? (nplayersround4 - nopponentsplaying - 1) :
f$OpenPPL_ERROR_Betround_Out_Of_Range

##f$OpenPPL_ChecksAfterHero##
// Valid second orbit only
// All active players with a zero bet
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0) ? 0 :
nopponentschecking

##f$OpenPPL_ChecksInFrontOfHero##
// No checks preflop. Not even big blind can check (game over).
// We ignore additional blind-posters however.
(betround == f$OpenPPL_ConstBetRoundPreflop) ? 0 :
// I did already act, so no longer any posters in front of me
(currentbet > 0) ? 0 :
// A bet to call, subtract all players with a non-zero bet in front of us
(f$OpenPPL_AmountToCall > 0) ? (betposition - nopponentsbetting - 1):
// All players before us checked, not even open-folds can throw this logic off.
[betposition - 1]

##f$OpenPPL_CalculateChecks##
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0) ? f$OpenPPL_ChecksInFrontOfHero :
// Stored value of checks on previous orbit plus players behind
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 1) ? (f$OpenPPL_Checks + f$OpenPPL_ChecksAfterHero) :
// There can no longer be any checking players, so don't change anything
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_InitChecks##
(f$OpenPPL_BotsActionsOnThisRound <= 1) ? me_st_MemChecks_f$OpenPPL_CalculateChecks : 
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_Checks##
me_re_MemChecks

##f$OpenPPL_DealPosition1Chair##
ac_dealpos0 == 1 ? 0 :
ac_dealpos1 == 1 ? 1 :
ac_dealpos2 == 1 ? 2 :
ac_dealpos3 == 1 ? 3 :
ac_dealpos4 == 1 ? 4 :
ac_dealpos5 == 1 ? 5 :
ac_dealpos6 == 1 ? 6 :
ac_dealpos7 == 1 ? 7 :
ac_dealpos8 == 1 ? 8 :
ac_dealpos9 == 1 ? 9 :
f$OpenPPL_ERROR_DealPosition1Chair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_CurrentbetOfDealPosition1Chair##
(f$OpenPPL_DealPosition1Chair == 0) ? currentbet0 :
(f$OpenPPL_DealPosition1Chair == 1) ? currentbet1 :
(f$OpenPPL_DealPosition1Chair == 2) ? currentbet2 :
(f$OpenPPL_DealPosition1Chair == 3) ? currentbet3 :
(f$OpenPPL_DealPosition1Chair == 4) ? currentbet4 :
(f$OpenPPL_DealPosition1Chair == 5) ? currentbet5 :
(f$OpenPPL_DealPosition1Chair == 6) ? currentbet6 :
(f$OpenPPL_DealPosition1Chair == 7) ? currentbet7 :
(f$OpenPPL_DealPosition1Chair == 8) ? currentbet8 :
(f$OpenPPL_DealPosition1Chair == 9) ? currentbet9 :
f$OpenPPL_ERROR_DealPosition1Chair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_PlayersBehindDealPosition2ChairDidAct##
// Needed for dectection of missing small blind.
// First checking for folded players,
// because lots ofnewbies won't scrape-players correctly and mix everything up.
// This affects calculation of small blind, big blind,
// all positions and finally lots of other things...
(nopponentsfolded > 0) ? f$OpenPPL_True :
// Then check for active players with a zero bet
[(playersplayingbits & 0b0000000001) && (currentbet0 == 0)] ? f$OpenPPL_False :
[(playersplayingbits & 0b0000000010) && (currentbet1 == 0)] ? f$OpenPPL_False :
[(playersplayingbits & 0b0000000100) && (currentbet2 == 0)] ? f$OpenPPL_False :
[(playersplayingbits & 0b0000001000) && (currentbet3 == 0)] ? f$OpenPPL_False :
[(playersplayingbits & 0b0000010000) && (currentbet4 == 0)] ? f$OpenPPL_False :
[(playersplayingbits & 0b0000100000) && (currentbet5 == 0)] ? f$OpenPPL_False :
[(playersplayingbits & 0b0001000000) && (currentbet6 == 0)] ? f$OpenPPL_False :
[(playersplayingbits & 0b0010000000) && (currentbet7 == 0)] ? f$OpenPPL_False :
[(playersplayingbits & 0b0100000000) && (currentbet8 == 0)] ? f$OpenPPL_False :
[(playersplayingbits & 0b1000000000) && (currentbet9 == 0)] ? f$OpenPPL_False :
f$OpenPPL_True

##f$OpenPPL_CalculateMissingSmallBlind##
// True, if SB is missing, false otherwise
// Should be called at our first action preflop only.
(f$OpenPPL_CurrentbetOfDealPosition1Chair == sblind) ? f$OpenPPL_False :
// If we are NOT the 2nd player to be dealt and see a bet 
// of 1 big blind left to the dealer, then it is the big blind (SB missing)
[(dealposition != 2) && (f$OpenPPL_CurrentbetOfDealPosition1Chair == bblind)] ? f$OpenPPL_True :
// Problematic is only the case when I am in "big blind" (2nd player to be dealt)
// * if bet of DealPosition1Chair > 1 bblind then SB raised and is present
// * if bet = 1 big blind and players "behind me" did act, then SB is present and limped
// * if bet = 1 big blind and players behind me still to act, then SB is missing
[(dealposition == 2) && (f$OpenPPL_CurrentbetOfDealPosition1Chair > bblind)] ? f$OpenPPL_False :
// Case 2 and 3: precondition: bet = 1 big blind
[(dealposition == 2) && f$OpenPPL_PlayersBehindDealPosition2ChairDidAct] ? f$OpenPPL_False :
[(dealposition == 2) && !f$OpenPPL_PlayersBehindDealPosition2ChairDidAct] ? f$OpenPPL_True :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_InitMissingSmallBlind##
[(betround == f$OpenPPL_ConstBetRoundPreflop) &&  (f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0)] ? 
me_st_MemMissingSmallBlind_f$OpenPPL_CalculateMissingSmallBlind :
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_MissingSmallBlind##
me_re_MemMissingSmallBlind

##f$OpenPPL_NoBettingOnFlop##
(nbetsround2 == 0)

##f$OpenPPL_NoBettingOnTurn##
(nbetsround3 == 0)

##f$OpenPPL_NoVillainBetOrRaisedOnFlop##
((raisbits2 & ~(1<<userchair)) == 0)

##f$OpenPPL_NoVillainBetOrRaisedOnTurn##
((raisbits3 & ~(1<<userchair)) == 0)

##f$OpenPPL_OpponentCalledOnFlop##
   (betround > f$OpenPPL_ConstBetRoundFlop)
&& ((didraisround2 + didswaground2) == 1)
&& !didchecround2
&& !didcallround2
&& f$OpenPPL_NoVillainBetOrRaisedOnFlop

##f$OpenPPL_OpponentCalledOnTurn##
   (betround > f$OpenPPL_ConstBetRoundTurn)
&& ((didraisround3 + didswaground3) == 1)
&& !didchecround3
&& !didcallround3
&& f$OpenPPL_NoVillainBetOrRaisedOnTurn

##f$OpenPPL_InitRaisesBeforeFlop##
(betround == f$OpenPPL_ConstBetRoundPreflop) ? me_st_MemRaisesBeforeFlop_f$OpenPPL_Raises : 
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_InitRaisesOnFlop##
(betround == f$OpenPPL_ConstBetRoundFlop) ? me_st_MemRaisesOnFlop_f$OpenPPL_Raises : 
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_InitRaisesOnTurn##
(betround == f$OpenPPL_ConstBetRoundTurn) ? me_st_MemRaisesOnTurn_f$OpenPPL_Raises : 
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_NumberOfRaisesBeforeFlop##
(betround > f$OpenPPL_ConstBetRoundPreflop) ? me_re_MemRaisesBeforeFlop : 0

##f$OpenPPL_NumberOfRaisesOnFlop##
(betround > f$OpenPPL_ConstBetRoundFlop) ? me_re_MemRaisesOnFlop : 
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_NumberOfRaisesOnTurn##
(betround > f$OpenPPL_ConstBetRoundTurn) ? me_re_MemRaisesOnTurn : 0

##f$OpenPPL_Calculate_Raises##
(me_re_MemRaises + f$OpenPPL_RaisesSinceLastPlay)

##f$OpenPPL_InitRaises##
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0) ? me_st_MemRaises_f$OpenPPL_RaisesSinceLastPlay :
me_st_MemRaises_f$OpenPPL_Calculate_Raises

##f$OpenPPL_Raises##
// Raises may be -1 if there are additional blind-posters,
// because nopponentsraising is wrong in that case.
// But this has to be handled in OH 2.2.0.
// For the moment we add some sanity-checks.
[(me_re_MemRaises < 0) && (betround == f$OpenPPL_ConstBetRoundPreflop) && (ncallbets == 1)] ? 
  (f$OpenPPL_ERROR_Raises_Is_Negative__Trying_To_Adapt_In_A_Reasonable_Way + 0) :
[(me_re_MemRaises < 0) && (betround == f$OpenPPL_ConstBetRoundPreflop) && (ncallbets > 1)]  ? 
  (f$OpenPPL_ERROR_Raises_Is_Negative__Trying_To_Adapt_In_A_Reasonable_Way + 1) :
// Should not happen postflop, but a sanity-check can't harm.
[(me_re_MemRaises < 0) && (betround >= f$OpenPPL_ConstBetRoundFlop)] ? 
  (f$OpenPPL_ERROR_Raises_Is_Negative__Trying_To_Adapt_In_A_Reasonable_Way + 0) :
// Otherwise: probably everything ok
me_re_MemRaises

##f$OpenPPL_RaisesBeforeFlop##
(f$OpenPPL_NumberOfRaisesBeforeFlop > 0)

##f$OpenPPL_RaisesOnFlop##
(f$OpenPPL_NumberOfRaisesOnFlop > 0)

##f$OpenPPL_RaisesOnTurn##
(f$OpenPPL_NumberOfRaisesOnTurn > 0)

##f$OpenPPL_RaisesBeforeOurFirstActionThisRoundPostflop##
(nopponentsraising > 0) ? (nopponentsraising - 1) : 0

##f$OpenPPL_AntesPresent##
// First orbit preflop only,
// as this function tries to guess the antes from the bets.
   [(currentbet0 > 0) && (currentbet0 < sblind) && (balance0 > 0)]
|| [(currentbet1 > 0) && (currentbet1 < sblind) && (balance1 > 0)]
|| [(currentbet2 > 0) && (currentbet2 < sblind) && (balance2 > 0)]
|| [(currentbet3 > 0) && (currentbet3 < sblind) && (balance3 > 0)]
|| [(currentbet4 > 0) && (currentbet4 < sblind) && (balance4 > 0)]
|| [(currentbet5 > 0) && (currentbet5 < sblind) && (balance5 > 0)]
|| [(currentbet6 > 0) && (currentbet6 < sblind) && (balance6 > 0)]
|| [(currentbet7 > 0) && (currentbet7 < sblind) && (balance7 > 0)]
|| [(currentbet8 > 0) && (currentbet8 < sblind) && (balance8 > 0)]
|| [(currentbet9 > 0) && (currentbet9 < sblind) && (balance9 > 0)]

##f$OpenPPL_NumberOfBlindRaisersInThisGame##
[f$OpenPPL_AntesPresent ? 1 : 0] + [f$OpenPPL_MissingSmallBlind ? 1 : 2]

##f$OpenPPL_RaisesBeforeOurFirstActionThisRoundPreflopInSmallBlind##
// If we are in small-blind, there is 1 opponent "blind-raising",
// And we also have to care about potential antes
[(nopponentsraising - 1) - (f$OpenPPL_AntesPresent ? 1 : 0)]

##f$OpenPPL_NumberOfOpponentsLimpingPreflop##
// First orbit preflop only
// Does not count the user
// Does not count the big-blind, who can't limp
  [(currentbet0 == bblind) && (userchair != 0) && (f$OpenPPL_BigBlindChair != 0) ? 1 : 0]
+ [(currentbet1 == bblind) && (userchair != 1) && (f$OpenPPL_BigBlindChair != 1) ? 1 : 0]
+ [(currentbet2 == bblind) && (userchair != 2) && (f$OpenPPL_BigBlindChair != 2) ? 1 : 0]
+ [(currentbet3 == bblind) && (userchair != 3) && (f$OpenPPL_BigBlindChair != 3) ? 1 : 0]
+ [(currentbet4 == bblind) && (userchair != 4) && (f$OpenPPL_BigBlindChair != 4) ? 1 : 0]
+ [(currentbet5 == bblind) && (userchair != 5) && (f$OpenPPL_BigBlindChair != 5) ? 1 : 0]
+ [(currentbet6 == bblind) && (userchair != 6) && (f$OpenPPL_BigBlindChair != 6) ? 1 : 0]
+ [(currentbet7 == bblind) && (userchair != 7) && (f$OpenPPL_BigBlindChair != 7) ? 1 : 0]
+ [(currentbet8 == bblind) && (userchair != 8) && (f$OpenPPL_BigBlindChair != 8) ? 1 : 0]
+ [(currentbet9 == bblind) && (userchair != 9) && (f$OpenPPL_BigBlindChair != 9) ? 1 : 0]

##f$OpenPPL_RaisesBeforeOurFirstActionThisRoundPreflopInBigBlind##
// If we are in big-blind, there *was* 1 opponent "blind-raising",
// but he does no longer get counted, as he either did fold,
// did call or did truely raise.
// In big blind nopponentsraising does somewhat unexpectedly
// call an open-limper as blind-raiser, so we have to adapt for that case.
// Besides of that have to care about potential antes.
(f$OpenPPL_NumberOfOpponentsLimpingPreflop >= 1) ? 
  [nopponentsraising - 1 - (f$OpenPPL_AntesPresent ? 1 : 0)] :
  [nopponentsraising - (f$OpenPPL_AntesPresent ? 1 : 0)]

##f$OpenPPL_RaisesBeforeOurFirstActionThisRoundPreflopNotInTheBlinds##
// There are (usually) 2 blindraisers which should not get countet
// And we also have to care about potential antes
[(nopponentsraising - 2) - (f$OpenPPL_AntesPresent ? 1 : 0)]

##f$OpenPPL_RaisesBeforeOurFirstAction##
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks > 0) ? 0 :
(betround > f$OpenPPL_ConstBetRoundPreflop) ? f$OpenPPL_RaisesBeforeOurFirstActionThisRoundPostflop :
(dealposition == 1) ? f$OpenPPL_RaisesBeforeOurFirstActionThisRoundPreflopInSmallBlind :
(dealposition == 2) ? f$OpenPPL_RaisesBeforeOurFirstActionThisRoundPreflopInBigBlind :
f$OpenPPL_RaisesBeforeOurFirstActionThisRoundPreflopNotInTheBlinds

##f$OpenPPL_RaisesSinceLastPlayOnOurSecondAction##
// If we checked the first time the bettor sits behind us.
[didchec && (nopponentsraising > 0) ] ? (nopponentsraising - 1) :
[didchec && (nopponentsraising == 0)] ? 0 :
// Otherwise: either we were the first bettor
// or there was a bet and maybe raises in front of us,
// so all technical "raises" behind us are true raises
nopponentsraising

##f$OpenPPL_RaisesSinceLastPlayAfterOurSecondAction##
// Now all technical raises are true raises, no bettors possible
nopponentsraising

##f$OpenPPL_RaisesSinceLastPlay##
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0) ? f$OpenPPL_RaisesBeforeOurFirstAction :
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 1) ? f$OpenPPL_RaisesSinceLastPlayOnOurSecondAction :
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks >= 2) ? f$OpenPPL_RaisesSinceLastPlayAfterOurSecondAction :
f$OpenPPL_ERROR_BotsActionsOnThisRound_Out_Of_Range

//*****************************************************************************
//
// OpenPPL - Betsizes and StackSizes - supporting technical functions
//
//*****************************************************************************

##f$OpenPPL_Chair0StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance0 + currentbet0) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_Chair1StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance1 + currentbet1) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_Chair2StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance2 + currentbet2) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_Chair3StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance3 + currentbet3) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_Chair4StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance4 + currentbet4) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_Chair5StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance5 + currentbet5) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_Chair6StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance6 + currentbet6) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_Chair7StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance7 + currentbet7) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_Chair8StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance8 + currentbet8) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_Chair9StartingStackSize##
// Amount in bets (big blinds for preflop)
(bet > 0) ? ((balance9 + currentbet9) / bet) :
f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_ButtonStartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_ButtonChair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_ButtonChair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_ButtonChair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_ButtonChair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_ButtonChair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_ButtonChair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_ButtonChair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_ButtonChair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_ButtonChair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_ButtonChair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_ButtonChair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_CutOffStartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_CutOffChair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_CutOffChair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_CutOffChair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_CutOffChair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_CutOffChair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_CutOffChair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_CutOffChair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_CutOffChair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_CutOffChair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_CutOffChair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_CutOffChair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_MiddlePosition3StartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_MiddlePosition3Chair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_MiddlePosition3Chair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_MiddlePosition3Chair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_MiddlePosition3Chair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_MiddlePosition3Chair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_MiddlePosition3Chair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_MiddlePosition3Chair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_MiddlePosition3Chair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_MiddlePosition3Chair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_MiddlePosition3Chair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_MiddlePosition3Chair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_MiddlePosition2StartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_MiddlePosition2Chair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_MiddlePosition2Chair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_MiddlePosition2Chair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_MiddlePosition2Chair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_MiddlePosition2Chair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_MiddlePosition2Chair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_MiddlePosition2Chair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_MiddlePosition2Chair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_MiddlePosition2Chair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_MiddlePosition2Chair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_MiddlePosition2Chair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_MiddlePosition1StartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_MiddlePosition1Chair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_MiddlePosition1Chair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_MiddlePosition1Chair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_MiddlePosition1Chair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_MiddlePosition1Chair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_MiddlePosition1Chair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_MiddlePosition1Chair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_MiddlePosition1Chair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_MiddlePosition1Chair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_MiddlePosition1Chair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_MiddlePosition1Chair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_EarlyPosition3StartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_EarlyPosition3Chair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_EarlyPosition3Chair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_EarlyPosition3Chair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_EarlyPosition3Chair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_EarlyPosition3Chair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_EarlyPosition3Chair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_EarlyPosition3Chair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_EarlyPosition3Chair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_EarlyPosition3Chair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_EarlyPosition3Chair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_EarlyPosition3Chair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_EarlyPosition2StartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_EarlyPosition2Chair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_EarlyPosition2Chair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_EarlyPosition2Chair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_EarlyPosition2Chair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_EarlyPosition2Chair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_EarlyPosition2Chair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_EarlyPosition2Chair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_EarlyPosition2Chair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_EarlyPosition2Chair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_EarlyPosition2Chair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_EarlyPosition2Chair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_EarlyPosition1StartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_EarlyPosition1Chair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_EarlyPosition1Chair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_EarlyPosition1Chair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_EarlyPosition1Chair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_EarlyPosition1Chair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_EarlyPosition1Chair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_EarlyPosition1Chair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_EarlyPosition1Chair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_EarlyPosition1Chair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_EarlyPosition1Chair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_EarlyPosition1Chair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_BigBlindStartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_BigBlindChair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_BigBlindChair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_BigBlindChair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_BigBlindChair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_BigBlindChair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_BigBlindChair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_BigBlindChair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_BigBlindChair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_BigBlindChair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_BigBlindChair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_BigBlindChair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_SmallBlindStartingStackSize##
// Amount in bets (big blinds for preflop)
f$OpenPPL_SmallBlindChair == 0 ? f$OpenPPL_Chair0StartingStackSize :
f$OpenPPL_SmallBlindChair == 1 ? f$OpenPPL_Chair1StartingStackSize :
f$OpenPPL_SmallBlindChair == 2 ? f$OpenPPL_Chair2StartingStackSize :
f$OpenPPL_SmallBlindChair == 3 ? f$OpenPPL_Chair3StartingStackSize :
f$OpenPPL_SmallBlindChair == 4 ? f$OpenPPL_Chair4StartingStackSize :
f$OpenPPL_SmallBlindChair == 5 ? f$OpenPPL_Chair5StartingStackSize :
f$OpenPPL_SmallBlindChair == 6 ? f$OpenPPL_Chair6StartingStackSize :
f$OpenPPL_SmallBlindChair == 7 ? f$OpenPPL_Chair7StartingStackSize :
f$OpenPPL_SmallBlindChair == 8 ? f$OpenPPL_Chair8StartingStackSize :
f$OpenPPL_SmallBlindChair == 9 ? f$OpenPPL_Chair9StartingStackSize :
f$OpenPPL_ERROR_SmallBlindChair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_BigBlindCurrentBet##
// Amount in bets (big blinds for preflop)
(bet <= 0) ? f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap :
(f$OpenPPL_BigBlindChair == 0) ? (currentbet0 / bet) :
(f$OpenPPL_BigBlindChair == 1) ? (currentbet1 / bet) :
(f$OpenPPL_BigBlindChair == 2) ? (currentbet2 / bet) :
(f$OpenPPL_BigBlindChair == 3) ? (currentbet3 / bet) :
(f$OpenPPL_BigBlindChair == 4) ? (currentbet4 / bet) :
(f$OpenPPL_BigBlindChair == 5) ? (currentbet5 / bet) :
(f$OpenPPL_BigBlindChair == 6) ? (currentbet6 / bet) :
(f$OpenPPL_BigBlindChair == 7) ? (currentbet7 / bet) :
(f$OpenPPL_BigBlindChair == 8) ? (currentbet8 / bet) :
(f$OpenPPL_BigBlindChair == 9) ? (currentbet9 / bet) :
f$OpenPPL_ERROR_BigBlindChair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_SmallBlindCurrentBet##
// Amount in bets (big blinds for preflop)
(bet <= 0) ? f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap :
(f$OpenPPL_SmallBlindChair == 0) ? (currentbet0 / bet) :
(f$OpenPPL_SmallBlindChair == 1) ? (currentbet1 / bet) :
(f$OpenPPL_SmallBlindChair == 2) ? (currentbet2 / bet) :
(f$OpenPPL_SmallBlindChair == 3) ? (currentbet3 / bet) :
(f$OpenPPL_SmallBlindChair == 4) ? (currentbet4 / bet) :
(f$OpenPPL_SmallBlindChair == 5) ? (currentbet5 / bet) :
(f$OpenPPL_SmallBlindChair == 6) ? (currentbet6 / bet) :
(f$OpenPPL_SmallBlindChair == 7) ? (currentbet7 / bet) :
(f$OpenPPL_SmallBlindChair == 8) ? (currentbet8 / bet) :
(f$OpenPPL_SmallBlindChair == 9) ? (currentbet9 / bet) :
f$OpenPPL_ERROR_SmallBlindChair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_MaximumPossibleBetsizeIndollars##
(balance + currentbet)

##f$OpenPPL_SidePotInDollars##
// Money in the side-pot, i.e. the money we don't compete for.
  [(currentbet0 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet0 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]
+ [(currentbet1 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet1 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]
+ [(currentbet2 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet2 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]
+ [(currentbet3 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet3 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]
+ [(currentbet4 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet4 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]
+ [(currentbet5 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet5 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]
+ [(currentbet6 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet6 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]
+ [(currentbet7 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet7 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]
+ [(currentbet8 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet8 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]
+ [(currentbet9 > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? currentbet9 - f$OpenPPL_MaximumPossibleBetsizeIndollars : 0]

##f$OpenPPL_SidePot##
// Money in the side-pot, i.e. the money we don't compete for (measured in big blinds)
(bblind > 0) ? (f$OpenPPL_SidePotInDollars / bblind) : 0

##f$OpenPPL_MaxStillToActStackSizeAfterSmallBlind##
// Only one player behind SB, so it is easy
f$OpenPPL_BigBlindStartingStackSize

##f$OpenPPL_MaxStillToActStackSizeAfterButton##
f$OpenPPL_SmallBlindStartingStackSize > f$OpenPPL_MaxStillToActStackSizeAfterSmallBlind ?
  f$OpenPPL_SmallBlindStartingStackSize : f$OpenPPL_MaxStillToActStackSizeAfterSmallBlind

##f$OpenPPL_MaxStillToActStackSizeAfterCutOff##
f$OpenPPL_ButtonStartingStackSize > f$OpenPPL_MaxStillToActStackSizeAfterButton ?
  f$OpenPPL_ButtonStartingStackSize : f$OpenPPL_MaxStillToActStackSizeAfterButton

##f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition3##
f$OpenPPL_CutOffStartingStackSize > f$OpenPPL_MaxStillToActStackSizeAfterCutOff?
  f$OpenPPL_CutOffStartingStackSize : f$OpenPPL_MaxStillToActStackSizeAfterCutOff

##f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition2##
f$OpenPPL_MiddlePosition3StartingStackSize > f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition3 ?
  f$OpenPPL_MiddlePosition3StartingStackSize : f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition3

##f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition1##
f$OpenPPL_MiddlePosition2StartingStackSize > f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition2 ?
  f$OpenPPL_MiddlePosition2StartingStackSize : f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition2

##f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition3##
f$OpenPPL_MiddlePosition1StartingStackSize > f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition1 ?
  f$OpenPPL_MiddlePosition1StartingStackSize : f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition1

##f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition2##
f$OpenPPL_EarlyPosition3StartingStackSize > f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition3 ?
  f$OpenPPL_EarlyPosition3StartingStackSize : f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition3

##f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition1##
f$OpenPPL_EarlyPosition2StartingStackSize > f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition2 ?
  f$OpenPPL_EarlyPosition2StartingStackSize : f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition2

##f$OpenPPL_MinStillToActStackSizeAfterSmallBlind##
// Only one player behind SB, so it is easy
f$OpenPPL_BigBlindStartingStackSize

##f$OpenPPL_MinStillToActStackSizeAfterButton##
f$OpenPPL_SmallBlindStartingStackSize < f$OpenPPL_MinStillToActStackSizeAfterSmallBlind ?
  f$OpenPPL_SmallBlindStartingStackSize : f$OpenPPL_MinStillToActStackSizeAfterSmallBlind

##f$OpenPPL_MinStillToActStackSizeAfterCutOff##
f$OpenPPL_ButtonStartingStackSize < f$OpenPPL_MinStillToActStackSizeAfterButton ?
  f$OpenPPL_ButtonStartingStackSize : f$OpenPPL_MinStillToActStackSizeAfterButton

##f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition3##
f$OpenPPL_CutOffStartingStackSize < f$OpenPPL_MinStillToActStackSizeAfterCutOff ?
  f$OpenPPL_CutOffStartingStackSize : f$OpenPPL_MinStillToActStackSizeAfterCutOff

##f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition2##
f$OpenPPL_MiddlePosition3StartingStackSize < f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition3 ?
  f$OpenPPL_MiddlePosition3StartingStackSize : f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition3

##f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition1##
f$OpenPPL_MiddlePosition2StartingStackSize < f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition2 ?
  f$OpenPPL_MiddlePosition2StartingStackSize : f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition2

##f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition3##
f$OpenPPL_MiddlePosition1StartingStackSize < f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition1 ?
  f$OpenPPL_MiddlePosition1StartingStackSize : f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition1

##f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition2##
f$OpenPPL_EarlyPosition3StartingStackSize < f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition3 ?
  f$OpenPPL_EarlyPosition3StartingStackSize : f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition3

##f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition1##
f$OpenPPL_EarlyPosition2StartingStackSize < f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition2 ?
  f$OpenPPL_EarlyPosition2StartingStackSize : f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition2

##f$OpenPPL_InitMaxOpponentStackSize##
(betround == f$OpenPPL_ConstBetRoundPreflop) ? me_st_MaxOpponentStackSize_f$OpenPPL_MaxOpponentStackSizeCalculation : 
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_InitMinOpponentStackSize##
(betround == f$OpenPPL_ConstBetRoundPreflop) ? me_st_MinOpponentStackSize_f$OpenPPL_MinOpponentStackSizeCalculation :
f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_MaxOpponentStackSizeCalculation##
(bblind <= 0) ? f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap :
(balance_rank0 == balance) ? (balance_rank1 / bblind) : (balance_rank0 / bblind)

##f$OpenPPL_MinOpponentStackSizeCalculation##
(bblind <= 0) ? f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap :
[ 1 / bblind *
[ nplayersdealt == 10 ?
    (balance_rank9 == balance ? balance_rank8 : balance_rank9) :
  nplayersdealt == 9 ?
    (balance_rank8 == balance ? balance_rank7 : balance_rank8) :
  nplayersdealt == 8 ?
    (balance_rank7 == balance ? balance_rank6 : balance_rank7) :
  nplayersdealt == 7 ?
    (balance_rank6 == balance ? balance_rank5 : balance_rank6) :
  nplayersdealt == 6 ?
    (balance_rank5 == balance ? balance_rank4 : balance_rank5) :
  nplayersdealt == 5 ?
    (balance_rank4 == balance ? balance_rank3 : balance_rank4) :
  nplayersdealt == 4 ?
    (balance_rank3 == balance ? balance_rank2 : balance_rank3) :
  nplayersdealt == 3 ?
    (balance_rank2 == balance ? balance_rank1 : balance_rank2) :
  nplayersdealt == 2 ?
    (balance_rank1 == balance ? balance_rank0 : balance_rank1) :
f$OpenPPL_ERROR_No_Opponents_Detected__Check_Your_TableMap]]

##f$OpenPPL_OpponentsWithHigherStack##
// No need to tinker with memory symbols here,
// this logic is valid for all betting rounds.
  (((balance0 + currentbet0) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)
+ (((balance1 + currentbet1) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)
+ (((balance2 + currentbet2) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)
+ (((balance3 + currentbet3) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)
+ (((balance4 + currentbet4) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)
+ (((balance5 + currentbet5) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)
+ (((balance6 + currentbet6) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)
+ (((balance7 + currentbet7) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)
+ (((balance8 + currentbet8) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)
+ (((balance9 + currentbet9) > f$OpenPPL_MaximumPossibleBetsizeIndollars) ? 1: 0)

##f$OpenPPL_CalculateStartingStackSize##
// Precondition: first hand, preflop
(bblind > 0) ? ((currentbet + balance) / bblind) : f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_InitStartingStackSize##
((handsplayed == 0 || f$OpenPPL_StartingStackSize == 0) && (betround == f$OpenPPL_ConstBetRoundPreflop)) ?
  me_st_MemStartingStackSize_f$OpenPPL_CalculateStartingStackSize : f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_StartingStackSize##
me_re_MemStartingStackSize

//*****************************************************************************
//
// OpenPPL - Betsizes and StackSizes
//
//*****************************************************************************

##f$OpenPPL_DollarsToCall##
(call <= balance) ? call : balance

##f$OpenPPL_AmountToCall##
(bblind > 0) ? (f$OpenPPL_DollarsToCall / bblind) : f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_BetSize##
ncallbets

##f$OpenPPL_BigBlindSize##
bet1

##f$OpenPPL_MaxOpponentStackSize##
me_re_MaxOpponentStackSize

##f$OpenPPL_MaxStillToActStackSize##
userchair == f$OpenPPL_BigBlindChair        ? -1 :
userchair == f$OpenPPL_SmallBlindChair      ? f$OpenPPL_MaxStillToActStackSizeAfterSmallBlind      :
userchair == f$OpenPPL_ButtonChair          ? f$OpenPPL_MaxStillToActStackSizeAfterButton          :
userchair == f$OpenPPL_CutOffChair          ? f$OpenPPL_MaxStillToActStackSizeAfterCutOff          :
userchair == f$OpenPPL_MiddlePosition3Chair ? f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition3 :
userchair == f$OpenPPL_MiddlePosition2Chair ? f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition2 :
userchair == f$OpenPPL_MiddlePosition1Chair ? f$OpenPPL_MaxStillToActStackSizeAfterMiddlePosition1 :
userchair == f$OpenPPL_EarlyPosition3Chair  ? f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition3  :
userchair == f$OpenPPL_EarlyPosition2Chair  ? f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition2  :
userchair == f$OpenPPL_EarlyPosition1Chair  ? f$OpenPPL_MaxStillToActStackSizeAfterEarlyPosition1  :
f$OpenPPL_HINT_Something_Is_Wrong__It_Seems_You_Are_Not_Even_Seated

##f$OpenPPL_MinOpponentStackSize##
me_re_MinOpponentStackSize

##f$OpenPPL_MinStillToActStackSize##
userchair == f$OpenPPL_BigBlindChair        ? -1:
userchair == f$OpenPPL_SmallBlindChair      ? f$OpenPPL_MinStillToActStackSizeAfterSmallBlind      :
userchair == f$OpenPPL_ButtonChair          ? f$OpenPPL_MinStillToActStackSizeAfterButton          :
userchair == f$OpenPPL_CutOffChair          ? f$OpenPPL_MinStillToActStackSizeAfterCutOff          :
userchair == f$OpenPPL_MiddlePosition3Chair ? f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition3 :
userchair == f$OpenPPL_MiddlePosition2Chair ? f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition2 :
userchair == f$OpenPPL_MiddlePosition1Chair ? f$OpenPPL_MinStillToActStackSizeAfterMiddlePosition1 :
userchair == f$OpenPPL_EarlyPosition3Chair  ? f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition3  :
userchair == f$OpenPPL_EarlyPosition2Chair  ? f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition2  :
userchair == f$OpenPPL_EarlyPosition1Chair  ? f$OpenPPL_MinStillToActStackSizeAfterEarlyPosition1  :
f$OpenPPL_HINT_Something_Is_Wrong__It_Seems_You_Are_Not_Even_Seated

##f$OpenPPL_PotSize##
(bblind > 0) ? (pot / bblind) - f$OpenPPL_SidePot: f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_StackSize##
(bblind > 0) ? (balance / bblind) : f$OpenPPL_ERROR_Blinds_Not_Recognized_Correctly__Check_Your_TableMap

##f$OpenPPL_TotalInvested##
(betround == f$OpenPPL_ConstBetRoundPreflop && nbetsround  > 0) ? ncurrentbets :
(betround == f$OpenPPL_ConstBetRoundFlop    && nbetsround1 > 0) ? (nbetsround1 + ncurrentbets) :
(betround == f$OpenPPL_ConstBetRoundTurn    && nbetsround1 > 0) ? (nbetsround1 + nbetsround2 + ncurrentbets) :
(betround == f$OpenPPL_ConstBetRoundRiver   && nbetsround1 > 0) ? (nbetsround1 + nbetsround2 + nbetsround3 + ncurrentbets) :
f$OpenPPL_ERROR_Betround_Out_Of_Range

##f$OpenPPL_TotalInvestedThisRound##
ncurrentbets

//*****************************************************************************
//
// OpenPPL - Board Symbols
//
//*****************************************************************************

##f$OpenPPL_2ndBestBoardCard##
// Only considering individual ranks, paired cards get ignored this way
// 14 (ace) can't happen, but anyway...
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b100000000000000) != 0 ? f$OpenPPL_ConstCardAce   :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b010000000000000) != 0 ? f$OpenPPL_ConstCardKing  :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b001000000000000) != 0 ? f$OpenPPL_ConstCardQueen :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000100000000000) != 0 ? f$OpenPPL_ConstCardJack  :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000010000000000) != 0 ? f$OpenPPL_ConstCardTen   :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000001000000000) != 0 ? f$OpenPPL_ConstCardNine  :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000000100000000) != 0 ? f$OpenPPL_ConstCardEight :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000000010000000) != 0 ? f$OpenPPL_ConstCardSeven :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000000001000000) != 0 ? f$OpenPPL_ConstCardSix   :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000000000100000) != 0 ? f$OpenPPL_ConstCardFive  :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000000000010000) != 0 ? f$OpenPPL_ConstCardFour  :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000000000001000) != 0 ? f$OpenPPL_ConstCardThree :
(f$OpenPPL_RankBitsCommonWithoutTopBit & 0b000000000000100) != 0 ? f$OpenPPL_ConstCardTwo   :
// Last two bits are ace (low) and unused.
// Both ignored.
-1

##f$OpenPPL_AcePresentOnFlop##
(f$OpenPPL_FirstFlopCard == f$OpenPPL_ConstCardAce) || (f$OpenPPL_SecondFlopCard == f$OpenPPL_ConstCardAce) || (f$OpenPPL_ThirdFlopCard == f$OpenPPL_ConstCardAce)

##f$OpenPPL_AcePresentOnTurn##
f$OpenPPL_AcePresentOnFlop || (f$OpenPPL_TurnCard == f$OpenPPL_ConstCardAce)

##f$OpenPPL_BestBoardCard##
rankhicommon

##f$OpenPPL_DoubleGutShotOnBoard##
((rankbitscommon >> 8) &0x7f) == 0x5d ? 1 :
((rankbitscommon >> 7) &0x7f) == 0x5d ? 1 :
((rankbitscommon >> 6) &0x7f) == 0x5d ? 1 :
((rankbitscommon >> 5) &0x7f) == 0x5d ? 1 :
((rankbitscommon >> 4) &0x7f) == 0x5d ? 1 :
((rankbitscommon >> 3) &0x7f) == 0x5d ? 1 :
((rankbitscommon >> 2) &0x7f) == 0x5d ? 1 :
((rankbitscommon >> 1) &0x7f) == 0x5d ? 1 : 0

##f$OpenPPL_ExactlyOneStraightPossibleOnFlop##
   [f$OpenPPL_StraightPossibleOnFlop && f$OpenPPL_AcePresentOnFlop && ((f$OpenPPL_LowestFlopCard >= 10) || (f$OpenPPL_TopFlopCard <= 5))]
|| [f$OpenPPL_StraightPossibleOnFlop && (f$OpenPPL_TopFlopCard - f$OpenPPL_LowestFlopCard == 4)]

##f$OpenPPL_FlopCardPairedonTurn##
   f$OpenPPL_FirstFlopCard == f$OpenPPL_TurnCard
|| f$OpenPPL_SecondFlopCard == f$OpenPPL_TurnCard
|| f$OpenPPL_ThirdFlopCard == f$OpenPPL_TurnCard

##f$OpenPPL_FlushPossible##
(nsuitedcommon >= 3)

##f$OpenPPL_FlushOnBoard##
($$cs0 == $$cs1 && $$cs0 == $$cs2 && $$cs0 == $$cs3 && $$cs0 == $$cs4)

##f$OpenPPL_FlushPossibleOnFlop##
($$cs0 == $$cs1 && $$cs0 == $$cs2)

##f$OpenPPL_FlushPossibleOnTurn##
[  ($$cs0 == $$cs1 && $$cs0 == $$cs2)
|| ($$cs0 == $$cs1 && $$cs0 == $$cs3)
|| ($$cs0 == $$cs2 && $$cs0 == $$cs3)
|| ($$cs1 == $$cs2 && $$cs1 == $$cs3) ]

##f$OpenPPL_FourCardsToWheelOnBoard##
`(rankbitscommon & 0b0000000000111110) >= 4

##f$OpenPPL_FourOf1SuiteOnTurn##
(($$cs0 == $$cs1) && ($$cs2 == $$cs3) && ($$cs0 == $$cs3))

##f$OpenPPL_FullHouseOnBoard##
(pokervalcommon & fullhouse)

##f$OpenPPL_HighestRankOnFlop##
[(f$OpenPPL_FirstFlopCard >= f$OpenPPL_SecondFlopCard) && (f$OpenPPL_FirstFlopCard >= f$OpenPPL_ThirdFlopCard)] ? f$OpenPPL_FirstFlopCard :
[(f$OpenPPL_SecondFlopCard >= f$OpenPPL_FirstFlopCard) && (f$OpenPPL_SecondFlopCard >= f$OpenPPL_ThirdFlopCard)] ? f$OpenPPL_SecondFlopCard :
[(f$OpenPPL_ThirdFlopCard >= f$OpenPPL_FirstFlopCard) && (f$OpenPPL_ThirdFlopCard >= f$OpenPPL_SecondFlopCard)] ? f$OpenPPL_ThirdFlopCard :
-1

##f$OpenPPL_KingPresentOnFlop##
   (f$OpenPPL_FirstFlopCard == f$OpenPPL_ConstCardKing)
|| (f$OpenPPL_SecondFlopCard == f$OpenPPL_ConstCardKing)
|| (f$OpenPPL_ThirdFlopCard == f$OpenPPL_ConstCardKing)

##f$OpenPPL_LowCardsOnBoard##
`f$OpenPPL_RankBitsCommonLowCardsOnly

##f$OpenPPL_MoreThanOneStraightPossibleOnFlop##
f$OpenPPL_StraightPossibleOnFlop && !f$OpenPPL_ExactlyOneStraightPossibleOnFlop

##f$OpenPPL_MoreThanOneStraightPossibleOnRiver##
(betround == f$OpenPPL_ConstBetRoundRiver && (f$OpenPPL_NumberOfStraightsPossibleOnRiver == 1))

##f$OpenPPL_RankBitsCommonRiver##
// As this can only be called at the river it is identical to rankbiscommon
rankbitscommon

##f$OpenPPL_NumberOfStraightsPossibleOnTurn##
  (`((f$OpenPPL_RankBitsCommonTurn >> 10) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonTurn >>  9) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonTurn >>  8) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonTurn >>  7) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonTurn >>  6) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonTurn >>  5) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonTurn >>  4) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonTurn >>  3) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonTurn >>  2) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonTurn >>  1) & 0x1f) >= 3 ? 1 : 0)

##f$OpenPPL_NumberOfStraightsPossibleOnRiver##
  (`((f$OpenPPL_RankBitsCommonRiver >> 10) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonRiver >>  9) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonRiver >>  8) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonRiver >>  7) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonRiver >>  6) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonRiver >>  5) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonRiver >>  4) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonRiver >>  3) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonRiver >>  2) & 0x1f) >= 3 ? 1 : 0)
+ (`((f$OpenPPL_RankBitsCommonRiver >>  1) & 0x1f) >= 3 ? 1 : 0)

##f$OpenPPL_MoreThanOneOneCardStraightPossible##
f$OpenPPL_DoubleGutShotOnBoard || f$OpenPPL_OpenEndedStraightDrawOnBoard

##f$OpenPPL_MoreThanOneStraightPossibleOnTurn##
(f$OpenPPL_NumberOfStraightsPossibleOnTurn > 1)

##f$OpenPPL_NumberOfOneCardStraightsPossibleOnTurn##
  (f$OpenPPL_OneCardStraightPossibleOnTurn_AceHigh   ? 1 : 0)
+ (f$OpenPPL_OneCardStraightPossibleOnTurn_KingHigh  ? 1 : 0)
+ (f$OpenPPL_OneCardStraightPossibleOnTurn_QueenHigh ? 1 : 0)
+ (f$OpenPPL_OneCardStraightPossibleOnTurn_JackHigh  ? 1 : 0)
+ (f$OpenPPL_OneCardStraightPossibleOnTurn_TenHigh   ? 1 : 0)
+ (f$OpenPPL_OneCardStraightPossibleOnTurn_NineHigh  ? 1 : 0)
+ (f$OpenPPL_OneCardStraightPossibleOnTurn_EightHigh ? 1 : 0)
+ (f$OpenPPL_OneCardStraightPossibleOnTurn_SevenHigh ? 1 : 0)
+ (f$OpenPPL_OneCardStraightPossibleOnTurn_SixHigh   ? 1 : 0)
+ (f$OpenPPL_OneCardStraightPossibleOnTurn_FiveHigh  ? 1 : 0)

##f$OpenPPL_OneCardFlushPossible##
(nsuitedcommon >= 4)

##f$OpenPPL_OneCardStraightFlushPossible##
(nstraightflushfillcommon <= 1)

##f$OpenPPL_StraightFlushOnBoard##
(nstraightflushfillcommon ==0)

##f$OpenPPL_OneCardStraightPossible##
(nstraightfillcommon <= 1)

##f$OpenPPL_OneCardStraightPossibleOnTurn_AceHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b111110000000000) >= 4)   

##f$OpenPPL_OneCardStraightPossibleOnTurn_KingHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b011111000000000) >= 4)  

##f$OpenPPL_OneCardStraightPossibleOnTurn_QueenHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b001111100000000) >= 4)  

##f$OpenPPL_OneCardStraightPossibleOnTurn_JackHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b000111110000000) >= 4)  

##f$OpenPPL_OneCardStraightPossibleOnTurn_TenHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b000011111000000) >= 4)  

##f$OpenPPL_OneCardStraightPossibleOnTurn_NineHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b000001111100000) >= 4)  

##f$OpenPPL_OneCardStraightPossibleOnTurn_EightHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b000000111110000) >= 4)   

##f$OpenPPL_OneCardStraightPossibleOnTurn_SevenHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b000000011111000) >= 4)   

##f$OpenPPL_OneCardStraightPossibleOnTurn_SixHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b000000001111100) >= 4)   

##f$OpenPPL_OneCardStraightPossibleOnTurn_FiveHigh##
(`(f$OpenPPL_RankBitsCommonTurn & 0b000000000111110) >= 4)

##f$OpenPPL_OneCardStraightPossibleOnTurn##
(f$OpenPPL_NumberOfOneCardStraightsPossibleOnTurn >= 1)

##f$OpenPPL_Only1OneCardStraightPossible##
f$OpenPPL_OneCardStraightPossible && !f$OpenPPL_MoreThanOneOneCardStraightPossible

##f$OpenPPL_OpenEndedStraightDrawOnBoard##
(nstraightcommon == 4 && (`((rankbitscommon >> 10) & 0x1f) < 4) && (`((rankbitscommon >> 1) & 0x1f) < 4)) ? 1 : 0

##f$OpenPPL_OpenEndedStraightDrawPossibleOnFlop##
[(f$OpenPPL_TopFlopCard - f$OpenPPL_2ndTopFlopCard <= 3) && (f$OpenPPL_TopFlopCard != f$OpenPPL_ConstCardAce)]
|| [(f$OpenPPL_2ndTopFlopCard - f$OpenPPL_LowestFlopCard <= 3) && (f$OpenPPL_LowestFlopCard >= f$OpenPPL_ConstCardTwo)]

##f$OpenPPL_IndividualOverCardsOnBoard##
// Works like OvercardsOnBoard, except that it counts cards only once
`[rankbitscommon >> (rankhiplayer + 1)]

##f$OpenPPL_OvercardsOnBoard##
  ((f$OpenPPL_FirstFlopCard  > rankhiplayer) ? 1 : 0)
+ ((f$OpenPPL_SecondFlopCard > rankhiplayer) ? 1 : 0)
+ ((f$OpenPPL_ThirdFlopCard  > rankhiplayer) ? 1 : 0)
+ ((f$OpenPPL_TurnCard       > rankhiplayer) ? 1 : 0)
+ ((f$OpenPPL_RiverCard      > rankhiplayer) ? 1 : 0)

##f$OpenPPL_PairOnBoard##
(nrankedcommon >= 2)

##f$OpenPPL_PairOnFlop##
(f$OpenPPL_FirstFlopCard == f$OpenPPL_SecondFlopCard || f$OpenPPL_SecondFlopCard == f$OpenPPL_ThirdFlopCard || f$OpenPPL_FirstFlopCard == f$OpenPPL_ThirdFlopCard)

##f$OpenPPL_LowestFlopCard##
f$OpenPPL_FirstFlopCard  <= f$OpenPPL_SecondFlopCard && f$OpenPPL_FirstFlopCard  <=  f$OpenPPL_ThirdFlopCard  ? f$OpenPPL_FirstFlopCard :
f$OpenPPL_SecondFlopCard <= f$OpenPPL_FirstFlopCard  && f$OpenPPL_SecondFlopCard <=  f$OpenPPL_ThirdFlopCard  ? f$OpenPPL_SecondFlopCard :
f$OpenPPL_ThirdFlopCard  <= f$OpenPPL_FirstFlopCard  && f$OpenPPL_ThirdFlopCard  <=  f$OpenPPL_SecondFlopCard ? f$OpenPPL_ThirdFlopCard : 
-1

##f$OpenPPL_LowestFlopCardPairedOnTurn##
(f$OpenPPL_LowestFlopCard == f$OpenPPL_TurnCard) 

##f$OpenPPL_OnlyOneStraightPossible##
f$OpenPPL_StraightPossible
&& ![f$OpenPPL_MoreThanOneStraightPossibleOnFlop
  || f$OpenPPL_MoreThanOneStraightPossibleOnTurn
  || f$OpenPPL_MoreThanOneStraightPossibleOnRiver]

##f$OpenPPL_PairOnTurn##
   f$OpenPPL_PairOnFlop
|| f$OpenPPL_TopFlopCardPairedonTurn
|| f$OpenPPL_2ndTopFlopCardPairedOnTurn
|| f$OpenPPL_LowestFlopCardPairedOnTurn

##f$OpenPPL_QuadsOnBoard##
(nrankedcommon == 4)

##f$OpenPPL_QueenPresentOnFlop##
   (f$OpenPPL_FirstFlopCard==f$OpenPPL_ConstCardQueen)
|| (f$OpenPPL_SecondFlopCard==f$OpenPPL_ConstCardQueen)
|| (f$OpenPPL_ThirdFlopCard==f$OpenPPL_ConstCardQueen)

##f$OpenPPL_RankBitsCommonLowCardsOnly##
// Bits 8..ace(low), last bit is unused
(rankbitscommon & 0b111111110)

##f$OpenPPL_RiverCardisOvercardToBoard##
[  f$OpenPPL_RiverCard > f$OpenPPL_FirstFlopCard
&& f$OpenPPL_RiverCard > f$OpenPPL_SecondFlopCard
&& f$OpenPPL_RiverCard > f$OpenPPL_ThirdFlopCard
&& f$OpenPPL_RiverCard > f$OpenPPL_TurnCard ]

##f$OpenPPL_2ndTopFlopCard##
f$OpenPPL_FirstFlopCard  >= f$OpenPPL_SecondFlopCard && f$OpenPPL_FirstFlopCard  >= f$OpenPPL_ThirdFlopCard  && f$OpenPPL_SecondFlopCard >= f$OpenPPL_ThirdFlopCard  ? f$OpenPPL_SecondFlopCard :
f$OpenPPL_FirstFlopCard  >= f$OpenPPL_SecondFlopCard && f$OpenPPL_FirstFlopCard  >= f$OpenPPL_ThirdFlopCard  && f$OpenPPL_SecondFlopCard <= f$OpenPPL_ThirdFlopCard  ? f$OpenPPL_ThirdFlopCard  :
f$OpenPPL_SecondFlopCard >= f$OpenPPL_FirstFlopCard  && f$OpenPPL_SecondFlopCard >= f$OpenPPL_ThirdFlopCard  && f$OpenPPL_FirstFlopCard  >= f$OpenPPL_ThirdFlopCard  ? f$OpenPPL_FirstFlopCard  :
f$OpenPPL_SecondFlopCard >= f$OpenPPL_FirstFlopCard  && f$OpenPPL_SecondFlopCard >= f$OpenPPL_ThirdFlopCard  && f$OpenPPL_FirstFlopCard  <= f$OpenPPL_ThirdFlopCard  ? f$OpenPPL_ThirdFlopCard  :
f$OpenPPL_ThirdFlopCard  >= f$OpenPPL_FirstFlopCard  && f$OpenPPL_ThirdFlopCard  >= f$OpenPPL_SecondFlopCard && f$OpenPPL_FirstFlopCard  >= f$OpenPPL_SecondFlopCard ? f$OpenPPL_FirstFlopCard  :
f$OpenPPL_ThirdFlopCard  >= f$OpenPPL_FirstFlopCard  && f$OpenPPL_ThirdFlopCard  >= f$OpenPPL_SecondFlopCard && f$OpenPPL_FirstFlopCard  <= f$OpenPPL_SecondFlopCard ? f$OpenPPL_SecondFlopCard :
// Otherwise: there is no 2ndTopFlopCard, because all ranks are even
-1

// Shanky is a bit inconsistent with the naming
// So we provide both 2ndTopFlopCardPairedOnRiver and SecondTopFlopCardPairedOnRiver,
// same for turn. "SecondTopFlopCardPairedOnRiver" is the "standard" here.

##f$OpenPPL_SecondTopFlopCardPairedOnRiver##
f$OpenPPL_2ndTopFlopCardPairedOnRiver

##f$OpenPPL_SecondTopFlopCardPairedOnTurn##
f$OpenPPL_2ndTopFlopCardPairedOnTurn

##f$OpenPPL_2ndTopFlopCardPairedOnRiver##
(f$OpenPPL_2ndTopFlopCard == f$OpenPPL_RiverCard)

##f$OpenPPL_2ndTopFlopCardPairedOnTurn##
(f$OpenPPL_2ndTopFlopCard == f$OpenPPL_TurnCard)

##f$OpenPPL_srankbitshero##
 (($$ps0==tsuit ? (f$OpenPPL_RankOfFirstHoleCard!=f$OpenPPL_ConstCardAce ? 2**f$OpenPPL_RankOfFirstHoleCard : 0b100000000000010) : 0)
| ($$ps1==tsuit ? (f$OpenPPL_RankOfSecondHoleCard!=f$OpenPPL_ConstCardAce ? 2**f$OpenPPL_RankOfSecondHoleCard : 0b100000000000010) : 0))

##f$OpenPPL_srankavailable##
// Available suited cards for other players,
// possibly contributing to a flush or straight flush
~(srankbitscommon | f$OpenPPL_srankbitshero)

##f$OpenPPL_StraightFlushPossibleByOthers##
(nstraightflushfillcommon <= 2)

##f$OpenPPL_SuitsOnBoard##
(betround == f$OpenPPL_ConstBetRoundFlop)  ? f$OpenPPL_SuitsOnFlop :
(betround == f$OpenPPL_ConstBetRoundTurn)  ? f$OpenPPL_SuitsOnTurn :
(betround == f$OpenPPL_ConstBetRoundRiver) ? f$OpenPPL_SuitsOnRiver :
f$OpenPPL_HINT_SuitsOnBoard_Undefined_For_This_Betting_Round

##f$OpenPPL_SuitsOnFlop##
(betround < f$OpenPPL_ConstBetRoundFlop) ? f$OpenPPL_HINT_SuitsOnBoard_Undefined_For_This_Betting_Round : 
[ ($$cs0 == $$cs1 && $$cs1 == $$cs2) ? 1 :
 (($$cs0 == $$cs1 && $$cs1 != $$cs2) || ($$cs0 == $$cs2 && $$cs0 != $$cs1) || ($$cs0 != $$cs1 && $$cs1 == $$cs2)) ? 2 :
  ($$cs0 != $$cs1 && $$cs1 != $$cs2 && $$cs0 != $$cs2) ? 3 : f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY]

##f$OpenPPL_SuitsOnRiver##
(betround < f$OpenPPL_ConstBetRoundRiver) ? f$OpenPPL_HINT_SuitsOnBoard_Undefined_For_This_Betting_Round : 
[ f$OpenPPL_SuitsOnTurn
  + ((($$cs4 != $$cs0) && ($$cs4 != $$cs1) && ($$cs4 != $$cs2) && ($$cs4 != $$cs3)) ? 1 : 0)]
  

##f$OpenPPL_SuitsOnTurn##
(betround < f$OpenPPL_ConstBetRoundTurn) ? f$OpenPPL_HINT_SuitsOnBoard_Undefined_For_This_Betting_Round : 
[ f$OpenPPL_SuitsOnFlop 
  + ((($$cs3 != $$cs0) && ($$cs3 != $$cs1) && ($$cs3 != $$cs2)) ? 1 : 0)]
  

##f$OpenPPL_StraightFlushPossible##
`((srankbitscommon >> 10) & 0x1f) >= 3 ? 1 :
`((srankbitscommon >> 9) & 0x1f) >= 3 ? 1 :
`((srankbitscommon >> 8) & 0x1f) >= 3 ? 1 :
`((srankbitscommon >> 7) & 0x1f) >= 3 ? 1 :
`((srankbitscommon >> 6) & 0x1f) >= 3 ? 1 :
`((srankbitscommon >> 5) & 0x1f) >= 3 ? 1 :
`((srankbitscommon >> 4) & 0x1f) >= 3 ? 1 :
`((srankbitscommon >> 3) & 0x1f) >= 3 ? 1 :
`((srankbitscommon >> 2) & 0x1f) >= 3 ? 1 :
`((srankbitscommon >> 1) & 0x1f) >= 3 ? 1 : 0

##f$OpenPPL_StraightOnBoard##
(nstraightcommon >= 5)

##f$OpenPPL_StraightPossible##
(nstraightfillcommon <= 2)

##f$OpenPPL_RankBitsCommOnFlop##
  (f$OpenPPL_FirstFlopCard != f$OpenPPL_ConstCardAce ? 2**f$OpenPPL_FirstFlopCard : 0b100000000000010)
| (f$OpenPPL_SecondFlopCard != f$OpenPPL_ConstCardAce ? 2**f$OpenPPL_SecondFlopCard : 0b100000000000010)
| (f$OpenPPL_ThirdFlopCard != f$OpenPPL_ConstCardAce ? 2**f$OpenPPL_ThirdFlopCard : 0b100000000000010)

##f$OpenPPL_RankBitsCommonTurn##
  (f$OpenPPL_FirstFlopCard != f$OpenPPL_ConstCardAce ? 2**f$OpenPPL_FirstFlopCard : 0b100000000000010)
| (f$OpenPPL_SecondFlopCard != f$OpenPPL_ConstCardAce ? 2**f$OpenPPL_SecondFlopCard : 0b100000000000010)
| (f$OpenPPL_ThirdFlopCard != f$OpenPPL_ConstCardAce ? 2**f$OpenPPL_ThirdFlopCard : 0b100000000000010)
| (f$OpenPPL_TurnCard != f$OpenPPL_ConstCardAce ? 2**f$OpenPPL_TurnCard : 0b100000000000010)

##f$OpenPPL_StraightPossibleOnFlop##
(`((f$OpenPPL_RankBitsCommOnFlop >> 10) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommOnFlop >>  9) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommOnFlop >>  8) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommOnFlop >>  7) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommOnFlop >>  6) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommOnFlop >>  5) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommOnFlop >>  4) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommOnFlop >>  3) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommOnFlop >>  2) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommOnFlop >>  1) & 0x1f) >= 3) ? 1 : 0

##f$OpenPPL_StraightPossibleOnTurn##
(`((f$OpenPPL_RankBitsCommonTurn >> 10) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommonTurn >>  9) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommonTurn >>  8) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommonTurn >>  7) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommonTurn >>  6) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommonTurn >>  5) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommonTurn >>  4) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommonTurn >>  3) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommonTurn >>  2) & 0x1f) >= 3) ? 1 :
(`((f$OpenPPL_RankBitsCommonTurn >>  1) & 0x1f) >= 3) ? 1 : 0

##f$OpenPPL_ThreeCardStraightOnBoard##
nstraightcommon >= 3

##f$OpenPPL_TopFlopCard##
f$OpenPPL_FirstFlopCard >= f$OpenPPL_SecondFlopCard && f$OpenPPL_FirstFlopCard >= f$OpenPPL_ThirdFlopCard ? f$OpenPPL_FirstFlopCard :
f$OpenPPL_SecondFlopCard >= f$OpenPPL_FirstFlopCard && f$OpenPPL_SecondFlopCard >= f$OpenPPL_ThirdFlopCard ? f$OpenPPL_SecondFlopCard :
f$OpenPPL_ThirdFlopCard >= f$OpenPPL_FirstFlopCard && f$OpenPPL_ThirdFlopCard >= f$OpenPPL_SecondFlopCard ? f$OpenPPL_ThirdFlopCard :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_TopFlopCardPairedonRiver##
(f$OpenPPL_TopFlopCard == f$OpenPPL_RiverCard)

##f$OpenPPL_TopFlopCardPairedonTurn##
(f$OpenPPL_TopFlopCard == f$OpenPPL_TurnCard)

##f$OpenPPL_TripsOnBoard##
(nrankedcommon >= 3)

##f$OpenPPL_TripsOnBoardOnTurn##
   (f$OpenPPL_FirstFlopCard == f$OpenPPL_SecondFlopCard && f$OpenPPL_SecondFlopCard == f$OpenPPL_ThirdFlopCard)
|| (f$OpenPPL_FirstFlopCard == f$OpenPPL_SecondFlopCard && f$OpenPPL_SecondFlopCard == f$OpenPPL_TurnCard)
|| (f$OpenPPL_FirstFlopCard == f$OpenPPL_ThirdFlopCard && f$OpenPPL_ThirdFlopCard == f$OpenPPL_TurnCard)
|| (f$OpenPPL_SecondFlopCard == f$OpenPPL_ThirdFlopCard && f$OpenPPL_ThirdFlopCard == f$OpenPPL_TurnCard)

##f$OpenPPL_TurnCardisOvercardToBoard##
[  f$OpenPPL_TurnCard > f$OpenPPL_FirstFlopCard
&& f$OpenPPL_TurnCard > f$OpenPPL_SecondFlopCard
&& f$OpenPPL_TurnCard > f$OpenPPL_ThirdFlopCard ]

##f$OpenPPL_TurnCardPaired##
(f$OpenPPL_TurnCard == f$OpenPPL_RiverCard)

##f$OpenPPL_TwoOfOneSuitPresentOnFlop##
(($$cs0 == $$cs1) || ($$cs0 == $$cs2) || ($$cs1 == $$cs2))

##f$OpenPPL_TwoPairOnBoard##
(pokervalcommon & twopair) || (pokervalcommon & fullhouse)

##f$OpenPPL_UncoordinatedFlop##
!f$OpenPPL_PairOnFlop
// No possible flush: guaranteed by the next condition...
// three different suits
&& (f$OpenPPL_SuitsOnFlop == 3)
&& !f$OpenPPL_StraightPossibleOnFlop
&& !f$OpenPPL_OpenEndedStraightDrawPossibleOnFlop

##f$OpenPPL_WheelPossible##
(`(rankbitscommon & 0b111110) >= 3)

//*****************************************************************************
//
// OpenPPL - Hand(Strength) Symbols
//
//*****************************************************************************

##f$OpenPPL_HadOverPairOnFlop##
[  ispair
&& f$OpenPPL_RankOfFirstHoleCard > f$OpenPPL_FirstFlopCard
&& f$OpenPPL_RankOfFirstHoleCard > f$OpenPPL_SecondFlopCard
&& f$OpenPPL_RankOfFirstHoleCard > f$OpenPPL_ThirdFlopCard ]

##f$OpenPPL_HadPairOnFlop##
   ispair 
|| f$OpenPPL_RankOfFirstHoleCard  == f$OpenPPL_FirstFlopCard 
|| f$OpenPPL_RankOfFirstHoleCard  == f$OpenPPL_SecondFlopCard 
|| f$OpenPPL_RankOfFirstHoleCard  == f$OpenPPL_ThirdFlopCard  
|| f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_FirstFlopCard 
|| f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_SecondFlopCard  
|| f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_ThirdFlopCard

##f$OpenPPL_HadPairOnTurn##
   f$OpenPPL_HadPairOnFlop 
|| f$OpenPPL_FlopCardPairedonTurn 
|| f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_TurnCard 
|| f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_TurnCard

##f$OpenPPL_HadTopPairOnFlop##
[(f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_HighestRankOnFlop) || (f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_HighestRankOnFlop)]

##f$OpenPPL_HighestRankOnTurn##
((f$OpenPPL_TurnCard > f$OpenPPL_HighestRankOnFlop) ? f$OpenPPL_TurnCard : f$OpenPPL_HighestRankOnFlop)

##f$OpenPPL_HadTopPairOnTurn##
[ f$OpenPPL_RankOfFirstHoleCard==f$OpenPPL_HighestRankOnTurn || f$OpenPPL_RankOfSecondHoleCard==f$OpenPPL_HighestRankOnTurn ]

##f$OpenPPL_HadTwoPairOnFlop##
   (f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_FirstFlopCard || f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_SecondFlopCard || f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_ThirdFlopCard)
&& (f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_SecondFlopCard || f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_SecondFlopCard || f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_ThirdFlopCard)
&& !ispair

##f$OpenPPL_Have2ndBestKicker##
(mh_kickerbetter == 1)

##f$OpenPPL_Have2ndBestKickerOrBetter##
f$OpenPPL_Have2ndBestKicker || f$OpenPPL_HaveBestKickerOrBetter

##f$OpenPPL_Have2ndBestOverPair##
   ($KK
&& f$OpenPPL_FirstFlopCard < f$OpenPPL_ConstCardKing
&& f$OpenPPL_SecondFlopCard < f$OpenPPL_ConstCardKing
&& f$OpenPPL_ThirdFlopCard < f$OpenPPL_ConstCardKing
&& f$OpenPPL_TurnCard < f$OpenPPL_ConstCardKing
&& f$OpenPPL_RiverCard < f$OpenPPL_ConstCardKing)

##f$OpenPPL_Have2ndBestOverPairOrBetter##
(f$OpenPPL_Have2ndBestOverPair || f$OpenPPL_HaveBestOverPairOrBetter)

##f$OpenPPL_Have2ndNutFlush##
[f$OpenPPL_HaveFlush && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 1)]

##f$OpenPPL_Have2ndNutFlushDraw##
f$OpenPPL_HaveFlushDraw && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 1)

##f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsAceHigh##
`(rankbitscommon & 0b011111000000000) >= 3 ? f$OpenPPL_ConstCardKing  :
`(rankbitscommon & 0b001111100000000) >= 3 ? f$OpenPPL_ConstCardQueen :
`(rankbitscommon & 0b000111110000000) >= 3 ? f$OpenPPL_ConstCardJack  :
`(rankbitscommon & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen   :
`(rankbitscommon & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine  :
`(rankbitscommon & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(rankbitscommon & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(rankbitscommon & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix   :
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive  :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsKingHigh##
`(rankbitscommon & 0b001111100000000) >= 3 ? f$OpenPPL_ConstCardQueen :
`(rankbitscommon & 0b000111110000000) >= 3 ? f$OpenPPL_ConstCardJack  :
`(rankbitscommon & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen   :
`(rankbitscommon & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine  :
`(rankbitscommon & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(rankbitscommon & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(rankbitscommon & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix   :
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive  :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsQueenHigh##
`(rankbitscommon & 0b000111110000000) >= 3 ? f$OpenPPL_ConstCardJack  :
`(rankbitscommon & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen   :
`(rankbitscommon & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine  :
`(rankbitscommon & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(rankbitscommon & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(rankbitscommon & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix   :
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive  :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsJackHigh##
`(rankbitscommon & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen   :
`(rankbitscommon & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine  :
`(rankbitscommon & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(rankbitscommon & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(rankbitscommon & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix   :
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive  :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsTenHigh##
`(rankbitscommon & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine  :
`(rankbitscommon & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(rankbitscommon & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(rankbitscommon & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix   :
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive  :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsNineHigh##
`(rankbitscommon & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(rankbitscommon & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(rankbitscommon & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix   :
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive  :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsEightHigh##
`(rankbitscommon & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(rankbitscommon & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix   :
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive  :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsSevenHigh##
`(rankbitscommon & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix  :
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsSixHigh##
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOfBestPossibleStraight##
`(rankbitscommon & 0b111110000000000) >= 3 ? f$OpenPPL_ConstCardAce   :
`(rankbitscommon & 0b011111000000000) >= 3 ? f$OpenPPL_ConstCardKing  :
`(rankbitscommon & 0b001111100000000) >= 3 ? f$OpenPPL_ConstCardQueen :
`(rankbitscommon & 0b000111110000000) >= 3 ? f$OpenPPL_ConstCardJack  :
`(rankbitscommon & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen   :
`(rankbitscommon & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine  :
`(rankbitscommon & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(rankbitscommon & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(rankbitscommon & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix   :
`(rankbitscommon & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive  :
-1

##f$OpenPPL_HighCardOf2ndBestPossibleStraight##
(f$OpenPPL_HighCardOfBestPossibleStraight == f$OpenPPL_ConstCardAce)   ? f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsAceHigh   :
(f$OpenPPL_HighCardOfBestPossibleStraight == f$OpenPPL_ConstCardKing)  ? f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsKingHigh  :
(f$OpenPPL_HighCardOfBestPossibleStraight == f$OpenPPL_ConstCardQueen) ? f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsQueenHigh :
(f$OpenPPL_HighCardOfBestPossibleStraight == f$OpenPPL_ConstCardJack)  ? f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsJackHigh  :
(f$OpenPPL_HighCardOfBestPossibleStraight == f$OpenPPL_ConstCardTen)   ? f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsTenHigh   :
(f$OpenPPL_HighCardOfBestPossibleStraight == f$OpenPPL_ConstCardNine)  ? f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsNineHigh  :
(f$OpenPPL_HighCardOfBestPossibleStraight == f$OpenPPL_ConstCardEight) ? f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsEightHigh :
(f$OpenPPL_HighCardOfBestPossibleStraight == f$OpenPPL_ConstCardSeven) ? f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsSevenHigh :
(f$OpenPPL_HighCardOfBestPossibleStraight == f$OpenPPL_ConstCardSix)   ? f$OpenPPL_HighCardOf2ndBestPossibleStraightIfBestStraightIsSixHigh   :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_HighCardOfOurStraight##
// Precondition: we have a straight
`(rankbits & 0b111110000000000) == 5 ? f$OpenPPL_ConstCardAce   :
`(rankbits & 0b011111000000000) == 5 ? f$OpenPPL_ConstCardKing  :
`(rankbits & 0b001111100000000) == 5 ? f$OpenPPL_ConstCardQueen :
`(rankbits & 0b000111110000000) == 5 ? f$OpenPPL_ConstCardJack  :
`(rankbits & 0b000011111000000) == 5 ? f$OpenPPL_ConstCardTen   :
`(rankbits & 0b000001111100000) == 5 ? f$OpenPPL_ConstCardNine  :
`(rankbits & 0b000000111110000) == 5 ? f$OpenPPL_ConstCardEight :
`(rankbits & 0b000000011111000) == 5 ? f$OpenPPL_ConstCardSeven :
`(rankbits & 0b000000001111100) == 5 ? f$OpenPPL_ConstCardSix   :
`(rankbits & 0b000000000111110) == 5 ? f$OpenPPL_ConstCardFive  :
f$OpenPPL_ERROR_We_Dont_Have_Any_Straight__Do_Not_Call_This_Function

##f$OpenPPL_Have2ndNutStraight##
f$OpenPPL_HaveStraight
&& (f$OpenPPL_HighCardOf2ndBestPossibleStraight == f$OpenPPL_HighCardOfOurStraight)

##f$OpenPPL_Have2ndOverPair##
ispair && (f$OpenPPL_RankOfFirstHoleCard < f$OpenPPL_BestBoardCard) && (f$OpenPPL_RankOfFirstHoleCard > f$OpenPPL_2ndBestBoardCard)

##f$OpenPPL_Have2ndTopPair##
f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_2ndBestBoardCard || f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_2ndBestBoardCard

##f$OpenPPL_Have2ndTopSet##
ispair && f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_2ndBestBoardCard

##f$OpenPPL_TopBitOfRankBitsCommon##
(1 << rankhicommon)

##f$OpenPPL_2ndTopBitOfRankBitsCommon##
(1 << f$OpenPPL_2ndBestBoardCard)

##f$OpenPPL_3rdTopBitOfRankBitsCommon##
(1 << f$OpenPPL_3rdBestBoardCard)

##f$OpenPPL_4thTopBitOfRankBitsCommon##
(1 << f$OpenPPL_4thBestBoardCard)

##f$OpenPPL_5thTopBitOfRankBitsCommon##
(1 << f$OpenPPL_5thBestBoardCard)

##f$OpenPPL_RankBitsCommonWithoutTopBit##
rankbitscommon & ~f$OpenPPL_TopBitOfRankBitsCommon

##f$OpenPPL_RankBitsCommonWithoutTopTwoBits##
f$OpenPPL_RankBitsCommonWithoutTopBit & ~f$OpenPPL_2ndTopBitOfRankBitsCommon

##f$OpenPPL_RankBitsCommonWithoutTopThreeBits##
f$OpenPPL_RankBitsCommonWithoutTopTwoBits & ~f$OpenPPL_3rdTopBitOfRankBitsCommon

##f$OpenPPL_RankBitsCommonWithoutTopFourBits##
f$OpenPPL_RankBitsCommonWithoutTopThreeBits & ~f$OpenPPL_4thTopBitOfRankBitsCommon

##f$OpenPPL_Have3rdBestKicker##
(mh_kickerbetter == 2)

##f$OpenPPL_Have3rdBestKickerOrBetter##
f$OpenPPL_Have3rdBestKicker || f$OpenPPL_Have2ndBestKickerOrBetter

##f$OpenPPL_Have3rdBestOverPair##
   $QQ
&& f$OpenPPL_FirstFlopCard < f$OpenPPL_ConstCardQueen
&& f$OpenPPL_SecondFlopCard < f$OpenPPL_ConstCardQueen
&& f$OpenPPL_ThirdFlopCard < f$OpenPPL_ConstCardQueen
&& f$OpenPPL_TurnCard < f$OpenPPL_ConstCardQueen
&& f$OpenPPL_RiverCard < f$OpenPPL_ConstCardQueen

##f$OpenPPL_3rdBestBoardCard##
// Only considering individual ranks, paired cards get ignored this way
// 14 (ace) can't happen, but anyway...
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b100000000000000) != 0 ? f$OpenPPL_ConstCardAce :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b010000000000000) != 0 ? f$OpenPPL_ConstCardKing :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b001000000000000) != 0 ? f$OpenPPL_ConstCardQueen :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000100000000000) != 0 ? f$OpenPPL_ConstCardJack :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000010000000000) != 0 ? f$OpenPPL_ConstCardTen :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000001000000000) != 0 ? f$OpenPPL_ConstCardNine :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000000100000000) != 0 ? f$OpenPPL_ConstCardEight :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000000010000000) != 0 ? f$OpenPPL_ConstCardSeven :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000000001000000) != 0 ? f$OpenPPL_ConstCardSix :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000000000100000) != 0 ? f$OpenPPL_ConstCardFive :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000000000010000) != 0 ? f$OpenPPL_ConstCardFour :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000000000001000) != 0 ? f$OpenPPL_ConstCardThree :
(f$OpenPPL_RankBitsCommonWithoutTopTwoBits & 0b000000000000100) != 0 ? f$OpenPPL_ConstCardTwo :
// Last two bits are ace (low) and unused.
// Both ignored.
-1

##f$OpenPPL_Have3rdBestOverPairOrBetter##
(f$OpenPPL_Have3rdBestOverPair ||  f$OpenPPL_Have2ndBestOverPairOrBetter)

##f$OpenPPL_Have3rdNutFlush##
[f$OpenPPL_HaveFlush && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 2)]

##f$OpenPPL_Have3rdNutFlushDraw##
f$OpenPPL_HaveFlushDraw && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 2)

##f$OpenPPL_Have3rdOverPair##
ispair && (f$OpenPPL_RankOfFirstHoleCard < f$OpenPPL_2ndBestBoardCard) && (f$OpenPPL_RankOfFirstHoleCard > f$OpenPPL_3rdBestBoardCard)

##f$OpenPPL_Have3rdTopPair##
f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_3rdBestBoardCard || f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_3rdBestBoardCard

##f$OpenPPL_Have3rdTopSet##
ispair && f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_3rdBestBoardCard

##f$OpenPPL_Have4thNutFlush##
[f$OpenPPL_HaveFlush && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 3)]

##f$OpenPPL_Have4thNutFlushDraw##
f$OpenPPL_HaveFlushDraw && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 3)

##f$OpenPPL_4thBestBoardCard##
// Only considering individual ranks, paired cards get ignored this way
// 14 (ace) can't happen, but anyway...
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b100000000000000) != 0 ? f$OpenPPL_ConstCardAce :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b010000000000000) != 0 ? f$OpenPPL_ConstCardKing :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b001000000000000) != 0 ? f$OpenPPL_ConstCardQueen :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000100000000000) != 0 ? f$OpenPPL_ConstCardJack :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000010000000000) != 0 ? f$OpenPPL_ConstCardTen :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000001000000000) != 0 ? f$OpenPPL_ConstCardNine :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000000100000000) != 0 ? f$OpenPPL_ConstCardEight :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000000010000000) != 0 ? f$OpenPPL_ConstCardSeven :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000000001000000) != 0 ? f$OpenPPL_ConstCardSix :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000000000100000) != 0 ? f$OpenPPL_ConstCardFive :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000000000010000) != 0 ? f$OpenPPL_ConstCardFour :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000000000001000) != 0 ? f$OpenPPL_ConstCardThree :
(f$OpenPPL_RankBitsCommonWithoutTopThreeBits & 0b000000000000100) != 0 ? f$OpenPPL_ConstCardTwo :
// Last two bits are ace (low) and unused.
// Both ignored.
-1

##f$OpenPPL_Have4thOverPair##
ispair && (f$OpenPPL_RankOfFirstHoleCard < f$OpenPPL_3rdBestBoardCard) && (f$OpenPPL_RankOfFirstHoleCard > f$OpenPPL_4thBestBoardCard)

##f$OpenPPL_Have4thTopPair##
f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_4thBestBoardCard || f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_4thBestBoardCard

##f$OpenPPL_Have4thTopSet##
ispair && f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_4thBestBoardCard

##f$OpenPPL_Have5thNutFlush##
[f$OpenPPL_HaveFlush && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 4)]

##f$OpenPPL_Have5thNutFlushDraw##
f$OpenPPL_HaveFlushDraw && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 4)

##f$OpenPPL_5thBestBoardCard##
// Only considering individual ranks, paired cards get ignored this way
// 14 (ace) can't happen, but anyway...
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b100000000000000) != 0 ? f$OpenPPL_ConstCardAce :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b010000000000000) != 0 ? f$OpenPPL_ConstCardKing :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b001000000000000) != 0 ? f$OpenPPL_ConstCardQueen :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000100000000000) != 0 ? f$OpenPPL_ConstCardJack :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000010000000000) != 0 ? f$OpenPPL_ConstCardTen :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000001000000000) != 0 ? f$OpenPPL_ConstCardNine :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000000100000000) != 0 ? f$OpenPPL_ConstCardEight :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000000010000000) != 0 ? f$OpenPPL_ConstCardSeven :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000000001000000) != 0 ? f$OpenPPL_ConstCardSix :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000000000100000) != 0 ? f$OpenPPL_ConstCardFive :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000000000010000) != 0 ? f$OpenPPL_ConstCardFour :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000000000001000) != 0 ? f$OpenPPL_ConstCardThree :
(f$OpenPPL_RankBitsCommonWithoutTopFourBits & 0b000000000000100) != 0 ? f$OpenPPL_ConstCardTwo :
// Last two bits are ace (low) and unused.
// Both ignored.
-1

##f$OpenPPL_Have5thOverPair##
ispair && (f$OpenPPL_RankOfFirstHoleCard < f$OpenPPL_4thBestBoardCard) && (f$OpenPPL_RankOfFirstHoleCard > f$OpenPPL_5thBestBoardCard)

##f$OpenPPL_HaveAnyKindOfInsideStraightDraw##
// Note: This does also count straightdraws at the board,
// where we don't contribute any card. Special care should be taken
// in f$OpenPPL_HaveInsideStraightDraw
(nstraightfill <= 1)

##f$OpenPPL_HaveBackdoorFlushDrawContributingTwoCards##
   (betround == f$OpenPPL_ConstBetRoundFlop)
&& (nsuited >= 3)
&& ($$ps0 == tsuit)
&& ($$ps1 == tsuit)

##f$OpenPPL_HaveBackdoorNutFlushDraw##
   (betround == f$OpenPPL_ConstBetRoundFlop)
&& (nsuited >= 3)
&& (nsuited > nsuitedcommon) 
&& (f$OpenPPL_NumberOfUnknownSuitedOvercards == 0)

##f$OpenPPL_HaveBackDoor2ndNutFlushDraw##
   (betround == f$OpenPPL_ConstBetRoundFlop)
&& (nsuited >= 3)
&& (nsuited > nsuitedcommon) 
&& (f$OpenPPL_NumberOfUnknownSuitedOvercards == 1)

##f$OpenPPL_HaveBackDoor3rdNutFlushDraw##
   (betround == f$OpenPPL_ConstBetRoundFlop)
&& (nsuited >= 3)
&& (nsuited > nsuitedcommon) 
&& (f$OpenPPL_NumberOfUnknownSuitedOvercards == 2)

##f$OpenPPL_HaveBackdoorFlushDraw##
   f$OpenPPL_HaveBackdoorFlushDrawContributingTwoCards
|| f$OpenPPL_HaveBackdoorNutFlushDraw
|| f$OpenPPL_HaveBackDoor2ndNutFlushDraw

##f$OpenPPL_HaveBestKicker##
(mh_kickerbetter == 0)

##f$OpenPPL_HaveBestKickerOrBetter##
(f$OpenPPL_HaveBestKicker || f$OpenPPL_HavePair  || f$OpenPPL_HaveOverPairOrBetter)

##f$OpenPPL_HaveBestOverPair##
   ($AA
&& f$OpenPPL_FirstFlopCard < f$OpenPPL_ConstCardAce
&& f$OpenPPL_SecondFlopCard < f$OpenPPL_ConstCardAce
&& f$OpenPPL_ThirdFlopCard < f$OpenPPL_ConstCardAce
&& f$OpenPPL_TurnCard < f$OpenPPL_ConstCardAce
&& f$OpenPPL_RiverCard < f$OpenPPL_ConstCardAce)

##f$OpenPPL_HaveBestOverPairOrBetter##
  (f$OpenPPL_HaveBestOverPair
|| f$OpenPPL_HaveTwoPair
|| f$OpenPPL_HaveSet
|| f$OpenPPL_HaveTrips
|| f$OpenPPL_HaveStraight
|| f$OpenPPL_HaveFlush
|| f$OpenPPL_HaveFullHouse
|| f$OpenPPL_HaveQuads
|| f$OpenPPL_HaveStraightFlush)

##f$OpenPPL_LowestBitOfRankBitsCommon##
(1<<ranklocommon)

##f$OpenPPL_RankBitsCommonWithoutLowestBit##
// we negate lowest-bit and then do an and-operation
rankbitscommon & ~f$OpenPPL_LowestBitOfRankBitsCommon

##f$OpenPPL_LowestBoardCard##
ranklocommon

##f$OpenPPL_2ndLowestBoardCard##
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000000000000100) != 1 ? f$OpenPPL_ConstCardTwo   :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000000000001000) != 1 ? f$OpenPPL_ConstCardThree :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000000000010000) != 1 ? f$OpenPPL_ConstCardFour  :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000000000100000) != 1 ? f$OpenPPL_ConstCardFive  :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000000001000000) != 1 ? f$OpenPPL_ConstCardSix   :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000000010000000) != 1 ? f$OpenPPL_ConstCardSeven :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000000100000000) != 1 ? f$OpenPPL_ConstCardEight :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000001000000000) != 1 ? f$OpenPPL_ConstCardNine  :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000010000000000) != 1 ? f$OpenPPL_ConstCardTen   :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b000100000000000) != 1 ? f$OpenPPL_ConstCardJack  :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b001000000000000) != 1 ? f$OpenPPL_ConstCardQueen :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b010000000000000) != 1 ? f$OpenPPL_ConstCardKing  :
(f$OpenPPL_RankBitsCommonWithoutLowestBit & 0b100000000000000) != 1 ? f$OpenPPL_ConstCardAce   :
-1

##f$OpenPPL_HaveBottomPair##
[ isonepair && (rankhiplayer == ranklocommon || rankloplayer == ranklocommon) ]

##f$OpenPPL_HaveBottomSet##
((nrankedcommon == 1) && ispair && isthreeofakind && (rankhiplayer == ranklocommon))

##f$OpenPPL_HaveBottomTrips##
($$pr0 == f$OpenPPL_RankOfBottomPairOnBoard || $$pr1 == f$OpenPPL_RankOfBottomPairOnBoard)

##f$OpenPPL_HaveBottomTwoPair##
   (f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_LowestBoardCard && f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_2ndLowestBoardCard)
|| (f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_2ndLowestBoardCard && f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_LowestBoardCard)

##f$OpenPPL_HaveDoubleGutshotDraw##
   `((rankbits >> 1) & 0b1011101) == 5  // A_345_7
|| `((rankbits >> 2) & 0b1011101) == 5  // 2_456_8
|| `((rankbits >> 3) & 0b1011101) == 5  // 3_567_9
|| `((rankbits >> 4) & 0b1011101) == 5  // 4_678_T
|| `((rankbits >> 5) & 0b1011101) == 5  // 5_789_J
|| `((rankbits >> 6) & 0b1011101) == 5  // 6_89T_Q
|| `((rankbits >> 7) & 0b1011101) == 5  // 8_9TJ_K
|| `((rankbits >> 8) & 0b1011101) == 5  // 9_TJQ_A
|| `((rankbits >> 1) & 0b11011011) == 6 // A2_45_78
|| `((rankbits >> 2) & 0b11011011) == 6 // 23_56_89
|| `((rankbits >> 3) & 0b11011011) == 6 // 34_67_9T
|| `((rankbits >> 4) & 0b11011011) == 6 // 45_78_TJ
|| `((rankbits >> 5) & 0b11011011) == 6 // 56_89_JQ
|| `((rankbits >> 6) & 0b11011011) == 6 // 67_9T_QK
|| `((rankbits >> 7) & 0b11011011) == 6 // 78_TJ_KA

##f$OpenPPL_HaveFlush##
(nsuited >= 5)

##f$OpenPPL_HaveFlushDraw##
(nsuited >= 4)

##f$OpenPPL_HaveFullHouse##
isfullhouse || f$OpenPPL_HaveQuads

##f$OpenPPL_HaveNothing##
!f$OpenPPL_HavePair && !(f$OpenPPL_Overcards == 2) && !f$OpenPPL_HaveBestOverPairOrBetter && !f$OpenPPL_HaveBackdoorFlushDraw && !f$OpenPPL_HaveStraightDraw && !f$OpenPPL_HaveInsideStraightDraw && !f$OpenPPL_HaveFlushDraw
// && !f$OpenPPL_HaveBackdoorStraightDraw

##f$OpenPPL_HaveNutFlush##
    f$OpenPPL_HaveNutStraightFlush
|| [f$OpenPPL_HaveFlush && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 0)]

##f$OpenPPL_HaveNutFlushCard##
(f$OpenPPL_NumberOfUnknownSuitedOvercards == 0)

##f$OpenPPL_HaveNutFlushDraw##
    f$OpenPPL_HaveNutStraightFlush
|| [f$OpenPPL_HaveFlushDraw && (f$OpenPPL_NumberOfUnknownSuitedOvercards == 0)]

##f$OpenPPL_HaveNutStraight##
[ishistraight || f$OpenPPL_HaveNutStraightFlush]

##f$OpenPPL_RankBitsCommonWithAdditionalAce##
rankbitscommon | 0b100000000000010

##f$OpenPPL_RankBitsCommonWithAdditionalKing##
rankbitscommon | 0b010000000000000

##f$OpenPPL_RankBitsCommonWithAdditionalQueen##
rankbitscommon | 0b001000000000000

##f$OpenPPL_RankBitsCommonWithAdditionalJack##
rankbitscommon | 0b000100000000000

##f$OpenPPL_RankBitsCommonWithAdditionalTen##
rankbitscommon | 0b000010000000000

##f$OpenPPL_RankBitsCommonWithAdditionalNine##
rankbitscommon | 0b000001000000000

##f$OpenPPL_RankBitsCommonWithAdditionalEight##
rankbitscommon | 0b000000100000000

##f$OpenPPL_RankBitsCommonWithAdditionalSeven##
rankbitscommon | 0b000000010000000

##f$OpenPPL_RankBitsCommonWithAdditionalSix##
rankbitscommon | 0b000000001000000

##f$OpenPPL_RankBitsCommonWithAdditionalFive##
rankbitscommon | 0b000000000100000

##f$OpenPPL_RankBitsCommonWithAdditionalFour##
rankbitscommon | 0b000000000010000

##f$OpenPPL_RankBitsCommonWithAdditionalThree##
rankbitscommon | 0b000000000001000

##f$OpenPPL_RankBitsCommonWithAdditionalTwo##
rankbitscommon | 0b000000000000100

##f$OpenPPL_BestPossibleStraightForVillainIfAceHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalAce & 0b111110000000000) >= 3 ? f$OpenPPL_ConstCardAce :
// We can ignore all straights without an ace here
`(f$OpenPPL_RankBitsCommonWithAdditionalAce & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfKingHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalKing & 0b111110000000000) >= 3 ? f$OpenPPL_ConstCardAce :
`(f$OpenPPL_RankBitsCommonWithAdditionalKing & 0b011111000000000) >= 3 ? f$OpenPPL_ConstCardKing :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfQueenHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalQueen & 0b111110000000000) >= 3 ? f$OpenPPL_ConstCardAce :
`(f$OpenPPL_RankBitsCommonWithAdditionalQueen & 0b011111000000000) >= 3 ? f$OpenPPL_ConstCardKing :
`(f$OpenPPL_RankBitsCommonWithAdditionalQueen & 0b001111100000000) >= 3 ? f$OpenPPL_ConstCardQueen :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfJackHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalJack & 0b111110000000000) >= 3 ? f$OpenPPL_ConstCardAce :
`(f$OpenPPL_RankBitsCommonWithAdditionalJack & 0b011111000000000) >= 3 ? f$OpenPPL_ConstCardKing :
`(f$OpenPPL_RankBitsCommonWithAdditionalJack & 0b001111100000000) >= 3 ? f$OpenPPL_ConstCardQueen :
`(f$OpenPPL_RankBitsCommonWithAdditionalJack & 0b000111110000000) >= 3 ? f$OpenPPL_ConstCardJack :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfTenHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalTen & 0b111110000000000) >= 3 ? f$OpenPPL_ConstCardAce :
`(f$OpenPPL_RankBitsCommonWithAdditionalTen & 0b011111000000000) >= 3 ? f$OpenPPL_ConstCardKing :
`(f$OpenPPL_RankBitsCommonWithAdditionalTen & 0b001111100000000) >= 3 ? f$OpenPPL_ConstCardQueen :
`(f$OpenPPL_RankBitsCommonWithAdditionalTen & 0b000111110000000) >= 3 ? f$OpenPPL_ConstCardJack :
`(f$OpenPPL_RankBitsCommonWithAdditionalTen & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfNineHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalNine & 0b011111000000000) >= 3 ? f$OpenPPL_ConstCardKing :
`(f$OpenPPL_RankBitsCommonWithAdditionalNine & 0b001111100000000) >= 3 ? f$OpenPPL_ConstCardQueen :
`(f$OpenPPL_RankBitsCommonWithAdditionalNine & 0b000111110000000) >= 3 ? f$OpenPPL_ConstCardJack :
`(f$OpenPPL_RankBitsCommonWithAdditionalNine & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen :
`(f$OpenPPL_RankBitsCommonWithAdditionalNine & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfEightHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalEight & 0b001111100000000) >= 3 ? f$OpenPPL_ConstCardQueen :
`(f$OpenPPL_RankBitsCommonWithAdditionalEight & 0b000111110000000) >= 3 ? f$OpenPPL_ConstCardJack :
`(f$OpenPPL_RankBitsCommonWithAdditionalEight & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen :
`(f$OpenPPL_RankBitsCommonWithAdditionalEight & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine :
`(f$OpenPPL_RankBitsCommonWithAdditionalEight & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfSevenHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalSeven & 0b000111110000000) >= 3 ? f$OpenPPL_ConstCardJack :
`(f$OpenPPL_RankBitsCommonWithAdditionalSeven & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen :
`(f$OpenPPL_RankBitsCommonWithAdditionalSeven & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine :
`(f$OpenPPL_RankBitsCommonWithAdditionalSeven & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(f$OpenPPL_RankBitsCommonWithAdditionalSeven & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfSixHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalSix & 0b000011111000000) >= 3 ? f$OpenPPL_ConstCardTen :
`(f$OpenPPL_RankBitsCommonWithAdditionalSix & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine :
`(f$OpenPPL_RankBitsCommonWithAdditionalSix & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(f$OpenPPL_RankBitsCommonWithAdditionalSix & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(f$OpenPPL_RankBitsCommonWithAdditionalSix & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfFiveHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalFive & 0b000001111100000) >= 3 ? f$OpenPPL_ConstCardNine :
`(f$OpenPPL_RankBitsCommonWithAdditionalFive & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(f$OpenPPL_RankBitsCommonWithAdditionalFive & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(f$OpenPPL_RankBitsCommonWithAdditionalFive & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix :
`(f$OpenPPL_RankBitsCommonWithAdditionalFive & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfFourHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalFour & 0b000000111110000) >= 3 ? f$OpenPPL_ConstCardEight :
`(f$OpenPPL_RankBitsCommonWithAdditionalFour & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(f$OpenPPL_RankBitsCommonWithAdditionalFour & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix :
`(f$OpenPPL_RankBitsCommonWithAdditionalFour & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfThreeHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalThree & 0b000000011111000) >= 3 ? f$OpenPPL_ConstCardSeven :
`(f$OpenPPL_RankBitsCommonWithAdditionalThree & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix :
`(f$OpenPPL_RankBitsCommonWithAdditionalThree & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForVillainIfTwoHitsTheBoard##
`(f$OpenPPL_RankBitsCommonWithAdditionalTwo & 0b000000001111100) >= 3 ? f$OpenPPL_ConstCardSix :
`(f$OpenPPL_RankBitsCommonWithAdditionalTwo & 0b000000000111110) >= 3 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_RankBitsWithAdditionalAce##
rankbits | 0b100000000000010

##f$OpenPPL_RankBitsWithAdditionalKing##
rankbits | 0b010000000000000

##f$OpenPPL_RankBitsWithAdditionalQueen##
rankbits | 0b001000000000000

##f$OpenPPL_RankBitsWithAdditionalJack##
rankbits | 0b000100000000000

##f$OpenPPL_RankBitsWithAdditionalTen##
rankbits | 0b000010000000000

##f$OpenPPL_RankBitsWithAdditionalNine##
rankbits | 0b000001000000000

##f$OpenPPL_RankBitsWithAdditionalEight##
rankbits | 0b000000100000000

##f$OpenPPL_RankBitsWithAdditionalSeven##
rankbits | 0b000000010000000

##f$OpenPPL_RankBitsWithAdditionalSix##
rankbits | 0b000000001000000

##f$OpenPPL_RankBitsWithAdditionalFive##
rankbits | 0b000000000100000

##f$OpenPPL_RankBitsWithAdditionalFour##
rankbits | 0b000000000010000

##f$OpenPPL_RankBitsWithAdditionalThree##
rankbits | 0b000000000001000

##f$OpenPPL_RankBitsWithAdditionalTwo##
rankbits | 0b000000000000100

##f$OpenPPL_BestPossibleStraightForUsIfAceHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalAce & 0b111110000000000) >= 5 ? f$OpenPPL_ConstCardAce :
// We can ignore all straights without an ace here
`(f$OpenPPL_RankBitsWithAdditionalAce & 0b000000000111110) >= 5 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfKingHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalKing & 0b111110000000000) >= 5 ? f$OpenPPL_ConstCardAce :
`(f$OpenPPL_RankBitsWithAdditionalKing & 0b011111000000000) >= 5 ? f$OpenPPL_ConstCardKing :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfQueenHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalQueen & 0b111110000000000) >= 5 ? f$OpenPPL_ConstCardAce :
`(f$OpenPPL_RankBitsWithAdditionalQueen & 0b011111000000000) >= 5 ? f$OpenPPL_ConstCardKing :
`(f$OpenPPL_RankBitsWithAdditionalQueen & 0b001111100000000) >= 5 ? f$OpenPPL_ConstCardQueen :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfJackHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalJack & 0b111110000000000) >= 5 ? f$OpenPPL_ConstCardAce :
`(f$OpenPPL_RankBitsWithAdditionalJack & 0b011111000000000) >= 5 ? f$OpenPPL_ConstCardKing :
`(f$OpenPPL_RankBitsWithAdditionalJack & 0b001111100000000) >= 5 ? f$OpenPPL_ConstCardQueen :
`(f$OpenPPL_RankBitsWithAdditionalJack & 0b000111110000000) >= 5 ? f$OpenPPL_ConstCardJack :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfTenHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalTen & 0b111110000000000) >= 5 ? f$OpenPPL_ConstCardAce :
`(f$OpenPPL_RankBitsWithAdditionalTen & 0b011111000000000) >= 5 ? f$OpenPPL_ConstCardKing :
`(f$OpenPPL_RankBitsWithAdditionalTen & 0b001111100000000) >= 5 ? f$OpenPPL_ConstCardQueen :
`(f$OpenPPL_RankBitsWithAdditionalTen & 0b000111110000000) >= 5 ? f$OpenPPL_ConstCardJack :
`(f$OpenPPL_RankBitsWithAdditionalTen & 0b000011111000000) >= 5 ? f$OpenPPL_ConstCardTen :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfNineHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalNine & 0b011111000000000) >= 5 ? f$OpenPPL_ConstCardKing :
`(f$OpenPPL_RankBitsWithAdditionalNine & 0b001111100000000) >= 5 ? f$OpenPPL_ConstCardQueen :
`(f$OpenPPL_RankBitsWithAdditionalNine & 0b000111110000000) >= 5 ? f$OpenPPL_ConstCardJack :
`(f$OpenPPL_RankBitsWithAdditionalNine & 0b000011111000000) >= 5 ? f$OpenPPL_ConstCardTen :
`(f$OpenPPL_RankBitsWithAdditionalNine & 0b000001111100000) >= 5 ? f$OpenPPL_ConstCardNine :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfEightHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalEight & 0b001111100000000) >= 5 ? f$OpenPPL_ConstCardQueen :
`(f$OpenPPL_RankBitsWithAdditionalEight & 0b000111110000000) >= 5 ? f$OpenPPL_ConstCardJack :
`(f$OpenPPL_RankBitsWithAdditionalEight & 0b000011111000000) >= 5 ? f$OpenPPL_ConstCardTen :
`(f$OpenPPL_RankBitsWithAdditionalEight & 0b000001111100000) >= 5 ? f$OpenPPL_ConstCardNine :
`(f$OpenPPL_RankBitsWithAdditionalEight & 0b000000111110000) >= 5 ? f$OpenPPL_ConstCardEight :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfSevenHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalSeven & 0b000111110000000) >= 5 ? f$OpenPPL_ConstCardJack :
`(f$OpenPPL_RankBitsWithAdditionalSeven & 0b000011111000000) >= 5 ? f$OpenPPL_ConstCardTen :
`(f$OpenPPL_RankBitsWithAdditionalSeven & 0b000001111100000) >= 5 ? f$OpenPPL_ConstCardNine :
`(f$OpenPPL_RankBitsWithAdditionalSeven & 0b000000111110000) >= 5 ? f$OpenPPL_ConstCardEight :
`(f$OpenPPL_RankBitsWithAdditionalSeven & 0b000000011111000) >= 5 ? f$OpenPPL_ConstCardSeven :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfSixHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalSix & 0b000011111000000) >= 5 ? f$OpenPPL_ConstCardTen :
`(f$OpenPPL_RankBitsWithAdditionalSix & 0b000001111100000) >= 5 ? f$OpenPPL_ConstCardNine :
`(f$OpenPPL_RankBitsWithAdditionalSix & 0b000000111110000) >= 5 ? f$OpenPPL_ConstCardEight :
`(f$OpenPPL_RankBitsWithAdditionalSix & 0b000000011111000) >= 5 ? f$OpenPPL_ConstCardSeven :
`(f$OpenPPL_RankBitsWithAdditionalSix & 0b000000001111100) >= 5 ? f$OpenPPL_ConstCardSix :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfFiveHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalFive & 0b000001111100000) >= 5 ? f$OpenPPL_ConstCardNine :
`(f$OpenPPL_RankBitsWithAdditionalFive & 0b000000111110000) >= 5 ? f$OpenPPL_ConstCardEight :
`(f$OpenPPL_RankBitsWithAdditionalFive & 0b000000011111000) >= 5 ? f$OpenPPL_ConstCardSeven :
`(f$OpenPPL_RankBitsWithAdditionalFive & 0b000000001111100) >= 5 ? f$OpenPPL_ConstCardSix :
`(f$OpenPPL_RankBitsWithAdditionalFive & 0b000000000111110) >= 5 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfFourHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalFour & 0b000000111110000) >= 5 ? f$OpenPPL_ConstCardEight :
`(f$OpenPPL_RankBitsWithAdditionalFour & 0b000000011111000) >= 5 ? f$OpenPPL_ConstCardSeven :
`(f$OpenPPL_RankBitsWithAdditionalFour & 0b000000001111100) >= 5 ? f$OpenPPL_ConstCardSix :
`(f$OpenPPL_RankBitsWithAdditionalFour & 0b000000000111110) >= 5 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfThreeHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalThree & 0b000000011111000) >= 5 ? f$OpenPPL_ConstCardSeven :
`(f$OpenPPL_RankBitsWithAdditionalThree & 0b000000001111100) >= 5 ? f$OpenPPL_ConstCardSix :
`(f$OpenPPL_RankBitsWithAdditionalThree & 0b000000000111110) >= 5 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_BestPossibleStraightForUsIfTwoHitsTheBoard##
`(f$OpenPPL_RankBitsWithAdditionalTwo & 0b000000001111100) >= 5 ? f$OpenPPL_ConstCardSix :
`(f$OpenPPL_RankBitsWithAdditionalTwo & 0b000000000111110) >= 5 ? f$OpenPPL_ConstCardFive :
f$OpenPPL_HINT_Such_A_Straight_Does_Not_Exist

##f$OpenPPL_GetBestPossibleStraightIfAceHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfAceHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfAceHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfAceHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfKingHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfKingHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfKingHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfKingHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfQueenHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfQueenHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfQueenHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfQueenHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfJackHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfJackHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfJackHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfJackHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfTenHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfTenHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfTenHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfTenHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfNineHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfNineHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfNineHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfNineHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfEightHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfEightHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfEightHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfEightHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfSevenHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfSevenHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfSevenHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfSevenHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfSixHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfSixHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfSixHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfSixHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfFiveHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfFiveHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfFiveHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfFiveHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfFourHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfFourHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfFourHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfFourHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfThreeHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfThreeHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfThreeHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfThreeHitsTheBoard)

##f$OpenPPL_GetBestPossibleStraightIfTwoHitsTheBoard##
   (f$OpenPPL_BestPossibleStraightForUsIfTwoHitsTheBoard != -1)
&& (f$OpenPPL_BestPossibleStraightForUsIfTwoHitsTheBoard >= f$OpenPPL_BestPossibleStraightForVillainIfTwoHitsTheBoard)

##f$OpenPPL_NumberOfCardranksThatGiveUsTheBestPossibleStraight##
  f$OpenPPL_GetBestPossibleStraightIfAceHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfKingHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfQueenHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfJackHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfTenHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfNineHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfEightHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfSevenHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfSixHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfFiveHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfFourHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfThreeHitsTheBoard
+ f$OpenPPL_GetBestPossibleStraightIfTwoHitsTheBoard

##f$OpenPPL_HaveNutStraightDraw##
(nsuitedcommon < 2) && (f$OpenPPL_NumberOfCardranksThatGiveUsTheBestPossibleStraight >= 2)

##f$OpenPPL_HaveInsideNutStraightDraw##
(f$OpenPPL_NumberOfCardranksThatGiveUsTheBestPossibleStraight >= 1)

##f$OpenPPL_HaveInsideStraightDraw##
f$OpenPPL_HaveAnyKindOfInsideStraightDraw

##f$OpenPPL_HaveNuts##
(nhandshi == 0)

##f$OpenPPL_HaveNutStraightFlush##
isstraightflush && (nhandshi == 0)

##f$OpenPPL_HaveOpenEndedStraightDraw##
f$OpenPPL_HaveStraight
|| ((rankbits >> 0) & 0b111100) == 0b111100 // 5432
|| ((rankbits >> 1) & 0b111100) == 0b111100 // 6543
|| ((rankbits >> 2) & 0b111100) == 0b111100 // 7654
|| ((rankbits >> 3) & 0b111100) == 0b111100 // 8765
|| ((rankbits >> 4) & 0b111100) == 0b111100 // 9876
|| ((rankbits >> 5) & 0b111100) == 0b111100 // T987
|| ((rankbits >> 6) & 0b111100) == 0b111100 // JT98
|| ((rankbits >> 7) & 0b111100) == 0b111100 // QJT9
|| ((rankbits >> 8) & 0b111100) == 0b111100 // KQJT

##f$OpenPPL_HaveQuads##
[ isfourofakind && (nrankedcommon < 4) ]

##f$OpenPPL_HaveOverPair##
ispair && (rankhiplayer > rankhicommon)

##f$OpenPPL_HaveOverPairOrBetter##
f$OpenPPL_HaveOverPair || f$OpenPPL_HaveBestOverPairOrBetter

##f$OpenPPL_HavePair##
[  f$OpenPPL_RankOfFirstHoleCard==f$OpenPPL_RankOfSecondHoleCard
|| f$OpenPPL_RankOfFirstHoleCard==f$OpenPPL_FirstFlopCard 
|| f$OpenPPL_RankOfFirstHoleCard==f$OpenPPL_SecondFlopCard 
|| f$OpenPPL_RankOfFirstHoleCard==f$OpenPPL_ThirdFlopCard 
|| f$OpenPPL_RankOfFirstHoleCard==f$OpenPPL_TurnCard 
|| f$OpenPPL_RankOfFirstHoleCard==f$OpenPPL_RiverCard
|| f$OpenPPL_RankOfSecondHoleCard==f$OpenPPL_FirstFlopCard 
|| f$OpenPPL_RankOfSecondHoleCard==f$OpenPPL_SecondFlopCard 
|| f$OpenPPL_RankOfSecondHoleCard==f$OpenPPL_ThirdFlopCard 
|| f$OpenPPL_RankOfSecondHoleCard==f$OpenPPL_TurnCard 
|| f$OpenPPL_RankOfSecondHoleCard==f$OpenPPL_RiverCard ]

##f$OpenPPL_HavePocketPair##
ispair

##f$OpenPPL_HaveRunnerRunnerFlushAtRiver##
(betround == f$OpenPPL_ConstBetRoundRiver && f$OpenPPL_HaveFlush && nsuitedcommon==3 && f$OpenPPL_SuitsOnFlop!=3 && $$cs3==$$cs4) ? 1:0

##f$OpenPPL_HaveSet##
[  ispair
&& (  (f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_FirstFlopCard) 
   || (f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_SecondFlopCard) 
   || (f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_ThirdFlopCard) 
   || (f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_TurnCard) 
   || (f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_RiverCard)) ]

##f$OpenPPL_HaveTopTrips##
(!ispair && ($$pr0 == f$OpenPPL_RankOfTopPairOnBoard || $$pr1 == f$OpenPPL_RankOfTopPairOnBoard))

##f$OpenPPL_HaveTrips##
!ispair
&&   [(pokerval & threeofakind) && !(pokervalcommon & threeofakind)
  || ((pokerval & fullhouse)    && `(pcbits & 0b11100) == 1)
  ||  (pokerval & fourofakind)  && !(pokervalcommon & fourofakind)]

##f$OpenPPL_HaveStraight##
(nstraightfill == 0)

##f$OpenPPL_HaveStraightDraw##
   f$OpenPPL_HaveOpenEndedStraightDraw 
|| f$OpenPPL_HaveDoubleGutshotDraw

##f$OpenPPL_HaveStraightFlush##
(isstraightflush || isroyalflush)

##f$OpenPPL_CommonCard0Paired##
(f$OpenPPL_FirstFlopCard == f$OpenPPL_SecondFlopCard || f$OpenPPL_FirstFlopCard == f$OpenPPL_ThirdFlopCard || f$OpenPPL_FirstFlopCard == f$OpenPPL_TurnCard || f$OpenPPL_FirstFlopCard == f$OpenPPL_RiverCard)

##f$OpenPPL_CommonCard1Paired##
(f$OpenPPL_SecondFlopCard == f$OpenPPL_FirstFlopCard || f$OpenPPL_SecondFlopCard == f$OpenPPL_ThirdFlopCard || f$OpenPPL_SecondFlopCard == f$OpenPPL_TurnCard || f$OpenPPL_SecondFlopCard == f$OpenPPL_RiverCard)

##f$OpenPPL_CommonCard2Paired##
(f$OpenPPL_ThirdFlopCard == f$OpenPPL_FirstFlopCard || f$OpenPPL_ThirdFlopCard == f$OpenPPL_SecondFlopCard || f$OpenPPL_ThirdFlopCard == f$OpenPPL_TurnCard || f$OpenPPL_ThirdFlopCard == f$OpenPPL_RiverCard)

##f$OpenPPL_CommonCard3Paired##
(f$OpenPPL_TurnCard == f$OpenPPL_FirstFlopCard || f$OpenPPL_TurnCard == f$OpenPPL_SecondFlopCard || f$OpenPPL_TurnCard == f$OpenPPL_ThirdFlopCard || f$OpenPPL_TurnCard == f$OpenPPL_RiverCard)

##f$OpenPPL_CommonCard4Paired##
(f$OpenPPL_RiverCard == f$OpenPPL_FirstFlopCard || f$OpenPPL_RiverCard == f$OpenPPL_SecondFlopCard || f$OpenPPL_RiverCard == f$OpenPPL_ThirdFlopCard || f$OpenPPL_FirstFlopCard == f$OpenPPL_TurnCard)

##f$OpenPPL_RankBitsCommonWithoutCommonRank0Pair##
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_FirstFlopCard != f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~2**f$OpenPPL_FirstFlopCard) :
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_FirstFlopCard == f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~0b100000000000010) :
rankbitscommon

##f$OpenPPL_RankBitsCommonWithoutCommonRank1Pair##
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_SecondFlopCard != f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~2**f$OpenPPL_FirstFlopCard) :
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_SecondFlopCard == f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~0b100000000000010) :
rankbitscommon

##f$OpenPPL_RankBitsCommonWithoutCommonRank2Pair##
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_ThirdFlopCard != f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~2**f$OpenPPL_FirstFlopCard) :
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_ThirdFlopCard == f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~0b100000000000010) :
rankbitscommon

##f$OpenPPL_RankBitsCommonWithoutCommonRank3Pair##
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_TurnCard != f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~2**f$OpenPPL_FirstFlopCard) :
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_TurnCard == f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~0b100000000000010) :
rankbitscommon

##f$OpenPPL_RankBitsCommonWithoutCommonRank4Pair##
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_RiverCard != f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~2**f$OpenPPL_FirstFlopCard) :
[f$OpenPPL_CommonCard0Paired && (f$OpenPPL_RiverCard == f$OpenPPL_ConstCardAce)] ? rankbitscommon & (~0b100000000000010) :
rankbitscommon

##f$OpenPPL_RankBitsCommonWithoutPairs##
  f$OpenPPL_RankBitsCommonWithoutCommonRank0Pair
& f$OpenPPL_RankBitsCommonWithoutCommonRank1Pair
& f$OpenPPL_RankBitsCommonWithoutCommonRank2Pair
& f$OpenPPL_RankBitsCommonWithoutCommonRank3Pair
& f$OpenPPL_RankBitsCommonWithoutCommonRank4Pair

##f$OpenPPL_HighestUnpairedBoardCard##
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardAce)   & 1 ? f$OpenPPL_ConstCardAce   :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardKing)  & 1 ? f$OpenPPL_ConstCardKing  :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardQueen) & 1 ? f$OpenPPL_ConstCardQueen :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardJack)  & 1 ? f$OpenPPL_ConstCardJack  :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardTen)   & 1 ? f$OpenPPL_ConstCardTen   :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardNine)  & 1 ? f$OpenPPL_ConstCardNine  :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardEight) & 1 ? f$OpenPPL_ConstCardEight :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardSeven) & 1 ? f$OpenPPL_ConstCardSeven :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardSix)   & 1 ? f$OpenPPL_ConstCardSix   :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardFive)  & 1 ? f$OpenPPL_ConstCardFive  :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardFour)  & 1 ? f$OpenPPL_ConstCardFour  :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardThree) & 1 ? f$OpenPPL_ConstCardThree :
(f$OpenPPL_RankBitsCommonWithoutPairs >> f$OpenPPL_ConstCardTwo)   & 1 ? f$OpenPPL_ConstCardTwo   : 0

##f$OpenPPL_HaveTopNonBoardPairedPair##
   [(betround >= f$OpenPPL_ConstBetRoundFlop) && (f$OpenPPL_RankOfFirstHoleCard == f$OpenPPL_HighestUnpairedBoardCard)]
|| [(betround >= f$OpenPPL_ConstBetRoundFlop) && (f$OpenPPL_RankOfSecondHoleCard == f$OpenPPL_HighestUnpairedBoardCard)]

##f$OpenPPL_HaveTopPair##
[ f$OpenPPL_RankOfFirstHoleCard==rankhicommon || f$OpenPPL_RankOfSecondHoleCard==rankhicommon ]

##f$OpenPPL_HaveTopSet##
(ispair && (rankhiplayer == rankhicommon))

##f$OpenPPL_HaveTopTwoPair##
(f$OpenPPL_HaveTopPair && f$OpenPPL_Have2ndTopPair)

##f$OpenPPL_RankbitsCommonWithoutAceLow##
// Don't count ace twice in HaveTwoPair
// bit0 is unused
// bit 2 is ace low
//                 AKQJT98765432-- 
rankbitscommon & 0b111111111111100

##f$OpenPPL_HaveTwoPair##
`(rankbitsplayer & f$OpenPPL_RankbitsCommonWithoutAceLow) == 2

##f$OpenPPL_HaveUnderPair##
[ ispair && rankhiplayer<ranklocommon ]

##f$OpenPPL_HaveUnderStraight##
f$OpenPPL_HaveStraight
&& (pcbits == 0b00011 || pcbits == 0b00001)

##f$OpenPPL_NumberOfUnknownSuitedOvercards##
// Suited unknown overcards to holecards,
// e.g. on Board Ah Th, in Hand Jh 9h => 2 suited overcards: Kh Qh.
`((~srankbits & 0x7fff) >> srankhiplayer)

##f$OpenPPL_BoardKicker_FourOfAKindOnBoard##
(betround == f$OpenPPL_ConstBetRoundRiver) ? f$OpenPPL_HighestUnpairedBoardCard : 2

##f$OpenPPL_NFH4OAK_FullHouseOnBoard_WeHaveOverPairToPair##
// 3 is the best strength possible, because two quads are always possible
3
// 1 OverPair for each overcard = 1 higher full house
+ (f$OpenPPL_ConstCardAce - rankhiplayer)
// Higher set possible with pair onboard?
+ [(f$OpenPPL_RankOfTopPairOnBoard > rankhiplayer) ? 1 : 0 ]
// If the cards on board are higher than our pair,
// we have to subtract them again, as otherwise we count them twice,
// as set/quads and OverPair.
+ [(f$OpenPPL_RankOfTopPairOnBoard > rankhiplayer) ? -1 : 0 ]
+ [(f$OpenPPL_RankOfSetOnBoard  > rankhiplayer) ? -1 : 0 ]

##f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePlayTheBoard##
// 3 is the best strength possible, because two quads are always possible
3
// 1 OverPair for each overcard = 1 higher full house
+ (f$OpenPPL_ConstCardAce - rankhiplayer)
// +1 if the pair is higher as the set (higher set possible)
// -1 if the pair is higher as the set (counted twice as OverPair / set)
// but these cases neutralize each other

##f$OpenPPL_RankOfPairOfFullHouse##
// The last 20 bits of pokerval look like XXXX XXXX XXXX YYYY YYYY (see docu)
// XXXX are the rank of the set
// YYYY are the rank of the pair
(pokerval & 0b1111)

##f$OpenPPL_RankOfSetOfFullHouse##
// The last 20 bits of pokerval look like XXXX XXXX XXXX YYYY YYYY (see docu)
// XXXX are the rank of the set
// YYYY are the rank of the pair
((pokerval >> 12) & 0b1111)

##f$OpenPPL_NFH4OAK_PairOnBoard_WeHitThePairAndAnotherCard##
// 1 for each overcard on baord to RankOfTopPairOnBoard, which make better 3oaks possible = better FH
  [[(rankbitscommon & 0x100000000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardAce  )] ? 1 : 0]
+ [[(rankbitscommon & 0x010000000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardKing )] ? 1 : 0]
+ [[(rankbitscommon & 0x001000000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardQueen)] ? 1 : 0]
+ [[(rankbitscommon & 0x000100000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardJack )] ? 1 : 0]
+ [[(rankbitscommon & 0x000010000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardTen  )] ? 1 : 0]
+ [[(rankbitscommon & 0x000001000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardNine )] ? 1 : 0]
+ [[(rankbitscommon & 0x000000100000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardEight)] ? 1 : 0]
+ [[(rankbitscommon & 0x000000010000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardSeven)] ? 1 : 0]
+ [[(rankbitscommon & 0x000000001000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardSix  )] ? 1 : 0]
+ [[(rankbitscommon & 0x000000000100000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardFive )] ? 1 : 0]
+ [[(rankbitscommon & 0x000000000010000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardFour )] ? 1 : 0]
+ [[(rankbitscommon & 0x000000000001000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardThree)] ? 1 : 0]
+ [[(rankbitscommon & 0x000000000000100) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardTwo  )] ? 1 : 0]
// 1 for each board-card that is not the pair on board and higher than the other pair (board-user),
// as there ar higher FHs possible (same set, higher pair)
+ [[(rankbitscommon & 0x100000000000000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardAce  ) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardAce  )] ? 1 : 0]
+ [[(rankbitscommon & 0x010000000000000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardKing ) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardKing )] ? 1 : 0]
+ [[(rankbitscommon & 0x001000000000000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardQueen) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardQueen)] ? 1 : 0]
+ [[(rankbitscommon & 0x000100000000000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardJack ) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardJack )] ? 1 : 0]
+ [[(rankbitscommon & 0x000010000000000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardTen  ) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardTen  )] ? 1 : 0]
+ [[(rankbitscommon & 0x000001000000000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardNine ) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardNine )] ? 1 : 0]
+ [[(rankbitscommon & 0x000000100000000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardEight) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardEight)] ? 1 : 0]
+ [[(rankbitscommon & 0x000000010000000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardSeven) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardSeven)] ? 1 : 0]
+ [[(rankbitscommon & 0x000000001000000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardSix  ) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardSix  )] ? 1 : 0]
+ [[(rankbitscommon & 0x000000000100000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardFive ) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardFive )] ? 1 : 0]
+ [[(rankbitscommon & 0x000000000010000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardFour ) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardFour )] ? 1 : 0]
+ [[(rankbitscommon & 0x000000000001000) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardThree) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardThree)] ? 1 : 0]
+ [[(rankbitscommon & 0x000000000000100) && (f$OpenPPL_RankOfPairOfFullHouse < f$OpenPPL_ConstCardTwo  ) && (f$OpenPPL_RankOfSetOfFullHouse != f$OpenPPL_ConstCardTwo  )] ? 1 : 0]
// + 1 for our hand
+ 1

##f$OpenPPL_OvercardsOnBoardToRankOfSetOfFullHouse##
  (rankbitscommon & 0x100000000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardAce  )
+ (rankbitscommon & 0x010000000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardKing )
+ (rankbitscommon & 0x001000000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardQueen)
+ (rankbitscommon & 0x000100000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardJack )
+ (rankbitscommon & 0x000010000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardTen  )
+ (rankbitscommon & 0x000001000000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardNine )
+ (rankbitscommon & 0x000000100000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardEight)
+ (rankbitscommon & 0x000000010000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardSeven)
+ (rankbitscommon & 0x000000001000000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardSix  )
+ (rankbitscommon & 0x000000000100000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardFive )
+ (rankbitscommon & 0x000000000010000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardFour )
+ (rankbitscommon & 0x000000000001000) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardThree)
+ (rankbitscommon & 0x000000000000100) && (f$OpenPPL_RankOfSetOfFullHouse < f$OpenPPL_ConstCardTwo  )

##f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WeHitBottomSet##
// 3 is the lowest nut rank possible, becuase theres still a quad and a FH with the higher pair possible.
// Theres always a higher pair on board, so if there are two higher ranked cards in common cards,
// theres also a higher set possible with a pocket pair and the remaining single card on board.
3 + [(f$OpenPPL_OvercardsOnBoardToRankOfSetOfFullHouse >= 2) ? 1 : 0]

##f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WeHitTopSet##
// 2 is the lowest nut rank possible, becuase theres still a quad possible.
// Theres might be a higher card on board, so if there is a higher ranked card in common cards then our set rank,
// theres also a higher set possible with a pocket pair and the remaining single card on board.
2 + [(f$OpenPPL_OvercardsOnBoardToRankOfSetOfFullHouse >= 1) ? 1 : 0]

##f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WeHitBottomQuads##
2

##f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WeHitTopQuads##
1

##f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WePairBothPairs##
// Theres might be a higher card on board,
// so if there is a higher ranked card in common cards then our pair ranks,
// there are also a higher pair and a higher set possible.
1
+ [((pokervalcommon & 0b1111) > f$OpenPPL_RankOfPairOfFullHouse) ? 1 : 0]
+ [((pokervalcommon & 0b1111) > f$OpenPPL_RankOfSetOfFullHouse ) ? 1 : 0]

##f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairBothBoardCards##
1

##f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairHighSetOnBoard##
1

##f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairLowSetOnBoard##
2

##f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairHighPairOnBoard##
2

##f$OpenPPL_RankOfTopPairOnBoard##
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_A * f$PrimeCode_A) == 0)) ] ? f$OpenPPL_ConstCardAce :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_K) == 0)) ] ? f$OpenPPL_ConstCardKing :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_Q * f$PrimeCode_Q) == 0)) ] ? f$OpenPPL_ConstCardQueen :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_J * f$PrimeCode_J) == 0)) ] ? f$OpenPPL_ConstCardJack :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_T * f$PrimeCode_T) == 0)) ] ? f$OpenPPL_ConstCardTen :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_9 * f$PrimeCode_9) == 0)) ] ? f$OpenPPL_ConstCardNine :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_8 * f$PrimeCode_8) == 0)) ] ? f$OpenPPL_ConstCardEight :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_7 * f$PrimeCode_7) == 0)) ] ? f$OpenPPL_ConstCardSeven :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_6 * f$PrimeCode_6) == 0)) ] ? f$OpenPPL_ConstCardSix :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_5 * f$PrimeCode_5) == 0)) ] ? f$OpenPPL_ConstCardFive :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_4 * f$PrimeCode_4) == 0)) ] ? f$OpenPPL_ConstCardFour :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_3 * f$PrimeCode_3) == 0)) ] ? f$OpenPPL_ConstCardThree :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_2 * f$PrimeCode_2) == 0)) ] ? f$OpenPPL_ConstCardTwo :
f$OpenPPL_HINT_There_Is_No_Pair_On_The_Board

##f$OpenPPL_RankOfBottomPairOnBoard##
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_2 * f$PrimeCode_2) == 0)) ] ? f$OpenPPL_ConstCardTwo :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_3 * f$PrimeCode_3) == 0)) ] ? f$OpenPPL_ConstCardThree :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_4 * f$PrimeCode_4) == 0)) ] ? f$OpenPPL_ConstCardFour :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_5 * f$PrimeCode_5) == 0)) ] ? f$OpenPPL_ConstCardFive :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_6 * f$PrimeCode_6) == 0)) ] ? f$OpenPPL_ConstCardSix :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_7 * f$PrimeCode_7) == 0)) ] ? f$OpenPPL_ConstCardSeven :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_8 * f$PrimeCode_8) == 0)) ] ? f$OpenPPL_ConstCardEight :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_9 * f$PrimeCode_9) == 0)) ] ? f$OpenPPL_ConstCardNine :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_T * f$PrimeCode_T) == 0)) ] ? f$OpenPPL_ConstCardTen :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_J * f$PrimeCode_J) == 0)) ] ? f$OpenPPL_ConstCardJack :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_Q * f$PrimeCode_Q) == 0)) ] ? f$OpenPPL_ConstCardQueen :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_K) == 0)) ] ? f$OpenPPL_ConstCardKing :
[ ((f$prime_coded_board_ranks % (1 * f$PrimeCode_A * f$PrimeCode_A) == 0)) ] ? f$OpenPPL_ConstCardAce :
f$OpenPPL_HINT_There_Is_No_Pair_On_The_Board

##f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairLowPairOnBoard##
// One quads possible, so the bestcase is second nuts
2
// Bbecause the set does have a higher rank then our pair,
// with the rank of the set theres no OverPair possible,
// and therefore are only 11 OverPairs possible instead of 12 if we do have 22 pair,
// 10 if we have 33 pair, etc.
+ (13 - f$OpenPPL_RankOfBottomPairOnBoard)

##f$OpenPPL_NFH4OAK_PairOnBoard_WeHitASetWithPocketPair##
// 2 is the lowest rank possible, because quads are still possible
2
// For each rank in the common cards above the rank in the pocket cards, theres a higher FH possible.
+  (rankbitscommon & 0b000000000001000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b000000000010000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b000000000100000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b000000001000000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b000000010000000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b000000100000000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b000001000000000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b000010000000000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b000100000000000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b001000000000000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b010000000000000 > rankbitsplayer ? 1 : 0)
+ (rankbitscommon & 0b100000000000000 > rankbitsplayer ? 1 : 0)
// If the Pair on board is higher than our pocket-pair it got already counted
- ((trankcommon > rankhiplayer) ? 1 : 0)

##f$OpenPPL_NFH4OAK_PairOnBoard_WeHitQuads##
// With a single pair on board and quads for us we have the current nuts
1

##f$OpenPPL_NutFullHouseOrFourOfAKind_FourOfAKindOnBoard##
// PreCondition: FourOfAKindOnBoard
//
// case 1: we play the board. e.g. 8888Q, we have J5
[rankhiplayer < f$OpenPPL_BoardKicker_FourOfAKindOnBoard] ?
[
	// case 1A: common kicker is higher then quads, e.g. 8888Q.
   (f$OpenPPL_BoardKicker_FourOfAKindOnBoard > trankcommon ) ? (f$OpenPPL_ConstCardAce - rankhiplayer + 1) :
   // case 1B: common kicker is lower than quads
   (f$OpenPPL_ConstCardAce - rankhiplayer + 1)
] :
// Otherwise: case 2: One of our cards is better then the nonpaired board card, e.g. 88885, we have J2
[
   // case 2A: Our kicker is better than quads, too (better than all board cards)
   (rankhiplayer > trankcommon) ? (f$OpenPPL_ConstCardAce - rankhiplayer + 1) :
   // case 2B: Our kicker is worse than quads, e.g. 88885, we have 72
   (f$OpenPPL_ConstCardAce - rankhiplayer)
]

##f$OpenPPL_NutFullHouseOrFourOfAKind_FullHouseOnBoard##
// Precondition: FH on board
// There are 7 cases:
//
// 1) we pair both board-cards, so we have quads and nobody can have better quads
[(rankhiplayer == f$OpenPPL_BestBoardCard) && (rankloplayer == f$OpenPPL_2ndBestBoardCard)] ? f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairBothBoardCards :
//
// 2) we pair the set on board, which is higher than the pair, so we get the best quads
[((rankhiplayer == f$OpenPPL_RankOfSetOnBoard) || (rankloplayer == f$OpenPPL_RankOfSetOnBoard)) && (f$OpenPPL_RankOfSetOnBoard > f$OpenPPL_2ndBestBoardCard)] ? 1: 1/*f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairHighSetOnBoard :
//
// 3) we pair the set on board, which is lower than the pair, so somebody could have better quads
[((rankhiplayer == f$OpenPPL_RankOfSetOnBoard) || (rankloplayer == f$OpenPPL_RankOfSetOnBoard)) && (f$OpenPPL_RankOfSetOnBoard < 2ndBestBoardCard)] ? f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairLowSetOnBoard :
//
// 4) we pair the pair on board, which is higher than the set, so we get a better FH, but there are still quads possible
[(   (rankhiplayer == f$OpenPPL_RankOfPairOnBoardWithFullHouseOnBoard) || (rankloplayer == f$OpenPPL_RankOfPairOnBoardWithFullHouseOnBoard)) && (f$OpenPPL_RankOfPairOnBoardWithFullHouseOnBoard > f$OpenPPL_RankOfSetOnBoard)] ? f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairHighPairOnBoard :
//
// 5) we pair the pair on board, which is lower than the set, so we play the board, but one kind of quads is no longer possible
[((rankhiplayer == f$OpenPPL_RankOfPairOnBoardWithFullHouseOnBoard) || (rankloplayer == f$OpenPPL_RankOfPairOnBoardWithFullHouseOnBoard)) && (f$OpenPPL_RankOfPairOnBoardWithFullHouseOnBoard < f$OpenPPL_RankOfSetOnBoard)] ? f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePairLowPairOnBoard :
//
// 6) we don't pair anything, but have an OverPair to the pair on board (we probably have to distinguish, if it is higher than the set or lower)
[ispair && (rankhiplayer != f$OpenPPL_BestBoardCard) && (rankhiplayer != f$OpenPPL_2ndBestBoardCard) && (rankhiplayer > f$OpenPPL_RankOfPairOnBoardWithFullHouseOnBoard)] ? f$OpenPPL_NFH4OAK_FullHouseOnBoard_WeHaveOverPairToPair :
//
// 7) we don't have an OverPair to the pair and therefore play the board (probably again 2 cases)
f$OpenPPL_NFH4OAK_FullHouseOnBoard_WePlayTheBoard
*/

##f$OpenPPL_RankOfSetOnBoard##
// Precondition: set on board
trankcommon

##f$OpenPPL_RankOfSpareCardWhenTwoPairOnBoard##
f$OpenPPL_TwoPairOnBoard && !f$OpenPPL_FullHouseOnBoard ?
[    
			 ($$cr0!=f$OpenPPL_RankOfTopPairOnBoard && $$cr0!=f$OpenPPL_RankOfBottomPairOnBoard ? $$cr0:0)
			|($$cr1!=f$OpenPPL_RankOfTopPairOnBoard && $$cr1!=f$OpenPPL_RankOfBottomPairOnBoard ? $$cr1:0)
			|($$cr2!=f$OpenPPL_RankOfTopPairOnBoard && $$cr2!=f$OpenPPL_RankOfBottomPairOnBoard ? $$cr2:0)
			|($$cr3!=f$OpenPPL_RankOfTopPairOnBoard && $$cr3!=f$OpenPPL_RankOfBottomPairOnBoard ? $$cr3:0)
			|($$cr4!=f$OpenPPL_RankOfTopPairOnBoard && $$cr4!=f$OpenPPL_RankOfBottomPairOnBoard ? $$cr4:0)
]:
0

##f$OpenPPL_NutFullHouseOrFourOfAKind_ThreeOfAKindOnBoard##
// Case 1: we have the quads: the nuts
(rankhiplayer == f$OpenPPL_RankOfSetOnBoard) || (rankloplayer ==f$OpenPPL_RankOfSetOnBoard) ? 1 :
// Otherwise: we have a fullhouse with either a pocket-pair or pair a board-card.
// Case 2: Pocket-pair
ispair ?
[
    // Everybody who has a higher pocket pair or hits a higher board-card
    // or hits the set will get a better hand
    (f$OpenPPL_RankOfSetOnBoard > rankhiplayer) ? (f$OpenPPL_ConstCardAce - rankhiplayer + 1) :
    // Otherwise: set is lower, so there is 1 additional card, that loses for us
    (f$OpenPPL_ConstCardAce - rankhiplayer + 1)
] :
// Case 3: We pair the board
[
    // Same logic applies as above:
    // Case 3A: Our higher card hits the board
    (rankhiplayer == f$OpenPPL_BestBoardCard) || (rankhiplayer == f$OpenPPL_2ndBestBoardCard) || (rankhiplayer == f$OpenPPL_3rdBestBoardCard) ?
    [
        (f$OpenPPL_RankOfSetOnBoard > rankhiplayer) ? (f$OpenPPL_ConstCardAce - rankhiplayer) :
        // Otherwise: set is lower, so there is 1 additional card, that loses for us
        (f$OpenPPL_ConstCardAce - rankhiplayer + 1)
    ] :
    [
        // Otherwise rankloplayer paired:
        (f$OpenPPL_RankOfSetOnBoard > rankloplayer) ? (f$OpenPPL_ConstCardAce - rankloplayer) :
        // Otherwise: set is lower, so there is 1 additional card, that loses for us
        (f$OpenPPL_ConstCardAce - rankloplayer + 1)
    ]
]

##f$OpenPPL_NutFullHouseOrFourOfAKind_TwoPairsOnBoard##
// 5 basic cases
//
// 1) we complete the higher pair to quads
[ispair && rankhiplayer == f$OpenPPL_RankOfTopPairOnBoard] ? f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WeHitTopQuads :
//
// 2) we complete the lower pair to quads
[ispair && rankhiplayer == f$OpenPPL_RankOfBottomPairOnBoard] ? f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WeHitBottomQuads :
//
// 3) we pair both pairs: no quads possible, but:
//   * maybe 1 higher FH, if anybody pairs the higher pair and the last board-card, if it is higher than the low pair
//   * maybe 2 higher FHs, as above, if anybody pairs the completes the left board-card to higher trips
[(rankhiplayer == f$OpenPPL_RankOfTopPairOnBoard) && (rankloplayer == f$OpenPPL_RankOfBottomPairOnBoard)] ? f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WePairBothPairs :
//
// 4) we pair the higher board-card; probably several cases
[(rankhiplayer == f$OpenPPL_RankOfTopPairOnBoard) || (rankloplayer == f$OpenPPL_RankOfTopPairOnBoard)] ? f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WeHitTopSet :
//
// 5) we pair the lower board card; probably several cases
[(rankhiplayer == f$OpenPPL_RankOfBottomPairOnBoard) || (rankloplayer == f$OpenPPL_RankOfBottomPairOnBoard)] ? f$OpenPPL_NFH4OAK_TwoPairsOnBoard_WeHitBottomSet :
//
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_NutFullHouseOrFourOfAKind_PairOnBoard##
// Precondition: we have FH or quads, there is a pair on board.
[ispair && (rankhiplayer == trankcommon)] ? f$OpenPPL_NFH4OAK_PairOnBoard_WeHitQuads :
[ispair && (pokerval & fullhouse)] ? f$OpenPPL_NFH4OAK_PairOnBoard_WeHitASetWithPocketPair :
[pokerval & fullhouse] ? f$OpenPPL_NFH4OAK_PairOnBoard_WeHitThePairAndAnotherCard :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_NutFullHouseOrFourOfAKind##
[(pokerval & (fullhouse | fourofakind)) == 0] ? f$OpenPPL_HINT_We_Dont_Have_A_FullHouse_At_All : 
f$OpenPPL_QuadsOnBoard     ? f$OpenPPL_NutFullHouseOrFourOfAKind_FourOfAKindOnBoard :
f$OpenPPL_FullHouseOnBoard ? f$OpenPPL_NutFullHouseOrFourOfAKind_FullHouseOnBoard :
f$OpenPPL_TripsOnBoard     ? f$OpenPPL_NutFullHouseOrFourOfAKind_ThreeOfAKindOnBoard :
f$OpenPPL_TwoPairOnBoard   ? f$OpenPPL_NutFullHouseOrFourOfAKind_TwoPairsOnBoard :
f$OpenPPL_PairOnBoard      ? f$OpenPPL_NutFullHouseOrFourOfAKind_PairOnBoard :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_Overcards##
((f$OpenPPL_RankOfFirstHoleCard > rankhicommon)  && (f$OpenPPL_RankOfSecondHoleCard > rankhicommon))  ? 2 :
((f$OpenPPL_RankOfFirstHoleCard > rankhicommon)  || (f$OpenPPL_RankOfSecondHoleCard > rankhicommon))  ? 1 :
((f$OpenPPL_RankOfFirstHoleCard <= rankhicommon) && (f$OpenPPL_RankOfSecondHoleCard <= rankhicommon)) ? 0 : 0

##f$OpenPPL_PairInHand##
ispair

##f$OpenPPL_RunnerRunnerFlushPossibleAtRiver##
(betround == f$OpenPPL_ConstBetRoundRiver && nsuitedcommon==3 && f$OpenPPL_SuitsOnFlop!=3 && $$cs3==$$cs4) ? 1:0

##f$OpenPPL_SuitsInHand##
($$ps0 == $$ps1) ? 1 :
($$ps0 != $$ps1) ? 2 :
0

//*****************************************************************************
//
// OpenPPL - Other Symbols
//
//*****************************************************************************

##f$OpenPPL_IsFinalTable##
// To be implemented by OpenHoldem 2.2.0
// Currently returning always false (OH 2.1.9.3+)
//
isfinaltable

##f$OpenPPL_Others##
// Always true
1

##f$OpenPPL_FloatingPointRandom_0_100##
// OpenHoldem uses floating point numbers
// and random is in the range [0..1]
// But for OpenPPL we need a range of [0..100]
[ random * 100 ]

##f$OpenPPL_IntegerRandom_0_100##
// Cutting of the fractional part of the random number is tricky.
// We do a bitwise XOR with 0, which doesn't change anything,
// but to evaluate the expression OpenHoldem internally truncates the number 
// to integer (bit-vector).
(f$OpenPPL_FloatingPointRandom_0_100 ^ 0)

##f$OpenPPL_Random##
f$OpenPPL_IntegerRandom_0_100

//*****************************************************************************
//
// OpenPPL - Players and Opponents
//
//*****************************************************************************

##f$OpenPPL_PlayersAtStartOfThisRound##
(betround == f$OpenPPL_ConstBetRoundPreflop) ? nplayersround1 :
(betround == f$OpenPPL_ConstBetRoundFlop)    ? nplayersround2 :
(betround == f$OpenPPL_ConstBetRoundTurn)    ? nplayersround3 :
(betround == f$OpenPPL_ConstBetRoundRiver)   ? nplayersround4 :
f$OpenPPL_ERROR_Betround_Out_Of_Range

##f$OpenPPL_Opponents##
f$OpenPPL_OpponentsLeft

##f$OpenPPL_OpponentsAtTable##
nopponentsdealt

##f$OpenPPL_NumberOfOpponentsAllin##
`f$OpenPPL_Opponents_AllinBits

##f$OpenPPL_OpponentIsAllin##
f$OpenPPL_NumberOfOpponentsAllin > 0

##f$OpenPPL_Opponents_AllinBits##
(betround == f$OpenPPL_ConstBetRoundPreflop) ?
[0
|(((opponentsplayingbits & (1 << 0)) && (currentbet0 > 0) && (balance0 == 0)) ? 1 << 0 : 0)
|(((opponentsplayingbits & (1 << 1)) && (currentbet1 > 0) && (balance1 == 0)) ? 1 << 1 : 0)
|(((opponentsplayingbits & (1 << 2)) && (currentbet2 > 0) && (balance2 == 0)) ? 1 << 2 : 0)
|(((opponentsplayingbits & (1 << 3)) && (currentbet3 > 0) && (balance3 == 0)) ? 1 << 3 : 0)
|(((opponentsplayingbits & (1 << 4)) && (currentbet4 > 0) && (balance4 == 0)) ? 1 << 4 : 0)
|(((opponentsplayingbits & (1 << 5)) && (currentbet5 > 0) && (balance5 == 0)) ? 1 << 5 : 0)
|(((opponentsplayingbits & (1 << 6)) && (currentbet6 > 0) && (balance6 == 0)) ? 1 << 6 : 0)
|(((opponentsplayingbits & (1 << 7)) && (currentbet7 > 0) && (balance7 == 0)) ? 1 << 7 : 0)
|(((opponentsplayingbits & (1 << 8)) && (currentbet8 > 0) && (balance8 == 0)) ? 1 << 8 : 0)
|(((opponentsplayingbits & (1 << 9)) && (currentbet9 > 0) && (balance9 == 0)) ? 1 << 9 : 0)
]
:
[0
|(((opponentsplayingbits & (1 << 0)) && balance0 == 0) ? 1 << 0 : 0)
|(((opponentsplayingbits & (1 << 1)) && balance1 == 0) ? 1 << 1 : 0)
|(((opponentsplayingbits & (1 << 2)) && balance2 == 0) ? 1 << 2 : 0)
|(((opponentsplayingbits & (1 << 3)) && balance3 == 0) ? 1 << 3 : 0)
|(((opponentsplayingbits & (1 << 4)) && balance4 == 0) ? 1 << 4 : 0)
|(((opponentsplayingbits & (1 << 5)) && balance5 == 0) ? 1 << 5 : 0)
|(((opponentsplayingbits & (1 << 6)) && balance6 == 0) ? 1 << 6 : 0)
|(((opponentsplayingbits & (1 << 7)) && balance7 == 0) ? 1 << 7 : 0)
|(((opponentsplayingbits & (1 << 8)) && balance8 == 0) ? 1 << 8 : 0)
|(((opponentsplayingbits & (1 << 9)) && balance9 == 0) ? 1 << 9 : 0)
]

##f$OpenPPL_OpponentsLeft##
// Does also consider players who are allin 
// (contrary to Shankys, who consider players allin in this round, but not from previous rounds).
nopponentsplaying

##f$OpenPPL_OpponentsOnFlop##
(nplayersround2 - 1)

##f$OpenPPL_OpponentsOnTurn##
(nplayersround3 - 1)

##f$OpenPPL_OpponentsOnRiver##
(nplayersround4 - 1)

##f$OpenPPL_OpponentsWithLowerStack##
  (((balance0 + currentbet0) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0001) ? 1:0)
+ (((balance1 + currentbet1) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0002) ? 1:0)
+ (((balance2 + currentbet2) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0004) ? 1:0)
+ (((balance3 + currentbet3) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0008) ? 1:0)
+ (((balance4 + currentbet4) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0010) ? 1:0)
+ (((balance5 + currentbet5) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0020) ? 1:0)
+ (((balance6 + currentbet6) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0040) ? 1:0)
+ (((balance7 + currentbet7) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0080) ? 1:0)
+ (((balance8 + currentbet8) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0100) ? 1:0)
+ (((balance9 + currentbet9) < f$OpenPPL_MaximumPossibleBetsizeIndollars) && (playersseatedbits & 0x0200) ? 1:0)

##f$OpenPPL_StillToActPreflop##
// Precondition: first action, but this gets checked in StillToAct
f$OpenPPL_InBigBlind ? 0 :
f$OpenPPL_InSmallBlind ? 1 :
// Not in the blinds
(f$OpenPPL_MissingSmallBlind > 0) ? (nchairsdealtleft + 1) :
(nchairsdealtleft + 2)

##f$OpenPPL_StillToActPostflop##
// Precondition: first action, but this gets checked in StillToAct
((f$OpenPPL_OpponentsLeft + 1) - betposition)

##f$OpenPPL_StillToAct##
(f$OpenPPL_BotsActionsOnThisRoundIncludingChecks > 0) ? f$OpenPPL_HINT_StillToAct_Is_Only_Valid_On_First_Orbit :
((betround == f$OpenPPL_ConstBetRoundPreflop) && (f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0)) ? f$OpenPPL_StillToActPreflop:
((betround != f$OpenPPL_ConstBetRoundPreflop) && (f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0)) ? f$OpenPPL_StillToActPostflop:
0

//*****************************************************************************
//
// OpenPPL - Position Symbols
//
//*****************************************************************************

// Standard PPL accepts two spellings for the position symbols
// "In BigBlind" and "InBigBlind", "In Button" and "InButton", ...
// Our parser is able to ignore the fillerword "In ",
// but to be more user-friendly and to simplify the converter (less error-handling)
// we decided to provide both forms of naming in the library.

##f$OpenPPL_SmallBlind##
(dealposition == 1)

##f$OpenPPL_BigBlind##
(dealposition == 2)

##f$OpenPPL_Button##
// If the game in not 10-handed, some positions would be both "normal" and in the blinds.
// E.g. for a 9-handed game big-blind would also be counted as EarlyPosition1.
// Therefore we check for "Not InTheBlinds", except for button,
// because "InButton" makes sense even if the game is headsup.
(dealposition == nplayersdealt)

##f$OpenPPL_CutOff##
[(dealposition == nplayersdealt - 1) && !f$OpenPPL_InTheBlinds]

##f$OpenPPL_MiddlePosition3##
[(dealposition == nplayersdealt - 2) && !f$OpenPPL_InTheBlinds]

##f$OpenPPL_MiddlePosition2##
[(dealposition == nplayersdealt - 3) && !f$OpenPPL_InTheBlinds]

##f$OpenPPL_MiddlePosition1##
[(dealposition == nplayersdealt - 4) && !f$OpenPPL_InTheBlinds]

##f$OpenPPL_EarlyPosition3##
[(dealposition == nplayersdealt - 5) && !f$OpenPPL_InTheBlinds]

##f$OpenPPL_EarlyPosition2##
[(dealposition == nplayersdealt - 6) && !f$OpenPPL_InTheBlinds]

##f$OpenPPL_EarlyPosition1##
[(dealposition == nplayersdealt - 7) && !f$OpenPPL_InTheBlinds]

##f$OpenPPL_UTG##
// Under the gun - first to act preflop, 
// independent of the players at the table (at least 3).
// This symbols is especially useful to sitout 
// after the last hand of a session (before the next blind).
f$OpenPPL_MissingSmallBlind ? (dealposition == 2) :
(dealposition == 3)

##f$OpenPPL_InSmallBlind##
f$OpenPPL_SmallBlind

##f$OpenPPL_InBigBlind##
f$OpenPPL_BigBlind

##f$OpenPPL_TheBlinds##
// To be used: In TheBlinds
f$OpenPPL_InTheBlinds

##f$OpenPPL_InTheBlinds##
(f$OpenPPL_InSmallBlind || f$OpenPPL_InBigBlind)

##f$OpenPPL_EarlyPosition##
f$OpenPPL_InEarlyPosition

##f$OpenPPL_InEarlyPosition##
(f$OpenPPL_InEarlyPosition1 || f$OpenPPL_InEarlyPosition2 || f$OpenPPL_InEarlyPosition3)

##f$OpenPPL_MiddlePosition##
f$OpenPPL_InMiddlePosition

##f$OpenPPL_InMiddlePosition##
(f$OpenPPL_InMiddlePosition1 || f$OpenPPL_InMiddlePosition2 || f$OpenPPL_InMiddlePosition3)

##f$OpenPPL_LatePosition##
f$OpenPPL_InLatePosition

##f$OpenPPL_InLatePosition##
(f$OpenPPL_InCutOff || f$OpenPPL_InButton)

##f$OpenPPL_InButton##
f$OpenPPL_Button

##f$OpenPPL_InCutOff##
f$OpenPPL_CutOff

##f$OpenPPL_InMiddlePosition3##
f$OpenPPL_MiddlePosition3

##f$OpenPPL_InMiddlePosition2##
f$OpenPPL_MiddlePosition2

##f$OpenPPL_InMiddlePosition1##
f$OpenPPL_MiddlePosition1

##f$OpenPPL_InEarlyPosition3##
f$OpenPPL_EarlyPosition3

##f$OpenPPL_InEarlyPosition2##
f$OpenPPL_EarlyPosition2

##f$OpenPPL_InEarlyPosition1##
f$OpenPPL_EarlyPosition1

##f$OpenPPL_InUTG##
f$OpenPPL_UTG

##f$OpenPPL_TrueDealPositionOfBigBlind##
f$OpenPPL_MissingSmallBlind ? 1 : 2

##f$OpenPPL_BigBlindChair##
ac_dealpos0 == f$OpenPPL_TrueDealPositionOfBigBlind ? 0 :
ac_dealpos1 == f$OpenPPL_TrueDealPositionOfBigBlind ? 1 :
ac_dealpos2 == f$OpenPPL_TrueDealPositionOfBigBlind ? 2 :
ac_dealpos3 == f$OpenPPL_TrueDealPositionOfBigBlind ? 3 :
ac_dealpos4 == f$OpenPPL_TrueDealPositionOfBigBlind ? 4 :
ac_dealpos5 == f$OpenPPL_TrueDealPositionOfBigBlind ? 5 :
ac_dealpos6 == f$OpenPPL_TrueDealPositionOfBigBlind ? 6 :
ac_dealpos7 == f$OpenPPL_TrueDealPositionOfBigBlind ? 7 :
ac_dealpos8 == f$OpenPPL_TrueDealPositionOfBigBlind ? 8 :
ac_dealpos9 == f$OpenPPL_TrueDealPositionOfBigBlind ? 9 :
f$OpenPPL_ERROR_BigBlindChair_Not_Recognized__Check_Your_TableMap
  

##f$OpenPPL_SmallBlindChair##
f$OpenPPL_MissingSmallBlind ? f$OpenPPL_HINT_There_Is_No_SmallNlind_In_This_Game :
ac_dealpos0 == 1 ? 0 :
ac_dealpos1 == 1 ? 1 :
ac_dealpos2 == 1 ? 2 :
ac_dealpos3 == 1 ? 3 :
ac_dealpos4 == 1 ? 4 :
ac_dealpos5 == 1 ? 5 :
ac_dealpos6 == 1 ? 6 :
ac_dealpos7 == 1 ? 7 :
ac_dealpos8 == 1 ? 8 :
ac_dealpos9 == 1 ? 9 :
f$OpenPPL_ERROR_SmallBlindChair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_ButtonChair##
// We ignore the case of headsup,
// where button = small blind or button = big blind,
// as this seems to be different for each casino.
// For us: button = bigblind, if the game is headsup.
ac_dealpos0 == nplayersdealt ? 0 :
ac_dealpos1 == nplayersdealt ? 1 :
ac_dealpos2 == nplayersdealt ? 2 :
ac_dealpos3 == nplayersdealt ? 3 :
ac_dealpos4 == nplayersdealt ? 4 :
ac_dealpos5 == nplayersdealt ? 5 :
ac_dealpos6 == nplayersdealt ? 6 :
ac_dealpos7 == nplayersdealt ? 7 :
ac_dealpos8 == nplayersdealt ? 8 :
ac_dealpos9 == nplayersdealt ? 9 :
f$OpenPPL_ERROR_ButtonChair_Not_Recognized__Check_Your_TableMap

##f$OpenPPL_CutOffChair##
// We have to make sure, that the userchair in question is not a blind,
// which would be the case for CutOff, if the game was 3-handed.
// For 3-handed games "CutOff" = BigBlind, but blinds take priority.
// We could test for dealposition > 2, but counting players is more simple.
(nplayersdealt <= 3) ? f$OpenPPL_HINT_CutOff_Does_Not_Exist :
ac_dealpos0 == (nplayersdealt - 1) ? 0 :
ac_dealpos1 == (nplayersdealt - 1) ? 1 :
ac_dealpos2 == (nplayersdealt - 1) ? 2 :
ac_dealpos3 == (nplayersdealt - 1) ? 3 :
ac_dealpos4 == (nplayersdealt - 1) ? 4 :
ac_dealpos5 == (nplayersdealt - 1) ? 5 :
ac_dealpos6 == (nplayersdealt - 1) ? 6 :
ac_dealpos7 == (nplayersdealt - 1) ? 7 :
ac_dealpos8 == (nplayersdealt - 1) ? 8 :
ac_dealpos9 == (nplayersdealt - 1) ? 9 :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_MiddlePosition3Chair##
(nplayersdealt <= 4) ? f$OpenPPL_HINT_MiddlePosition3_Does_Not_Exist :
ac_dealpos0 == (nplayersdealt - 2) ? 0 :
ac_dealpos1 == (nplayersdealt - 2) ? 1 :
ac_dealpos2 == (nplayersdealt - 2) ? 2 :
ac_dealpos3 == (nplayersdealt - 2) ? 3 :
ac_dealpos4 == (nplayersdealt - 2) ? 4 :
ac_dealpos5 == (nplayersdealt - 2) ? 5 :
ac_dealpos6 == (nplayersdealt - 2) ? 6 :
ac_dealpos7 == (nplayersdealt - 2) ? 7 :
ac_dealpos8 == (nplayersdealt - 2) ? 8 :
ac_dealpos9 == (nplayersdealt - 2) ? 9 :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_MiddlePosition2Chair##
(nplayersdealt <= 5) ? f$OpenPPL_HINT_MiddlePosition2_Does_Not_Exist :
ac_dealpos0 == (nplayersdealt - 3) ? 0 :
ac_dealpos1 == (nplayersdealt - 3) ? 1 :
ac_dealpos2 == (nplayersdealt - 3) ? 2 :
ac_dealpos3 == (nplayersdealt - 3) ? 3 :
ac_dealpos4 == (nplayersdealt - 3) ? 4 :
ac_dealpos5 == (nplayersdealt - 3) ? 5 :
ac_dealpos6 == (nplayersdealt - 3) ? 6 :
ac_dealpos7 == (nplayersdealt - 3) ? 7 :
ac_dealpos8 == (nplayersdealt - 3) ? 8 :
ac_dealpos9 == (nplayersdealt - 3) ? 9 :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_MiddlePosition1Chair##
(nplayersdealt <= 6) ? f$OpenPPL_HINT_MiddlePosition1_Does_Not_Exist :
ac_dealpos0 == (nplayersdealt - 4) ? 0 :
ac_dealpos1 == (nplayersdealt - 4) ? 1 :
ac_dealpos2 == (nplayersdealt - 4) ? 2 :
ac_dealpos3 == (nplayersdealt - 4) ? 3 :
ac_dealpos4 == (nplayersdealt - 4) ? 4 :
ac_dealpos5 == (nplayersdealt - 4) ? 5 :
ac_dealpos6 == (nplayersdealt - 4) ? 6 :
ac_dealpos7 == (nplayersdealt - 4) ? 7 :
ac_dealpos8 == (nplayersdealt - 4) ? 8 :
ac_dealpos9 == (nplayersdealt - 4) ? 9 :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_EarlyPosition3Chair##
(nplayersdealt <= 7) ? f$OpenPPL_HINT_EarlyPosition3_Does_Not_Exist :
ac_dealpos0 == (nplayersdealt - 5) ? 0 :
ac_dealpos1 == (nplayersdealt - 5) ? 1 :
ac_dealpos2 == (nplayersdealt - 5) ? 2 :
ac_dealpos3 == (nplayersdealt - 5) ? 3 :
ac_dealpos4 == (nplayersdealt - 5) ? 4 :
ac_dealpos5 == (nplayersdealt - 5) ? 5 :
ac_dealpos6 == (nplayersdealt - 5) ? 6 :
ac_dealpos7 == (nplayersdealt - 5) ? 7 :
ac_dealpos8 == (nplayersdealt - 5) ? 8 :
ac_dealpos9 == (nplayersdealt - 5) ? 9 :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_EarlyPosition2Chair##
(nplayersdealt <= 8) ? f$OpenPPL_HINT_EarlyPosition2_Does_Not_Exist :
(ac_dealpos0 == (nplayersdealt - 6)) ? 0 :
(ac_dealpos1 == (nplayersdealt - 6)) ? 1 :
(ac_dealpos2 == (nplayersdealt - 6)) ? 2 :
(ac_dealpos3 == (nplayersdealt - 6)) ? 3 :
(ac_dealpos4 == (nplayersdealt - 6)) ? 4 :
(ac_dealpos5 == (nplayersdealt - 6)) ? 5 :
(ac_dealpos6 == (nplayersdealt - 6)) ? 6 :
(ac_dealpos7 == (nplayersdealt - 6)) ? 7 :
(ac_dealpos8 == (nplayersdealt - 6)) ? 8 :
(ac_dealpos9 == (nplayersdealt - 6)) ? 9 :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_EarlyPosition1Chair##
(nplayersdealt <= 9) ? f$OpenPPL_HINT_EarlyPosition1_Does_Not_Exist :
ac_dealpos0 == (nplayersdealt - 7) ? 0 :
ac_dealpos1 == (nplayersdealt - 7) ? 1 :
ac_dealpos2 == (nplayersdealt - 7) ? 2 :
ac_dealpos3 == (nplayersdealt - 7) ? 3 :
ac_dealpos4 == (nplayersdealt - 7) ? 4 :
ac_dealpos5 == (nplayersdealt - 7) ? 5 :
ac_dealpos6 == (nplayersdealt - 7) ? 6 :
ac_dealpos7 == (nplayersdealt - 7) ? 7 :
ac_dealpos8 == (nplayersdealt - 7) ? 8 :
ac_dealpos9 == (nplayersdealt - 7) ? 9 :
f$OpenPPL_ERROR_THIS_SHOULD_NOT_HAPPEN__THERE_SEEMS_TO_BE_A_PROBLEM_IN_THE_LIBRARY

##f$OpenPPL_DealPositionLastRaiser##
// This function does also count blind-raisers.
(f$OpenPPL_AggressorChair == 0) ? ac_dealpos0 :
(f$OpenPPL_AggressorChair == 1) ? ac_dealpos1 :
(f$OpenPPL_AggressorChair == 2) ? ac_dealpos2 :
(f$OpenPPL_AggressorChair == 3) ? ac_dealpos3 :
(f$OpenPPL_AggressorChair == 4) ? ac_dealpos4 :
(f$OpenPPL_AggressorChair == 5) ? ac_dealpos5 :
(f$OpenPPL_AggressorChair == 6) ? ac_dealpos6 :
(f$OpenPPL_AggressorChair == 7) ? ac_dealpos7 :
(f$OpenPPL_AggressorChair == 8) ? ac_dealpos8 :
(f$OpenPPL_AggressorChair == 9) ? ac_dealpos9 :
f$OpenPPL_HINT_There_Are_No_True_Raisers

##f$OpenPPL_EarlyPosition1Calling##
(callbits1 >> f$OpenPPL_EarlyPosition1Chair) & 1 == 1

##f$OpenPPL_EarlyPosition2Calling##
(callbits1 >> f$OpenPPL_EarlyPosition2Chair) & 1 == 1

##f$OpenPPL_EarlyPosition3Calling##
(callbits1 >> f$OpenPPL_EarlyPosition3Chair) & 1 == 1

##f$OpenPPL_MiddlePosition1Calling##
(callbits1 >> f$OpenPPL_MiddlePosition1Chair) & 1 == 1

##f$OpenPPL_MiddlePosition2Calling##
(callbits1 >> f$OpenPPL_MiddlePosition2Chair) & 1 == 1

##f$OpenPPL_MiddlePosition3Calling##
(callbits1 >> f$OpenPPL_MiddlePosition3Chair) & 1 == 1

##f$OpenPPL_CutOffCalling##
(callbits1 >> f$OpenPPL_CutOffChair) & 1 == 1

##f$OpenPPL_ButtonCalling##
(callbits1 >> f$OpenPPL_ButtonChair) & 1 == 1

##f$OpenPPL_SmallBlindCalling##
(callbits1 >> f$OpenPPL_SmallBlindChair) & 1 == 1

##f$OpenPPL_BigBlindCalling##
(callbits1 >> f$OpenPPL_BigBlindChair) & 11 == 1

##f$OpenPPL_EarlyPosition1Raising##
[(raisbits1 >> f$OpenPPL_EarlyPosition1Chair) & 1 == 1]

##f$OpenPPL_EarlyPosition2Raising##
[(raisbits1 >> f$OpenPPL_EarlyPosition2Chair) & 1 == 1]

##f$OpenPPL_EarlyPosition3Raising##
[(raisbits1 >> f$OpenPPL_EarlyPosition3Chair) & 1 == 1]

##f$OpenPPL_MiddlePosition1Raising##
[(raisbits1 >> f$OpenPPL_MiddlePosition1Chair) & 1 == 1]

##f$OpenPPL_MiddlePosition2Raising##
[(raisbits1 >> f$OpenPPL_MiddlePosition2Chair) & 1 == 1]

##f$OpenPPL_MiddlePosition3Raising##
[(raisbits1 >> f$OpenPPL_MiddlePosition3Chair) & 1 == 1]

##f$OpenPPL_CutOffRaising##
[(raisbits1 >> f$OpenPPL_CutOffChair) & 1 == 1]

##f$OpenPPL_ButtonRaising##
[(raisbits1 >> f$OpenPPL_ButtonChair) & 1 == 1]

##f$OpenPPL_SmallBlindRaising##
   [(raisbits1 >> f$OpenPPL_SmallBlindChair) & 1 == 1]
&& [f$OpenPPL_SmallBlindCurrentBet >= 0.51]

##f$OpenPPL_BigBlindRaising##
   [(raisbits1 >> f$OpenPPL_BigBlindChair) & 1 == 1]
&& [f$OpenPPL_BigBlindCurrentBet >= 1.01]

##f$OpenPPL_FirstCallerPosition##
// We have to search starting from early positions,
// as we want to detect the first one.
f$OpenPPL_EarlyPosition1Calling  ? 9 :
f$OpenPPL_EarlyPosition2Calling  ? 8 :
f$OpenPPL_EarlyPosition3Calling  ? 7 :
f$OpenPPL_MiddlePosition1Calling ? 6 :
f$OpenPPL_MiddlePosition2Calling ? 5 :
f$OpenPPL_MiddlePosition3Calling ? 4 :
f$OpenPPL_CutOffCalling          ? 3 :
f$OpenPPL_ButtonCalling          ? 2 :
f$OpenPPL_SmallBlindCalling      ? 1 :
// Can't be big blind (0), as it is for the first orbit preflop only
-1

##f$OpenPPL_FirstRaiserPosition##
// We have to search starting from early positions,
// as we want to detect the first one.
f$OpenPPL_EarlyPosition1Raising  ? 9 :
f$OpenPPL_EarlyPosition2Raising  ? 8 :
f$OpenPPL_EarlyPosition3Raising  ? 7 :
f$OpenPPL_MiddlePosition1Raising ? 6 :
f$OpenPPL_MiddlePosition2Raising ? 5 :
f$OpenPPL_MiddlePosition3Raising ? 4 :
f$OpenPPL_CutOffRaising          ? 3 :
f$OpenPPL_ButtonRaising          ? 2 :
f$OpenPPL_SmallBlindRaising ? 1 :
// Can't be big blind (0), as it is for the first orbit preflop only
-1

##f$OpenPPL_LastCallerPosition##
// Can't be big blind (0), as it is for the first orbit preflop only
f$OpenPPL_SmallBlindCalling      ? 1 :
f$OpenPPL_ButtonCalling          ? 2 :
f$OpenPPL_CutOffCalling          ? 3 :
f$OpenPPL_MiddlePosition3Calling ? 4 :
f$OpenPPL_MiddlePosition2Calling ? 5 :
f$OpenPPL_MiddlePosition1Calling ? 6 :
f$OpenPPL_EarlyPosition3Calling  ? 7 :
f$OpenPPL_EarlyPosition2Calling  ? 8 :
f$OpenPPL_EarlyPosition1Calling  ? 9 :
-1

##f$OpenPPL_LastRaiserPosition##
// Handling the case of blind-raisers only first
[(betround == f$OpenPPL_ConstBetRoundPreflop) && (ncallbets <= 1)] ? f$OpenPPL_HINT_There_Are_No_True_Raisers :
// Big blind = 0
f$OpenPPL_BigBlindRaising ? 0 :
// Small blind = 1
f$OpenPPL_SmallBlindRaising ? 1 :
// Normal players:
// Button = 2, CutOff = 3, ...
(nplayersdealt - f$OpenPPL_DealPositionLastRaiser + 2)

##f$OpenPPL_First##
0

##f$OpenPPL_Middle##
1

##f$OpenPPL_Last##
2

##f$OpenPPL_Position##
(betposition == 1) ? f$OpenPPL_First :
(betposition == nplayersplaying) ? f$OpenPPL_Last :
f$OpenPPL_Middle


//*******************************************
//  OpenPPL - Poker Tracker Symbols COSTANTS
//*******************************************

##f$OpenPPL_ConstMinHandsFor_PT_VPIP_AND_PFR##
80

##f$OpenPPL_ConstMinHandsFor_PT_AttemptToStealBlinds##
80

##f$OpenPPL_ConstMinHandsFor_PT_BigBlind_FoldBBToSteal##
80

##f$OpenPPL_ConstMinHandsFor_PT_SmallBlind_FoldSBToSteal##
80

//*******************************************
// OpenPPL - Poker Tracker Technical Symbols
//*******************************************

##f$OpenPPL_RaiserExists##
(raischair != -1)

//*****************************************************************************
//
// OpenPPL - Poker Tracker Symbols
//
//*****************************************************************************

##f$OpenPPL_PT_LastRaiser_Hands##
(raischair != -1) ? pt_rhands : -1

##f$OpenPPL_PT_LastRaiser_PFR##
f$OpenPPL_RaiserExists && (f$OpenPPL_PT_LastRaiser_Hands >= f$OpenPPL_ConstMinHandsFor_PT_VPIP_AND_PFR) ? pt_rpfr : -1

##f$OpenPPL_PT_LastRaiser_VPIP##
f$OpenPPL_RaiserExists && (f$OpenPPL_PT_LastRaiser_Hands >= f$OpenPPL_ConstMinHandsFor_PT_VPIP_AND_PFR) ? pt_rvpip : -1

##f$OpenPPL_PT_LastRaiser_AttemptToStealBlinds##
f$OpenPPL_RaiserExists && (f$OpenPPL_PT_LastRaiser_Hands >= f$OpenPPL_ConstMinHandsFor_PT_AttemptToStealBlinds) ? pt_rpfats : -1

##f$OpenPPL_PT_BigBlind_FoldBBToSteal##
f$OpenPPL_BigBlindChair == 0 ? pt_fbbts0 :
f$OpenPPL_BigBlindChair == 1 ? pt_fbbts1 :
f$OpenPPL_BigBlindChair == 2 ? pt_fbbts2 :
f$OpenPPL_BigBlindChair == 3 ? pt_fbbts3 :
f$OpenPPL_BigBlindChair == 4 ? pt_fbbts4 :
f$OpenPPL_BigBlindChair == 5 ? pt_fbbts5 :
f$OpenPPL_BigBlindChair == 6 ? pt_fbbts6 :
f$OpenPPL_BigBlindChair == 7 ? pt_fbbts7 :
f$OpenPPL_BigBlindChair == 8 ? pt_fbbts8 :
f$OpenPPL_BigBlindChair == 9 ? pt_fbbts9 :
-1

##f$OpenPPL_PT_SmallBlind_FoldSBToSteal##
f$OpenPPL_SmallBlindChair == 0 ? pt_fsbts0 :
f$OpenPPL_SmallBlindChair == 1 ? pt_fsbts1 :
f$OpenPPL_SmallBlindChair == 2 ? pt_fsbts2 :
f$OpenPPL_SmallBlindChair == 3 ? pt_fsbts3 :
f$OpenPPL_SmallBlindChair == 4 ? pt_fsbts4 :
f$OpenPPL_SmallBlindChair == 5 ? pt_fsbts5 :
f$OpenPPL_SmallBlindChair == 6 ? pt_fsbts6 :
f$OpenPPL_SmallBlindChair == 7 ? pt_fsbts7 :
f$OpenPPL_SmallBlindChair == 8 ? pt_fsbts8 :
f$OpenPPL_SmallBlindChair == 9 ? pt_fsbts9 :
-1

##f$OpenPPL_PT_SmallBlind_VPIP##
f$OpenPPL_SmallBlindChair == 0 ? pt_vpip0 :
f$OpenPPL_SmallBlindChair == 1 ? pt_vpip1 :
f$OpenPPL_SmallBlindChair == 2 ? pt_vpip2 :
f$OpenPPL_SmallBlindChair == 3 ? pt_vpip3 :
f$OpenPPL_SmallBlindChair == 4 ? pt_vpip4 :
f$OpenPPL_SmallBlindChair == 5 ? pt_vpip5 :
f$OpenPPL_SmallBlindChair == 6 ? pt_vpip6 :
f$OpenPPL_SmallBlindChair == 7 ? pt_vpip7 :
f$OpenPPL_SmallBlindChair == 8 ? pt_vpip8 :
f$OpenPPL_SmallBlindChair == 9 ? pt_vpip9 :
-1


//*****************************************************************************
//
// OpenPPL - Initialization of memory symbols
//
// For history symbols and other information,
// that can't be retrieved from OH-symbols
// and from the current gamestate only.
//
//*****************************************************************************

##f$OpenPPL_TimeToInitMemorySymbols##
// Some advanced symbols depend on memory symbols.
// They are designed to update once per orbit on our turn.
// However: depending on user-settings OpenHoldem might evaluate
// the necessary function even when it is not our turn.
// And incorrect delay-settings might also lead to multiple actions
// on identical frames (OH acts faster as casino/bring can update)
// So we check for isfinalanswer and a changed gamestate.
[isfinalanswer && f$OpenPPL_GameStateChanged]

##f$OpenPPL_HandResetHappened##
[   (betround == f$OpenPPL_ConstBetRoundPreflop) 
 && (f$OpenPPL_BotsActionsOnThisRoundIncludingChecks == 0)]

##f$OpenPPL_ResetUserVariablesOnHandReset##
// f$OpenPPL_ResetUserVariables
// will be auto-generated by the translator.
f$OpenPPL_HandResetHappened ? f$OpenPPL_ResetUserVariables : f$OpenPPL_HINT_Nothing_To_Do_But_All_OK

##f$OpenPPL_GameStateChanged##
// Change in dealerchair => new hand
   (dealerchair != me_re_MemOldGameStateEealerChair)
// Change in currentbet => we did act 
// and the autoplayer executed sucessfully   
|| (currentbet  != me_re_MemOldGameStateCurrentBet)
// Change in potsize: somebody else behind us acted, 
// so we checked or folded sucessfully
|| (pot			!= me_re_MemOldGameStatePotSize)

##f$OpenPPL_RememberCurrentGameState##
   (me_st_MemOldGameStateEealerChair_dealerchair * 0)
|| (me_st_MemOldGameStateCurrentBet_currentbet   * 0)
|| (me_re_MemOldGameStatePotSize_pot             * 0)

##f$OpenPPL_InitMemorySymbols##
(f$OpenPPL_TimeToInitMemorySymbols == f$OpenPPL_False) ? 0 :
// We can't use addition here to call the functions in correct sequential order,
// because OH doesn't add the operands in order:
// http://www.maxinmontreal.com/forums/viewtopic.php?f=111&t=14525&start=0
   [f$OpenPPL_InitMissingSmallBlind * 0]
|| [f$OpenPPL_InitBets * 0]
|| [f$OpenPPL_InitChecks * 0]
|| [f$OpenPPL_InitCalls * 0]
|| [f$OpenPPL_InitRaises * 0]
|| [f$OpenPPL_InitBotsLastPreflopAction * 0]
|| [f$OpenPPL_InitRaisesBeforeFlop * 0]
|| [f$OpenPPL_InitRaisesOnFlop * 0]
|| [f$OpenPPL_InitRaisesOnTurn * 0]
|| [f$OpenPPL_InitMaxOpponentStackSize * 0]
|| [f$OpenPPL_InitMinOpponentStackSize * 0]
|| [f$OpenPPL_InitStartingStackSize * 0]
|| [f$OpenPPL_RememberCurrentGameState * 0]
|| [f$OpenPPL_ResetUserVariablesOnHandReset * 0]
//
// InitBotsLastAction has to be the last init-function to be called
// because it will call the final f$Decision routine.
//
|| [f$OpenPPL_InitBotsLastAction * 0]

//*****************************************************************************
//
// OpenPPL - Various functions of minor importance or to do
//
//*****************************************************************************

##f$OpenPPL_NOT_YET_IMPLEMENTED_YOUR_HELP_IS_REQUIRED##
-1

##f$OpenPPL_HaveBackdoorStraightDraw##
f$OpenPPL_NOT_YET_IMPLEMENTED_YOUR_HELP_IS_REQUIRED

//*****************************************************************************
//
// OpenPPL - the glory end
//
//*****************************************************************************

//*****************************************************************************
//
// OpenPPL Library
//   Supporting functions for the OpenPPL converter
//
// OpenPPL is part of the OpenHoldem project
//   Download page:         http://code.google.com/p/openholdembot/
//   Forums:                http://www.maxinmontreal.com/forums/index.php
//   Licensed under GPL v3: http://www.gnu.org/licenses/gpl.html
//
// The original PPL (Poker Programming Language) got invented by
//   Shanky Bonusbots:      http://bonusbots.com/support/index.php
//
// Required OpenHoldem version: 2.2.0 or later
//   Symbols not working with 2.1.x:
//     * isfinaltable
//
// Contributors:
//   Bob3456
//   CoolBotMe123
//   CrumbleSunday
//   Dr.Kaktuz
//   Efu
//   Fn101
//   Gecko
//   JConner
//   JokeDoke
//   KaeKruse
//   Kyo
//   Lavezzi
//   MerzkiyTipon
//   Morello
//   MrRuder
//   Nik0
//   NPNG
//   Poker_Dog
//   Postenjak
//   Rambam
//   Satanikut
//   Stangelnator
//   SteveG1963
//   Strikles
//   SuperBlak
//   TheHighFish
//   ThemAndMe
//   Want2Learn
//   Zolp
//
//*****************************************************************************

//*****************************************************************************
//
//  OpenPPL - Swag Functions
//  ========================
//
//  Swag-functions for OpenHoldem 2.1.x only.
//  Please delete this file once you use OpenHoldem 2.2.0 and later.
//
//  Swagging (swag = stated wager, a Ray-E.-Bornesian abbreviation)
//  was the old way to handle NL-betsizing.
//  It got replaced by a single f$betsize function in OH 2.2.0
//  and OpenHoldem handles now all adjustments of the betsize to the casino
//  and all other technical things automatically.
//
//*****************************************************************************

##f$OpenPPL_MinimumRaiseAllowed##
// Final betsize if we raise by the minimum.
// Aamount in dollars.
(currentbet + call + sraimin)

##f$OpenPPL_BetSizeAdjustedToMinimumRaise##
// Aamount in dollars.
(f$betsize < f$OpenPPL_MinimumRaiseAllowed) ? f$OpenPPL_MinimumRaiseAllowed :
f$betsize

##f$OpenPPL_PotLimitPotSize##
// The pot for potsize calculations is the current pot plus the amount if we call
// Amount in dollars
(pot + call)

##f$OpenPPL_BetSizeAdjustedToGameType##
// In pot-limit we can only raise by pot-size ;-)
// Aamount in dollars.
[ispl && (f$OpenPPL_BetSizeAdjustedToMinimumRaise > 2 * f$OpenPPL_PotLimitPotSize)] ?
(2 * f$OpenPPL_PotLimitPotSize) : f$OpenPPL_BetSizeAdjustedToMinimumRaise

##f$OpenPPL_BetSizeAdjustedToUsersBalance##
// Aamount in dollars.
(f$OpenPPL_BetSizeAdjustedToGameType > (balance + currentbet)) ?
(balance + currentbet) : f$OpenPPL_BetSizeAdjustedToGameType

##f$OpenPPL_BetSizeAdjustedToCasinosInputRequirements##
// There are 3 different ways, how casinos treat swagged input.
//
// Swag means, the casino will interpret the amount as
// 1) f$srai
// 2) f$srai+call
// 3) f$srai+call+currentbet
// As our f$betsize function treats case X as normal and not case 1,
// we have to do some small calculations in the other direction.
(swagtextmethod == 1) ? f$OpenPPL_BetSizeAdjustedToUsersBalance :
(swagtextmethod == 2) ? [f$OpenPPL_BetSizeAdjustedToUsersBalance - call] :
(swagtextmethod == 3) ? [f$OpenPPL_BetSizeAdjustedToUsersBalance - call - currentbet] :
// This should not happen, but we default to 1)
f$OpenPPL_BetSizeAdjustedToUsersBalance

##f$OpenPPL_HINT_No_NL_BetSizing_In_A_FL_Game##
0

##f$myfunc1##
f$BubbleSafetyFold

##f$myfunc2##
[ (f$OpenPPL_BigBlind && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition == 1 && [ [nopponentsseated != 3] || (nopponentsseated == 3 && f$OpenPPL_OpponentsWithLowerStack == 0)]) ]

##f$myfunc3##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 12 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc4##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 11 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc5##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 10 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc6##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 9 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc7##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 8 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc8##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 7 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc9##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 6 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc10##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 5 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc11##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 4 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc12##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 3 && nopponentsseated >= 2 && [f$OpenPPL_OpponentsWithLowerStack <= 1]) ]

##f$myfunc13##
[ (nopponentsseated <= 2 && f$OpenPPL_Raises >= 1) ]

##f$myfunc14##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 200) ]

##f$myfunc15##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 300) ]

##f$myfunc16##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 400) ]

##f$myfunc17##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 100 && f$OpenPPL_StackSize >= 120) ]

##f$myfunc18##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 120 && f$OpenPPL_StackSize >= 100) ]

##f$myfunc19##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 160 && f$OpenPPL_StackSize >= 75) ]

##f$myfunc20##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 200 && f$OpenPPL_StackSize >= 55) ]

##f$myfunc21##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 240 && f$OpenPPL_StackSize >= 42) ]

##f$myfunc22##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 300 && f$OpenPPL_StackSize >= 34) ]

##f$myfunc23##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 400 && f$OpenPPL_StackSize >= 25) ]

##f$myfunc24##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 500 && f$OpenPPL_StackSize >= 20) ]

##f$myfunc25##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 600 && f$OpenPPL_StackSize >= 17) ]

##f$myfunc26##
[ (nopponentsseated == 1 && f$OpenPPL_BigBlindSize == 800 && f$OpenPPL_StackSize >= 12) ]

##f$myfunc27##
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && nopponentsseated == 1 && f$OpenPPL_StackSize > 15 && f$OpenPPL_OpponentsWithLowerStack == 0) ]

##f$myfunc28##
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && nopponentsseated == 1 && f$OpenPPL_StackSize <= 15 && f$OpenPPL_OpponentsWithLowerStack == 0) ]

##f$myfunc29##
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && nopponentsseated == 1 && f$OpenPPL_OpponentsWithLowerStack == 1) ]

##f$myfunc30##
[ (nopponentsseated == 1 && f$OpenPPL_StillToAct == 1 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc31##
[ (nopponentsseated == 1 && f$OpenPPL_StillToAct == 0 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_Raises == 1 && f$OpenPPL_AmountToCall <= 1) ]

##f$myfunc32##
[ (nopponentsseated == 1 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_Raises == 0) ]

##f$myfunc33##
[ (nopponentsseated == 1 && f$OpenPPL_StackSize >= 15 && f$OpenPPL_Raises == 1) ]

##f$myfunc34##
[ (nopponentsseated == 1 && f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0) ]

##f$myfunc35##
[ (nopponentsseated == 1 && f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 1) ]

##f$myfunc36##
[ (nopponentsseated == 1 && f$OpenPPL_StackSize <= 10) ]

##f$myfunc37##
[ (nopponentsseated == 1 && f$OpenPPL_StackSize <= 6) ]

##f$myfunc38##
[ (nopponentsseated == 1 && f$OpenPPL_StackSize <= 4) ]

##f$myfunc39##
[ (nopponentsseated == 3 && f$OpenPPL_OpponentsWithLowerStack == 0 && f$OpenPPL_StackSize <= 15) ]

##f$myfunc40##
[ (nopponentsseated == 3 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_OpponentsWithLowerStack == 0 && me_re_userbuttonposition) ]

##f$myfunc41##
[ (nopponentsseated == 3 && f$OpenPPL_StackSize <= 6 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_OpponentsWithLowerStack == 0 && me_re_userbuttonposition) ]

##f$myfunc42##
[ (nopponentsseated == 3 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_OpponentsWithLowerStack == 0 && f$OpenPPL_StillToAct <= 4) ]

##f$myfunc43##
[ (nopponentsseated == 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_OpponentsWithLowerStack == 0 && f$OpenPPL_StillToAct == 5) ]

##f$myfunc44##
[ (nopponentsseated == 3 && f$OpenPPL_TotalInvested > 0 && f$OpenPPL_BotsLastAction == f$OpenPPL_Raise) ]

##f$myfunc45##
[ (nopponentsseated == 3 && f$OpenPPL_StackSize >= 12 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc46##
[ (nopponentsseated == 3 && f$OpenPPL_StackSize <= 15 && me_re_userbigblindposition) ]

##f$myfunc47##
[ ([nopponentsseated == 3] && f$OpenPPL_OpponentsWithLowerStack >= 1 && f$OpenPPL_MinOpponentStackSize <= 3 && f$OpenPPL_StackSize >= 8) ]

##f$myfunc48##
[ ([nopponentsseated == 3] && f$OpenPPL_OpponentsWithLowerStack >= 1 && f$OpenPPL_MinOpponentStackSize <= 5 && f$OpenPPL_StackSize >= 10 && f$OpenPPL_StackSize < 20) ]

##f$myfunc49##
[ ([nopponentsseated == 3] && f$OpenPPL_OpponentsWithLowerStack >= 1 && f$OpenPPL_MinOpponentStackSize <= 4 && f$OpenPPL_StackSize >= 8 && f$OpenPPL_StackSize < 20) ]

##f$myfunc50##
[ (nopponentsseated == 3 && f$OpenPPL_OpponentsWithLowerStack >= 1 && f$OpenPPL_MinOpponentStackSize <= 3 && f$OpenPPL_StackSize >= 9) ]

##f$myfunc51##
[ (nopponentsseated == 3 && f$OpenPPL_OpponentsWithLowerStack >= 1 && f$OpenPPL_StackSize >= 15 && me_re_userbuttonposition && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc52##
[ (nopponentsseated == 3 && f$OpenPPL_OpponentsWithLowerStack >= 1 && f$OpenPPL_StackSize >= 15 && me_re_usersmallblindposition && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc53##
[ (nopponentsseated == 3 && f$OpenPPL_OpponentsWithLowerStack >= 1 && f$OpenPPL_StackSize >= 15 && me_re_userbigblindposition && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && [f$OpenPPL_LastRaiserPosition == 1 || f$OpenPPL_LastRaiserPosition == 2] && f$OpenPPL_BetSize == 1) ]

##f$myfunc54##
[ (nopponentsseated == 3 && f$OpenPPL_StackSize >= 15 && me_re_usersmallblindposition && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_Opponents == 1) ]

##f$myfunc55##
[ (nopponentsseated == 3 && f$OpenPPL_StackSize >= 15 && me_re_userbigblindposition && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && [f$OpenPPL_LastRaiserPosition == 1 || f$OpenPPL_LastRaiserPosition == 2] && f$OpenPPL_BetSize == 1) ]

##f$myfunc56##
[ (nopponentsseated == 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize <= 10) ]

##f$myfunc57##
[ (nopponentsseated == 3 && f$OpenPPL_OpponentsWithLowerStack == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize <= 10) ]

##f$myfunc58##
[ (nopponentsseated <= 2 && f$OpenPPL_StackSize <= 10) ]

##f$myfunc59##
[ (nopponentsseated == 2 && f$OpenPPL_BigBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_LastCallerPosition == 1 && f$OpenPPL_OpponentsWithLowerStack == 0 && f$OpenPPL_StackSize <= 10) ]

##f$myfunc60##
[ (nopponentsseated == 2 && f$OpenPPL_Raises == 0) ]

##f$myfunc61##
[ (nopponentsseated == 2 && f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_OpponentsWithLowerStack == 0) ]

##f$myfunc62##
[ (nopponentsseated == 2 && f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_OpponentsWithLowerStack >= 1) ]

##f$myfunc63##
[ (nopponentsseated == 2 && f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_OpponentsWithLowerStack == 0) ]

##f$myfunc64##
[ (nopponentsseated == 2 && f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_OpponentsWithLowerStack >= 1) ]

##f$myfunc65##
[ (nopponentsseated == 2 && f$OpenPPL_Raises >= 1) ]

##f$myfunc66##
[ (f$OpenPPL_Button && f$OpenPPL_MaxStillToActStackSize >= 20 && f$OpenPPL_MinStillToActStackSize >= 20 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc67##
[ (f$OpenPPL_Button && f$OpenPPL_StackSize <= 8 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc68##
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises <= 1 && f$OpenPPL_Opponents == 1) ]

##f$myfunc69##
[ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 4 && f$OpenPPL_MinOpponentStackSize >= 2) ]

##f$myfunc70##
[ (f$OpenPPL_StackSize <= 5 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 4 && f$OpenPPL_MinOpponentStackSize >= 2) ]

##f$myfunc71##
[ (f$OpenPPL_StackSize <= 4 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 4 && f$OpenPPL_MinOpponentStackSize >= 2) ]

##f$myfunc72##
[ (f$OpenPPL_StackSize <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 4 && f$OpenPPL_MinOpponentStackSize >= 1) ]

##f$myfunc73##
[ (f$OpenPPL_StackSize <= 2 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StillToAct <= 4) ]

##f$myfunc74##
[ (nopponentsseated == 2 && f$OpenPPL_OpponentsWithHigherStack == 0) ]

##f$myfunc75##
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises <= 1 && f$OpenPPL_Opponents == 1) ]

##f$myfunc76##
[ (nopponentsseated == 2 && f$OpenPPL_Button && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 6) ]

##f$myfunc77##
[ (nopponentsseated == 2 && f$OpenPPL_Button && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 10) ]

##f$myfunc78##
[ (nopponentsseated == 2 && f$OpenPPL_OpponentIsAllin) ]

##f$myfunc79##
[ (nopponentsseated == 2 && f$OpenPPL_StackSize <= 4 && f$OpenPPL_Raises == 0) ]

##f$myfunc80##
[ (nopponentsseated == 2 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 0) ]

##f$myfunc81##
[ (nopponentsseated == 2 && f$OpenPPL_Button && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_Opponents <= 2) ]

##f$myfunc82##
[ (nopponentsseated == 2 && f$OpenPPL_Button && f$OpenPPL_Raises == 2) ]

##f$myfunc83##
[ (nopponentsseated == 2 && f$OpenPPL_Button && f$OpenPPL_Raises >= 1) ]

##f$myfunc84##
[ (nopponentsseated == 2 && f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_Opponents == 1) ]

##f$myfunc85##
[ (nopponentsseated == 2 && f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1) ]

##f$myfunc86##
[ (nopponentsseated == 2 && f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 1) ]

##f$myfunc87##
[ (nopponentsseated == 2 && f$OpenPPL_BigBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_LastCallerPosition == 1) ]

##f$myfunc88##
[ (nopponentsseated == 2 && f$OpenPPL_BigBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 1 && f$OpenPPL_LastCallerPosition == 2) ]

##f$myfunc89##
[ (nopponentsseated == 2 && f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && [f$OpenPPL_LastRaiserPosition == 1 || f$OpenPPL_LastRaiserPosition == 2]) ]

##f$myfunc90##
[ (nopponentsseated == 2 && f$OpenPPL_BigBlind && f$OpenPPL_Raises == 2) ]

##f$myfunc91##
[ (f$OpenPPL_Button && f$OpenPPL_MaxStillToActStackSize >= 20 && f$OpenPPL_MinStillToActStackSize >= 20 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc92##
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_BigBlind && f$OpenPPL_BetSize <= 10) ]

##f$myfunc93##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 8 && [(nopponentsseated == 2 || nopponentsseated > 3 || f$OpenPPL_OpponentsWithHigherStack == 0)]) ]

##f$myfunc94##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize <= 8 && f$OpenPPL_OpponentsWithLowerStack == 0 && nopponentsseated > 1) ]

##f$myfunc95##
[ (f$OpenPPL_StackSize >= 13 && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize == 1) ]

##f$myfunc96##
[ (f$OpenPPL_StackSize <= 12 && f$OpenPPL_BotsActionsOnThisRound == 0) ]

##f$myfunc97##
[ (f$OpenPPL_StackSize <= 8) ]

##f$myfunc98##
[ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_StillToAct <= 4) ]

##f$myfunc99##
[ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_StillToAct <= 3) ]

##f$myfunc100##
[ (f$OpenPPL_StackSize <= 5 && f$OpenPPL_Raises == 0 && f$OpenPPL_BigBlind) ]

##f$myfunc101##
[ (f$OpenPPL_StackSize <= 4 && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize <= 3) ]

##f$myfunc102##
[ (f$OpenPPL_StackSize <= 3 && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize >= 10 &&  ![(me_re_usersmallblindposition || me_re_userbigblindposition)]) ]

##f$myfunc103##
[ (f$OpenPPL_StackSize <= 10) ]

##f$myfunc104##
[ (f$OpenPPL_StackSize <= 7) ]

##f$myfunc105##
[ (f$OpenPPL_StackSize < 1 && f$OpenPPL_SmallBlind) ]

##f$myfunc106##
[ (f$OpenPPL_StackSize < 1 && f$OpenPPL_BigBlind) ]

##f$myfunc107##
[ (f$OpenPPL_StackSize <= 2 && f$OpenPPL_StillToAct <= 3) ]

##f$myfunc108##
[ (f$OpenPPL_StackSize <= 2 && f$OpenPPL_StillToAct <= 4) ]

##f$myfunc109##
[ (f$OpenPPL_BigBlind && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize <= 1 && f$OpenPPL_Opponents == 1) ]

##f$myfunc110##
[ (f$OpenPPL_BigBlind && f$OpenPPL_OpponentIsAllin && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition == 1) ]

##f$myfunc111##
[ (f$OpenPPL_StackSize < 4 && f$OpenPPL_Raises == 0) ]

##f$myfunc112##
[ (f$OpenPPL_StackSize < 4) ]

##f$myfunc113##
[ (f$OpenPPL_StackSize < 1) ]

##f$myfunc114##
[ (f$OpenPPL_StackSize <= 5 && f$OpenPPL_Button && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc115##
[ (f$OpenPPL_StackSize <= 5 && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_LastRaiserPosition == 2 && f$OpenPPL_SmallBlind) ]

##f$myfunc116##
[ (f$OpenPPL_StackSize <= 5 && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && [f$OpenPPL_LastRaiserPosition == 2 || f$OpenPPL_LastRaiserPosition == 1] && f$OpenPPL_BigBlind) ]

##f$myfunc117##
[ (f$OpenPPL_StackSize < 8 && nopponentsseated > 2) ]

##f$myfunc118##
[ (f$OpenPPL_StackSize <= 10) ]

##f$myfunc119##
[ (f$OpenPPL_StackSize < 12) ]

##f$myfunc120##
[ (f$OpenPPL_StackSize < 15) ]

##f$myfunc121##
[ (nopponentsseated <= 4 && f$OpenPPL_SmallBlind && f$OpenPPL_StackSize <= 12 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc122##
[ (nopponentsseated <= 4 && f$OpenPPL_StillToAct <= 3 && f$OpenPPL_StackSize <= 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc123##
[ (nopponentsseated <= 4 && f$OpenPPL_StillToAct <= 3 && f$OpenPPL_StackSize > 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc124##
[ (nopponentsseated <= 4 && [f$OpenPPL_Button || f$OpenPPL_SmallBlind] && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc125##
[ (nopponentsseated <= 4 && f$OpenPPL_StackSize <= 11) ]

##f$myfunc126##
[ (nopponentsseated == 4 && f$OpenPPL_StackSize <= 7) ]

##f$myfunc127##
[ (nopponentsseated <= 4 && f$OpenPPL_StackSize >= 17) ]

##f$myfunc128##
[ (nopponentsseated <= 4 && f$OpenPPL_StackSize <= 5) ]

##f$myfunc129##
[ (nopponentsseated <= 4 && f$OpenPPL_StackSize < 10 && f$OpenPPL_Button && f$OpenPPL_OpponentsWithLowerStack == 0) ]

##f$myfunc130##
[ (nopponentsseated <= 4 && f$OpenPPL_BigBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_StackSize >= 13 && f$OpenPPL_BigBlindSize >= 50) ]

##f$myfunc131##
[ (f$OpenPPL_BigBlindSize >= 100 && f$OpenPPL_StillToAct <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_StackSize >= 12) ]

##f$myfunc132##
[ (f$OpenPPL_BigBlindSize >= 60 && f$OpenPPL_StillToAct <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 12) ]

##f$myfunc133##
[ (f$OpenPPL_BigBlindSize >= 100 && f$OpenPPL_Button && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 14) ]

##f$myfunc134##
[ (f$OpenPPL_BigBlindSize >= 50 && f$OpenPPL_Button && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 14) ]

##f$myfunc135##
[ (f$OpenPPL_BigBlindSize >= 50 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && [f$OpenPPL_StillToAct <= 3 || nopponentsseated <= 5] && f$OpenPPL_StackSize >= 12) ]

##f$myfunc136##
[ (f$OpenPPL_Button && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 2 && f$OpenPPL_BigBlindSize <= 80 && f$OpenPPL_StackSize >= 12) ]

##f$myfunc137##
[ (nopponentsseated <= 5 && f$OpenPPL_Raises == 0 && f$OpenPPL_OpponentsWithLowerStack >= 1 && f$OpenPPL_StackSize >= 13) ]

##f$myfunc138##
[ (nopponentsseated <= 5 && f$OpenPPL_Raises == 1 && f$OpenPPL_OpponentIsAllin && f$OpenPPL_BetSize <= 12 && f$OpenPPL_BetSize <= 50 * 0.01 * f$OpenPPL_StackSize && f$OpenPPL_Calls == 0 && f$OpenPPL_Opponents == 1) ]

##f$myfunc139##
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1) ]

##f$myfunc140##
[ (f$OpenPPL_StackSize >= 20 && f$OpenPPL_Raises == 1 && f$OpenPPL_BetSize <= 1) ]

##f$myfunc141##
[ (f$OpenPPL_BigBlindSize <= 50 && me_re_userearlyposition) ]

##f$myfunc142##
[ (f$OpenPPL_BigBlindSize <= 50 && me_re_usermiddleposition) ]

##f$myfunc143##
[ (f$OpenPPL_BigBlindSize <= 50 && [me_re_userhijackposition || me_re_usercutoffposition]) ]

##f$myfunc144##
[ (f$OpenPPL_BigBlindSize <= 50 && me_re_userbuttonposition) ]

##f$myfunc145##
[ (f$OpenPPL_BigBlindSize <= 50 && [me_re_usersmallblindposition || me_re_userbigblindposition]) ]

##f$myfunc146##
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_Raises == 1 && f$OpenPPL_StackSize >= 20 && f$OpenPPL_BetSize <= 2) ]

##f$myfunc147##
[ (f$OpenPPL_BigBlindSize >= 100 && f$OpenPPL_Raises == 0) ]

##f$myfunc148##
[ (f$OpenPPL_BigBlindSize >= 100 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc149##
[ (f$OpenPPL_BigBlindSize >= 100 && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0) ]

##f$myfunc150##
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 && f$OpenPPL_StillToActPreflop >= 7) ]

##f$myfunc151##
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 && f$OpenPPL_StillToActPreflop < 7 && f$OpenPPL_StillToActPreflop > 4) ]

##f$myfunc152##
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 && [f$OpenPPL_StillToActPreflop == 4 || f$OpenPPL_StillToActPreflop == 3]) ]

##f$myfunc153##
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 && f$OpenPPL_Button) ]

##f$myfunc154##
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_SmallBlind && f$OpenPPL_StackSize >= 15) ]

##f$myfunc155##
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlind && f$OpenPPL_StackSize >= 20) ]

##f$myfunc156##
[ (f$OpenPPL_BigBlindSize > 50 && f$OpenPPL_BigBlindSize <= 120 && [f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind]) ]

##f$myfunc157##
[ (f$OpenPPL_BigBlindSize > 120 && f$OpenPPL_StillToActPreflop >= 7 && f$OpenPPL_Raises == 0) ]

##f$myfunc158##
[ (f$OpenPPL_BigBlindSize > 120 && f$OpenPPL_StillToActPreflop >= 7 && f$OpenPPL_Raises == 1) ]

##f$myfunc159##
[ (f$OpenPPL_BigBlindSize > 120 && [f$OpenPPL_StillToAct == 6 || f$OpenPPL_StillToAct == 5 || f$OpenPPL_StillToAct == 4] && f$OpenPPL_Raises == 0) ]

##f$myfunc160##
[ (f$OpenPPL_BigBlindSize > 120 && [f$OpenPPL_StillToAct == 6 || f$OpenPPL_StillToAct == 5 || f$OpenPPL_StillToAct == 4] && f$OpenPPL_Raises == 1) ]

##f$myfunc161##
[ (f$OpenPPL_BigBlindSize > 120 && [f$OpenPPL_StillToAct <= 3] && f$OpenPPL_Raises == 0) ]

##f$myfunc162##
[ (f$OpenPPL_BigBlindSize > 120 && [f$OpenPPL_StillToAct <= 3] && f$OpenPPL_Raises == 1) ]

##f$myfunc163##
[ (f$OpenPPL_BigBlindSize > 120 && [f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind] && f$OpenPPL_Raises == 0) ]

##f$myfunc164##
[ (f$OpenPPL_BigBlindSize > 120 && [f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind] && f$OpenPPL_Raises == 1) ]

##f$myfunc165##
[ (f$OpenPPL_Button && f$OpenPPL_MaxStillToActStackSize >= 20 && f$OpenPPL_MinStillToActStackSize >= 20 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc166##
[ (f$OpenPPL_StackSize >= 12 && f$OpenPPL_PairInHand && f$OpenPPL_Raises == 1) ]

##f$myfunc167##
[ (f$OpenPPL_StackSize <= 13) ]

##f$myfunc168##
[ ([f$OpenPPL_BotsLastAction == f$OpenPPL_Call || f$OpenPPL_BotsLastAction == f$OpenPPL_Raise]) ]

##f$myfunc169##
[ (f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0) ]

##f$myfunc170##
[ (f$OpenPPL_StackSize >= 9 && f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 1) ]

##f$myfunc171##
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1) ]

##f$myfunc172##
[ (f$OpenPPL_BigBlind && f$OpenPPL_Raises == 1 && f$OpenPPL_LastRaiserPosition == 1 && f$OpenPPL_StackSize <= 10) ]

##f$myfunc173##
[ (f$OpenPPL_StillToActPreflop >= 7 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc174##
[ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc175##
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Call && f$OpenPPL_Raises == 1) ]

##f$myfunc176##
[ (f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Raises == 1) ]

##f$myfunc177##
[ ([f$OpenPPL_SmallBlind || f$OpenPPL_BigBlind] && f$OpenPPL_Raises == 1) ]

##f$myfunc178##
[ (f$OpenPPL_StillToAct <= 5 && f$OpenPPL_StackSize < 10 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc179##
[ (f$OpenPPL_Button && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_BigBlindSize >= 80 && f$OpenPPL_StackSize >= 12) ]

##f$myfunc180##
[ (f$OpenPPL_StackSize <= 5) ]

##f$myfunc181##
[ (f$OpenPPL_StillToAct <= 2 && f$OpenPPL_StackSize <= 7) ]

##f$myfunc182##
[ (f$OpenPPL_StackSize < 10 && f$OpenPPL_StillToAct <= 4 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc183##
[ (f$OpenPPL_StillToAct <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc184##
[ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_MaxStillToActStackSize <= 15 && f$OpenPPL_StillToAct <= 2) ]

##f$myfunc185##
[ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0) ]

##f$myfunc186##
[ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_StillToAct <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc187##
[ (f$OpenPPL_StackSize <= 5 && f$OpenPPL_Raises == 0) ]

##f$myfunc188##
[ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && nopponentsseated <= 6) ]

##f$myfunc189##
[ (me_re_userbigblindposition && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0 && f$OpenPPL_CallsSinceLastRaise == 0 && [f$OpenPPL_LastRaiserPosition == 1 || f$OpenPPL_LastRaiserPosition == 2] && f$OpenPPL_StackSize >= 6) ]

##f$myfunc190##
[ (f$OpenPPL_StackSize <= 10 && [me_re_userbigblindposition || me_re_usersmallblindposition] && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0) ]

##f$myfunc191##
[ (f$OpenPPL_StackSize <= 6 && f$OpenPPL_Raises == 1 && f$OpenPPL_BotsLastAction == f$OpenPPL_None && f$OpenPPL_CallsSinceLastRaise == 0) ]

##f$myfunc192##
[ (f$OpenPPL_Raises >= 0) ]

##f$myfunc193##
[ (f$OpenPPL_Raises == 0 && me_re_usersmallblindposition && me_re_userheadsup && [f$OpenPPL_StackSize <= 10 || f$OpenPPL_MaxStillToActStackSize <= 10]) ]

##f$myfunc194##
[ (f$OpenPPL_StackSize <= 10 && f$OpenPPL_StillToAct <= 3 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc195##
[ (f$OpenPPL_StackSize >= 13 && f$OpenPPL_Raises == 0 && me_re_userlateposition && f$OpenPPL_BotsLastAction == f$OpenPPL_None) ]

##f$myfunc196##
[ (f$OpenPPL_BigBlindSize >= 200 && f$OpenPPL_StackSize >= 8 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc197##
[ (f$OpenPPL_StillToAct <= 3 && f$OpenPPL_StackSize <= 9 && nopponentsseated >= 5 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc198##
[ (me_re_userbbissmallerthanbotstack && f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && me_re_userbubble) ]

##f$myfunc199##
[ (f$OpenPPL_OpponentsWithLowerStack == 0 && f$OpenPPL_StackSize <= 5 && f$OpenPPL_Raises <= 1) ]

##f$myfunc200##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls >= 1 && f$OpenPPL_StackSize >= 8) ]

##f$myfunc201##
[ (f$OpenPPL_StackSize <= 10 &&  ![(me_re_userbubble)] && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0) ]

##f$myfunc202##
[ (f$OpenPPL_SmallBlind && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 &&  ![(me_re_userbubble || me_re_userheadsup || me_re_userchipleader)]) ]

##f$myfunc203##
[ (f$OpenPPL_BigBlind && f$OpenPPL_LastRaiserPosition == 1 && f$OpenPPL_Raises == 1 && f$OpenPPL_Calls == 0) ]

##f$myfunc204##
[ (f$OpenPPL_Others) ]

##f$myfunc205##
[ (f$OpenPPL_BotRaisedBeforeFlop && f$OpenPPL_BotsLastAction == f$OpenPPL_Raise && f$OpenPPL_Opponents <= 3 && f$OpenPPL_BotsActionsOnThisRound == 0) ]

##f$myfunc206##
[ (f$OpenPPL_HaveSet) ]

##f$myfunc207##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && me_re_usergameearly) ]

##f$myfunc208##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && me_re_usergameearly) ]

##f$myfunc209##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_First && me_re_usergameearly) ]

##f$myfunc210##
[ (f$OpenPPL_Opponents >= 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && me_re_usergameearly) ]

##f$myfunc211##
[ (f$OpenPPL_Opponents >= 2 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && me_re_usergameearly) ]

##f$myfunc212##
[ (f$OpenPPL_Opponents >= 2 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_First && me_re_usergameearly) ]

##f$myfunc213##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && me_re_usergameearly) ]

##f$myfunc214##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && me_re_usergameearly) ]

##f$myfunc215##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Middle && me_re_usergameearly) ]

##f$myfunc216##
[ (f$OpenPPL_Opponents >= 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && me_re_usergameearly) ]

##f$myfunc217##
[ (f$OpenPPL_Opponents >= 2 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && me_re_usergameearly) ]

##f$myfunc218##
[ (f$OpenPPL_Opponents >= 2 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Middle && me_re_usergameearly) ]

##f$myfunc219##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && me_re_usergameearly) ]

##f$myfunc220##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && me_re_usergameearly) ]

##f$myfunc221##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Last && me_re_usergameearly) ]

##f$myfunc222##
[ (f$OpenPPL_Opponents >= 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && me_re_usergameearly) ]

##f$myfunc223##
[ (f$OpenPPL_Opponents >= 2 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && me_re_usergameearly) ]

##f$myfunc224##
[ (f$OpenPPL_Opponents >= 2 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Last && me_re_usergameearly) ]

##f$myfunc225##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc226##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc227##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_First && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc228##
[ (f$OpenPPL_Opponents == 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc229##
[ (f$OpenPPL_Opponents == 2 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc230##
[ (f$OpenPPL_Opponents == 2 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_First && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc231##
[ (f$OpenPPL_Opponents > 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc232##
[ (f$OpenPPL_Opponents > 2 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_First && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc233##
[ (f$OpenPPL_Opponents > 2 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_First && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc234##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc235##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc236##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Middle && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc237##
[ (f$OpenPPL_Opponents == 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc238##
[ (f$OpenPPL_Opponents == 2 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc239##
[ (f$OpenPPL_Opponents == 2 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Middle && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc240##
[ (f$OpenPPL_Opponents > 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc241##
[ (f$OpenPPL_Opponents > 2 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Middle && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc242##
[ (f$OpenPPL_Opponents > 2 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Middle && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc243##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc244##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc245##
[ (f$OpenPPL_Opponents == 1 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc246##
[ (f$OpenPPL_Opponents == 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc247##
[ (f$OpenPPL_Opponents == 2 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc248##
[ (f$OpenPPL_Opponents == 2 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc249##
[ (f$OpenPPL_Opponents > 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc250##
[ (f$OpenPPL_Opponents > 2 && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0 && f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc251##
[ (f$OpenPPL_Opponents > 2 && f$OpenPPL_Bets <= 1 && f$OpenPPL_Raises >= 1 && f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc252##
[ (me_re_useraggressorpreflop && f$OpenPPL_Bets == 1 && f$OpenPPL_Raises == 0) ]

##f$myfunc253##
[ (me_re_useraggressorpreflop && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Opponents <= 2) ]

##f$myfunc254##
[ (me_re_userheadsup && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0) ]

##f$myfunc255##
[ (me_re_userheadsup && f$OpenPPL_RaisesBeforeFlop && f$OpenPPL_BotsLastPreflopAction == f$OpenPPL_Call) ]

##f$myfunc256##
[ (f$OpenPPL_Opponents <= 2 &&  ![(f$OpenPPL_RaisesBeforeFlop)] &&  ![(f$OpenPPL_FlushPossible)] && f$OpenPPL_PairOnBoard) ]

##f$myfunc257##
[ ( ![(f$OpenPPL_RaisesBeforeFlop)] && f$OpenPPL_Opponents == 1 && f$OpenPPL_StackSize <= 7 && f$OpenPPL_HavePair &&  ![(f$OpenPPL_HaveBottomPair)] &&  ![(f$OpenPPL_PairOnBoard)]) ]

##f$myfunc258##
[ (f$OpenPPL_Others) ]

##f$myfunc259##
[ ([f$OpenPPL_Position == f$OpenPPL_First || f$OpenPPL_Position == f$OpenPPL_Middle] && me_re_usergameearly) ]

##f$myfunc260##
[ (f$OpenPPL_Position == f$OpenPPL_Last && me_re_usergameearly) ]

##f$myfunc261##
[ ([f$OpenPPL_Position == f$OpenPPL_First || f$OpenPPL_Position == f$OpenPPL_Middle] && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc262##
[ (f$OpenPPL_Position == f$OpenPPL_Last && [me_re_usergamemiddle || me_re_usergamelate]) ]

##f$myfunc263##
[ (f$OpenPPL_BotRaisedBeforeFlop && f$OpenPPL_NoBettingOnFlop && f$OpenPPL_Position == f$OpenPPL_Last && f$OpenPPL_Opponents < 2 && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)]) ]

##f$myfunc264##
[ ( ![(f$OpenPPL_NoBettingOnFlop)] &&  ![(f$OpenPPL_CalledOnFlop)] && f$OpenPPL_Bets == 0 && f$OpenPPL_Raises == 0 && me_re_userheadsup) ]

##f$myfunc265##
[ (f$OpenPPL_NoBettingOnFlop &&  ![f$OpenPPL_RaisesBeforeFlop] &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_OneCardStraightPossible)]) ]

##f$myfunc266##
[ (f$OpenPPL_NoBettingOnFlop &&  ![(f$OpenPPL_RaisesBeforeFlop)] && me_re_useritm &&  ![(f$OpenPPL_OneCardStraightPossible)] &&  ![(f$OpenPPL_OneCardFlushPossible)] &&  ![(f$OpenPPL_TripsOnBoard)] &&  ![(f$OpenPPL_TwoPairOnBoard)]) ]

##f$myfunc267##
[ (f$OpenPPL_NoBettingOnFlop && f$OpenPPL_HadTopPairOnFlop && f$OpenPPL_HaveTopPair &&  ![(f$OpenPPL_FlushPossible)] &&  ![(f$OpenPPL_TwoPairOnBoard)] &&  ![(f$OpenPPL_TripsOnBoard)] &&  ![(f$OpenPPL_OneCardStraightPossible)]) ]

##f$myfunc268##
[ (f$OpenPPL_Others) ]

##f$myfunc269##
[ (f$OpenPPL_Position == f$OpenPPL_First) ]

##f$myfunc270##
[ (f$OpenPPL_Position == f$OpenPPL_Middle) ]

##f$myfunc271##
[ (f$OpenPPL_Position == f$OpenPPL_Last) ]

##f$myfunc272##
[ (f$OpenPPL_Others) ]

##f$LastCaller_VPIP##
f$OpenPPL_LastCallerPosition == 0 ? ptt_vpip0 :
f$OpenPPL_LastCallerPosition == 1 ? ptt_vpip1 :
f$OpenPPL_LastCallerPosition == 2 ? ptt_vpip2 :
f$OpenPPL_LastCallerPosition == 3 ? ptt_vpip3 :
f$OpenPPL_LastCallerPosition == 4 ? ptt_vpip4 :
f$OpenPPL_LastCallerPosition == 5 ? ptt_vpip5 :
f$OpenPPL_LastCallerPosition == 6 ? ptt_vpip6 :
f$OpenPPL_LastCallerPosition == 7 ? ptt_vpip7 :
f$OpenPPL_LastCallerPosition == 8 ? ptt_vpip8 :
f$OpenPPL_LastCallerPosition == 9 ? ptt_vpip9 :
-1

##f$LastCaller_PFR##
f$OpenPPL_LastCallerPosition == 0 ? ptt_pfr0 :
f$OpenPPL_LastCallerPosition == 1 ? ptt_pfr1 :
f$OpenPPL_LastCallerPosition == 2 ? ptt_pfr2 :
f$OpenPPL_LastCallerPosition == 3 ? ptt_pfr3 :
f$OpenPPL_LastCallerPosition == 4 ? ptt_pfr4 :
f$OpenPPL_LastCallerPosition == 5 ? ptt_pfr5 :
f$OpenPPL_LastCallerPosition == 6 ? ptt_pfr6 :
f$OpenPPL_LastCallerPosition == 7 ? ptt_pfr7 :
f$OpenPPL_LastCallerPosition == 8 ? ptt_pfr8 :
f$OpenPPL_LastCallerPosition == 9 ? ptt_pfr9 :
-1

##f$LastCaller_Hands##
f$OpenPPL_LastCallerPosition == 0 ? ptt_hands0 :
f$OpenPPL_LastCallerPosition == 1 ? ptt_hands1 :
f$OpenPPL_LastCallerPosition == 2 ? ptt_hands2 :
f$OpenPPL_LastCallerPosition == 3 ? ptt_hands3 :
f$OpenPPL_LastCallerPosition == 4 ? ptt_hands4 :
f$OpenPPL_LastCallerPosition == 5 ? ptt_hands5 :
f$OpenPPL_LastCallerPosition == 6 ? ptt_hands6 :
f$OpenPPL_LastCallerPosition == 7 ? ptt_hands7 :
f$OpenPPL_LastCallerPosition == 8 ? ptt_hands8 :
f$OpenPPL_LastCallerPosition == 9 ? ptt_hands9 :
-1

##f$SmallBlind_VPIP##
f$OpenPPL_SmallBlindChair == 0 ? ptt_vpip0 :
f$OpenPPL_SmallBlindChair == 1 ? ptt_vpip1 :
f$OpenPPL_SmallBlindChair == 2 ? ptt_vpip2 :
f$OpenPPL_SmallBlindChair == 3 ? ptt_vpip3 :
f$OpenPPL_SmallBlindChair == 4 ? ptt_vpip4 :
f$OpenPPL_SmallBlindChair == 5 ? ptt_vpip5 :
f$OpenPPL_SmallBlindChair == 6 ? ptt_vpip6 :
f$OpenPPL_SmallBlindChair == 7 ? ptt_vpip7 :
f$OpenPPL_SmallBlindChair == 8 ? ptt_vpip8 :
f$OpenPPL_SmallBlindChair == 9 ? ptt_vpip9 :
-1

##f$BigBlind_VPIP##
f$OpenPPL_BigBlindChair == 0 ? ptt_vpip0 :
f$OpenPPL_BigBlindChair == 1 ? ptt_vpip1 :
f$OpenPPL_BigBlindChair == 2 ? ptt_vpip2 :
f$OpenPPL_BigBlindChair == 3 ? ptt_vpip3 :
f$OpenPPL_BigBlindChair == 4 ? ptt_vpip4 :
f$OpenPPL_BigBlindChair == 5 ? ptt_vpip5 :
f$OpenPPL_BigBlindChair == 6 ? ptt_vpip6 :
f$OpenPPL_BigBlindChair == 7 ? ptt_vpip7 :
f$OpenPPL_BigBlindChair == 8 ? ptt_vpip8 :
f$OpenPPL_BigBlindChair == 9 ? ptt_vpip9 :
-1

##f$Button_VPIP##
f$OpenPPL_ButtonChair == 0 ? ptt_vpip0 :
f$OpenPPL_ButtonChair == 1 ? ptt_vpip1 :
f$OpenPPL_ButtonChair == 2 ? ptt_vpip2 :
f$OpenPPL_ButtonChair == 3 ? ptt_vpip3 :
f$OpenPPL_ButtonChair == 4 ? ptt_vpip4 :
f$OpenPPL_ButtonChair == 5 ? ptt_vpip5 :
f$OpenPPL_ButtonChair == 6 ? ptt_vpip6 :
f$OpenPPL_ButtonChair == 7 ? ptt_vpip7 :
f$OpenPPL_ButtonChair == 8 ? ptt_vpip8 :
f$OpenPPL_ButtonChair == 9 ? ptt_vpip9 :
-1

##f$BigBlind_Hands##
f$OpenPPL_BigBlindChair == 0 ? ptt_hands0 :
f$OpenPPL_BigBlindChair == 1 ? ptt_hands1 :
f$OpenPPL_BigBlindChair == 2 ? ptt_hands2 :
f$OpenPPL_BigBlindChair == 3 ? ptt_hands3 :
f$OpenPPL_BigBlindChair == 4 ? ptt_hands4 :
f$OpenPPL_BigBlindChair == 5 ? ptt_hands5 :
f$OpenPPL_BigBlindChair == 6 ? ptt_hands6 :
f$OpenPPL_BigBlindChair == 7 ? ptt_hands7 :
f$OpenPPL_BigBlindChair == 8 ? ptt_hands8 :
f$OpenPPL_BigBlindChair == 9 ? ptt_hands9 :
-1

##f$SmallBlind_Hands##
f$OpenPPL_SmallBlindChair == 0 ? ptt_hands0 :
f$OpenPPL_SmallBlindChair == 1 ? ptt_hands1 :
f$OpenPPL_SmallBlindChair == 2 ? ptt_hands2 :
f$OpenPPL_SmallBlindChair == 3 ? ptt_hands3 :
f$OpenPPL_SmallBlindChair == 4 ? ptt_hands4 :
f$OpenPPL_SmallBlindChair == 5 ? ptt_hands5 :
f$OpenPPL_SmallBlindChair == 6 ? ptt_hands6 :
f$OpenPPL_SmallBlindChair == 7 ? ptt_hands7 :
f$OpenPPL_SmallBlindChair == 8 ? ptt_hands8 :
f$OpenPPL_SmallBlindChair == 9 ? ptt_hands9 :
-1

##f$Button_Hands##
f$OpenPPL_ButtonChair == 0 ? ptt_hands0 :
f$OpenPPL_ButtonChair == 1 ? ptt_hands1 :
f$OpenPPL_ButtonChair == 2 ? ptt_hands2 :
f$OpenPPL_ButtonChair == 3 ? ptt_hands3 :
f$OpenPPL_ButtonChair == 4 ? ptt_hands4 :
f$OpenPPL_ButtonChair == 5 ? ptt_hands5 :
f$OpenPPL_ButtonChair == 6 ? ptt_hands6 :
f$OpenPPL_ButtonChair == 7 ? ptt_hands7 :
f$OpenPPL_ButtonChair == 8 ? ptt_hands8 :
f$OpenPPL_ButtonChair == 9 ? ptt_hands9 :
-1

##f$LastRaiser_StackSize##
f$OpenPPL_LastRaiserPosition == 0 ? balance0 :
f$OpenPPL_LastRaiserPosition == 1 ? balance1 :
f$OpenPPL_LastRaiserPosition == 2 ? balance2 :
f$OpenPPL_LastRaiserPosition == 3 ? balance3 :
f$OpenPPL_LastRaiserPosition == 4 ? balance4 :
f$OpenPPL_LastRaiserPosition == 5 ? balance5 :
f$OpenPPL_LastRaiserPosition == 6 ? balance6 :
f$OpenPPL_LastRaiserPosition == 7 ? balance7 :
f$OpenPPL_LastRaiserPosition == 8 ? balance8 :
f$OpenPPL_LastRaiserPosition == 9 ? balance9 :
-1

##f$LastCaller_StackSize##
f$OpenPPL_LastCallerPosition == 0 ? balance0 :
f$OpenPPL_LastCallerPosition == 1 ? balance1 :
f$OpenPPL_LastCallerPosition == 2 ? balance2 :
f$OpenPPL_LastCallerPosition == 3 ? balance3 :
f$OpenPPL_LastCallerPosition == 4 ? balance4 :
f$OpenPPL_LastCallerPosition == 5 ? balance5 :
f$OpenPPL_LastCallerPosition == 6 ? balance6 :
f$OpenPPL_LastCallerPosition == 7 ? balance7 :
f$OpenPPL_LastCallerPosition == 8 ? balance8 :
f$OpenPPL_LastCallerPosition == 9 ? balance9 :
-1

##f$SmallBlind_StackSize##
f$OpenPPL_SmallBlindChair == 0 ? balance0 :
f$OpenPPL_SmallBlindChair == 1 ? balance1 :
f$OpenPPL_SmallBlindChair == 2 ? balance2 :
f$OpenPPL_SmallBlindChair == 3 ? balance3 :
f$OpenPPL_SmallBlindChair == 4 ? balance4 :
f$OpenPPL_SmallBlindChair == 5 ? balance5 :
f$OpenPPL_SmallBlindChair == 6 ? balance6 :
f$OpenPPL_SmallBlindChair == 7 ? balance7 :
f$OpenPPL_SmallBlindChair == 8 ? balance8 :
f$OpenPPL_SmallBlindChair == 9 ? balance9 :
-1

##f$BigBlind_StackSize##
f$OpenPPL_BigBlindChair == 0 ? balance0 :
f$OpenPPL_BigBlindChair == 1 ? balance1 :
f$OpenPPL_BigBlindChair == 2 ? balance2 :
f$OpenPPL_BigBlindChair == 3 ? balance3 :
f$OpenPPL_BigBlindChair == 4 ? balance4 :
f$OpenPPL_BigBlindChair == 5 ? balance5 :
f$OpenPPL_BigBlindChair == 6 ? balance6 :
f$OpenPPL_BigBlindChair == 7 ? balance7 :
f$OpenPPL_BigBlindChair == 8 ? balance8 :
f$OpenPPL_BigBlindChair == 9 ? balance9 :
-1

##f$Button_StackSize##
f$OpenPPL_ButtonChair == 0 ? balance0 :
f$OpenPPL_ButtonChair == 1 ? balance1 :
f$OpenPPL_ButtonChair == 2 ? balance2 :
f$OpenPPL_ButtonChair == 3 ? balance3 :
f$OpenPPL_ButtonChair == 4 ? balance4 :
f$OpenPPL_ButtonChair == 5 ? balance5 :
f$OpenPPL_ButtonChair == 6 ? balance6 :
f$OpenPPL_ButtonChair == 7 ? balance7 :
f$OpenPPL_ButtonChair == 8 ? balance8 :
f$OpenPPL_ButtonChair == 9 ? balance9 :
-1

##f$BubbleSafetyFold##
[ (f$OpenPPL_Raises >= 2 && f$OpenPPL_OpponentIsAllin) || (f$OpenPPL_OpponentsWithLowerStack >= 3) || (f$OpenPPL_Raises >= 1 && f$OpenPPL_OpponentsWithLowerStack >= 2) || (f$OpenPPL_Raises == 1 && f$OpenPPL_CallsSinceLastRaise == 1 && f$OpenPPL_OpponentIsAllin) || (me_re_userdoubledupstack) || (f$OpenPPL_StackSize >= 5 && f$OpenPPL_MinOpponentStackSize <= 3) || (f$OpenPPL_StackSize >= 3 && f$OpenPPL_MinOpponentStackSize <= 2) || (f$OpenPPL_OpponentsWithLowerStack >= 1 && f$OpenPPL_MinOpponentStackSize <= 3) ] && f$OpenPPL_OpponentsAtTable == 3

##f$DrawFlop##
[ ([((f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_Q) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_J) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_K * f$PrimeCode_T) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_Q * f$PrimeCode_J) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_Q * f$PrimeCode_T) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_Q * f$PrimeCode_9) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_J * f$PrimeCode_T) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_J * f$PrimeCode_9) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_J * f$PrimeCode_8) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_T * f$PrimeCode_9) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_9 * f$PrimeCode_8) == 0)) || ((f$prime_coded_board_ranks % (1 * f$PrimeCode_8 * f$PrimeCode_7) == 0)) || f$OpenPPL_SuitsOnFlop == 2] &&  ![(f$OpenPPL_FlushPossible || f$OpenPPL_StraightPossible || f$OpenPPL_PairOnBoard)]) ]

##f$PushOnButton##
((f$BigBlind_StackSize < 25 && f$BigBlind_StackSize > 5) && (f$SmallBlind_StackSize < 25 && f$SmallBlind_StackSize > 5))

##f$ATCBtnSteal##
[ (f$OpenPPL_Button && f$OpenPPL_Opponents <= 2 && f$OpenPPL_Calls == 0 && f$OpenPPL_AmountToCall <= 1 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_StackSize >= 17 && f$OpenPPL_BigBlindSize >= 60 && f$SmallBlind_StackSize > 10 && f$BigBlind_StackSize > 10 && f$OpenPPL_Random <= 75) ]

##f$fold2pair2scaryboard##
[ (f$OpenPPL_Raises >= 2 && (f$OpenPPL_TotalInvested <= 30 * 0.01 * f$OpenPPL_StackSize) && (f$OpenPPL_AmountToCall >= 50 * 0.01 * f$OpenPPL_StackSize) && (![(f$OpenPPL_HaveTopTwoPair)] || f$OpenPPL_FlushPossible || f$OpenPPL_StraightPossible || f$OpenPPL_PairOnBoard)) ]

##f$callcommittedallin##
[ (f$OpenPPL_OpponentIsAllin && f$OpenPPL_AmountToCall < 1 && f$OpenPPL_StackSize >= 4) ]

##f$myfunc273##
[ (nopponentsseated == 2 && f$OpenPPL_BotsActionsOnThisRound == 0 && f$OpenPPL_Raises == 0 && f$OpenPPL_Calls == 0 && f$OpenPPL_StackSize >= 13) ]

##f$mybubblesafety##
[ (nopponents==3 && f$OpenPPL_OpponentsWithLowerStack >= 2) ]

